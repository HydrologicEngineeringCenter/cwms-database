---
name: Build And Test CWMS Database
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: build and test
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4.2.2
      - name: setup java
        uses: actions/setup-java@v4.6.0
        with:
          distribution: 'temurin'
          java-version: '8'
      - name: Oracle Tools
        id: cache-oracle-tools
        uses: actions/cache@v4.2.0
        with:
          path: oracle-tools
          key: oracle-tools-23.6
      - name: Download Oracle Tools
        if: steps.cache-oracle-tools.outputs.cache-hit != 'true'
        run: |
          mkdir -p oracle-tools/instantclient
          cd oracle-tools
          wget https://download.oracle.com/otn_software/linux/instantclient/2360000/instantclient-basic-linux.x64-23.6.0.24.10.zip
          wget https://download.oracle.com/otn_software/linux/instantclient/2360000/instantclient-sqlplus-linux.x64-23.6.0.24.10.zip
          wget https://download.oracle.com/otn_software/linux/instantclient/2360000/instantclient-tools-linux.x64-23.6.0.24.10.zip
          unzip -o instantclient-basic*.zip
          unzip -o instantclient-sqlplus*.zip
          unzip -o instantclient-tools*.zip
          rm -f *.zip
          mv instantclient_*/* ./instantclient
          ls -l instantclient/
          wget https://github.com/utPLSQL/utPLSQL-cli/releases/download/3.1.9/utPLSQL-cli.zip
          unzip utPLSQL-cli.zip
          rm utPLSQL-cli.zip
      - name: Set Oracle Home
        run: |
          sudo apt-get update
          sudo apt-get install -y libaio1t64
          sudo ln -sf /usr/lib/x86_64-linux-gnu/libaio.so.1t64 oracle-tools/instantclient/libaio.so.1
          cd oracle-tools
          echo "LD_LIBRARY_PATH=`pwd`/instantclient:$LD_LIBRARY_PATH" >> $GITHUB_ENV
          echo "ORACLE_HOME=`pwd`/instantclient" >> $GITHUB_ENV
          echo "PATH=`pwd`/instantclient:`pwd`/utPLSQL-cli/bin:$PATH" >> $GITHUB_ENV
          echo "DISABLE_OOB=ON" > ~/.sqlnet.ora
      - name: Prep Database
        working-directory: schema
        run: ant docker.prepdb -Doracle.image=gvenzl/oracle-free:23.4-full-faststart
      - name: Install Schema
        working-directory: schema
        run: ant docker.install -Doracle.image=gvenzl/oracle-free:23.4-full-faststart
      - name: Run Tests
        working-directory: schema
        run: ant  test -Dbuilduser.overrides=build/overrides.external.xml -Doracle.image=gvenzl/oracle-free:23.4-full-faststart
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v5
        if: success() || failure() # always run even if the previous step fails
        with:
          annotate_only: true
          report_paths: '**/build/test_*.xml'
