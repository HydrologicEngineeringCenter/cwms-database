<project name="wcdba-oracle-v2.1" default="all">
	<description>
		"Build file for the oracle side of the WCDBA project."
	</description>

	<!-- read in the environment for use in properties -->
	<property environment="env"/>

	<!-- set file locations for this build -->
	<property name="root"  location="."/>
	<property name="src" location="${root}/src"/>
	<property name="lib"  location="${root}/lib"/>
	<property name="test"  location="${root}/test"/>

	<!-- Load in the ant-contrib jar to use the foreach external task -->	
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="${root}/lib/ant-contrib.jar"/>
		</classpath>
	</taskdef>	

	<import optional="true" file="${root}/${env.USERNAME}.xml"/>
	<import optional="true" file="${builduser.overrides}"/>
	
	<property name="output.lines" value="1000"/>
	
	<!-- whether or not this build is a debug build -->
	<property name="debug"  value="true"/>

	<!-- the amount of memory to allocate to javac during compile -->
	<property name="memMax" value="256m"/>

	<!-- flag to create the test account -->
	<property name="test.account.create" value="-testaccount"/>
	<property name="seq.start" value=""/>

        <!-- Existing CWMS instances at current office (used to determine CWMS_SEQ offset) -->
        <property name="cwms.existing.instances" value="0"/>


	<!-- flags to control output of auto kill and auto build -->
	<property name="autobuild.echo" value="OFF"/>
	<property name="autokill.echo" value="OFF"/>

	<!-- flags to force the kill script to ignore errors. -->
	<property name="autokill.force" value="-force"/>
	
	<!-- Perforce properties -->
	<!-- Fail perforce operations on error -->
	<property name="perforce.failOnError" value="true"/>
	<!-- If the perforce.disabled property is defined to anything perforce
		 operations will not occur. To enable perforce comment out the 
		 'perforce.disabled' property. To disable, remove the comments.
	-->
	<!-- property name="perforce.disabled" value="true"/ -->
	<!-- The perforce depot name for this project -->
	<property name="perforce.depot" value="//wcdba/dev/oracle/dev/..."/>

	<!-- Initialize the project for building. -->
	<target name="init">
		<!-- Create the time stamp -->
		<tstamp/>
		<property name="wcdba.build" value="WCDBA:Build:${DSTAMP}:${TSTAMP}"/>
		<condition property="perforce.enabled">
			<not>
				<isset property="perforce.disabled"/>
			</not>
		</condition>
		<echo message="perforce.enabled = ${perforce.enabled}"/>
	</target>
	
	<!-- Executes python scripts to build the CWMS schema. -->
	<target name="build" description="Executes python scripts to build the CWMS schema">		
		
		<echo message="Build sql scripts..."/>
		
		<if>
			<equals arg1="${office.secondary.id}" arg2="" />
			<then>
				<property name="buildSqlScript-arg-line" value="/c python buildSqlScripts.py ${oracle.cwms.user} ${cwms.existing.instances} ${office.primary.id} ${test.account.create} ${seq.start}"/>
				<echo message="${buildSqlScript-arg-line}"/>
			</then>
			<else>
				<property name="buildSqlScript-arg-line" value="/c python buildSqlScripts.py ${oracle.cwms.user} ${cwms.existing.instances} ${office.primary.id} ${office.secondary.id} ${test.account.create} ${seq.start}"/>
				<echo message="${buildSqlScript-arg-line}"/>
			</else>
		</if>
		
		<exec dir="${src}" executable="cmd" output="build-sql-script-output.txt" error="build-sql-script-error.txt" resultproperty="build-sql-script-result">
			<arg line="${buildSqlScript-arg-line}"/>
		</exec>
		
		<if>
			<equals arg1="${build-sql-script-result}" arg2="0" />
			<then>
				<echo message="Finished building sql scripts"/>
			</then>
			<else>
				<concat>
					<filelist dir="${root}" files="build-sql-script-output.txt,build-sql-script-error.txt"/>
				</concat>				
				<echo message="${build-sql-script-result}"/>
				<fail/>
			</else>
		</if>
		
		<echo message="Finished building sql scripts"/>
		
		<echo message="Creating new CWMS Schema..."/>

		<property name="autobuild-arg-line" value="/c python autobuild.py echo=${autobuild.echo} inst=${oracle.cwms.instance} sys_passwd=${oracle.sys.password} cwms_schema=${oracle.cwms.user} cwms_passwd=${oracle.cwms.password} dbi_passwd=${oracle.cwmsdbi.password} test_passwd=${oracle.hectest.password} restricted=${autobuild.restricted}"/>
		<echo message="${autobuild-arg-line}"/>
		
		<exec dir="${src}" executable="cmd" output="auto-build-output.txt" error="auto-build-error.txt" resultproperty="auto-build-result">
			<arg line="${autobuild-arg-line}"/>
		</exec>
		
		<if>
			<equals arg1="${auto-build-result}" arg2="0" />
			<then>
				<echo message="Finished creating new CWMS Schema"/>
			</then>
			<else>
				<!-- concat last 1000 lines of std output -->
				<concat>
					<filelist dir="${root}" files="auto-build-output.txt"/>
					<filterchain>
						<filterreader classname="org.apache.tools.ant.filters.TailFilter">
							<param name="lines" value="${output.lines}"/>
						</filterreader>
					</filterchain>			
				</concat>
				<!-- concat all of std error -->
				<concat>
					<filelist dir="${root}" files="auto-build-error.txt"/>
				</concat>
				<echo message="${auto-build-result}"/>
				<fail/>
			</else>
		</if>

    </target>
	
	<target name="tail-test">
		<concat>
			<filelist dir="${root}" files="auto-build-output.txt"/>
			<filterchain>
				<filterreader classname="org.apache.tools.ant.filters.TailFilter">
					<param name="lines" value="${output.lines}"/>
				</filterreader>
			</filterchain>			
		</concat>
	</target>
	
	<!-- Executes python script to drop the CWMS schema. -->
	<target name="clean" description="Executes python script to drop the CWMS schema">
		
		<echo message="dropping existing CWMS Schema..."/>
		
		<property name="autokill-arg-line" value="/c python autokill.py echo=${autokill.echo} inst=${oracle.cwms.instance} sys_passwd=${oracle.sys.password} cwms_schema=${oracle.cwms.user} ${autokill.force}"/>
		<echo message="${autokill-arg-line}"/>
		
		<exec dir="${src}" executable="cmd" output="auto-kill-output.txt" error="auto-kill-error.txt" resultproperty="auto-kill-result">
			<arg line="${autokill-arg-line}"/>
		</exec>	
		
		<if>
			<equals arg1="${auto-kill-result}" arg2="0" />
			<then>
				<echo message="Finished dropping existing CWMS Schema"/>
			</then>
			<else>
				<concat>
					<filelist dir="${root}" files="auto-kill-output.txt,auto-kill-error.txt"/>
				</concat>				
				<echo message="${auto-kill-result}"/>
				<fail/>
			</else>
		</if>
	
    </target>
	
	<!-- Loads rowcps schema. -->
	<target name="load-rowcps-schema" description="Loads rowcps schema">
		
		<echo message="Loading rowcps Schema..."/>
		
		<property name="rowcpsLoad-arg-line" value="${oracle.cwms.user}/${oracle.cwms.password}@${oracle.cwms.instance} @rowcps_schema"/>
		<echo message="${rowcpsLoad-arg-line}"/>
		
		<exec dir="${src}/rowcps" executable="sqlplus" output="rowcps-load-output.txt" error="rowcps-load-error.txt" resultproperty="rowcps-load-result">
			<arg line="${rowcpsLoad-arg-line}"/>
		</exec>	
		
		<if>
			<equals arg1="${rowcps-load-result}" arg2="0" />
			<then>
				<echo message="Finished Loading existing rowcps Schema"/>
			</then>
			<else>
				<concat>
					<filelist dir="${root}" files="rowcps-load-output.txt,rowcps-load-error.txt"/>
				</concat>				
				<echo message="${rowcps-load-result}"/>
				<fail/>
			</else>
		</if>
	
	</target>
	
	<target name = "load-rowcps-api">
		<echo message="Loading rowcps Types..."/>
		
		<property name="rowcpsLoadTypes-arg-line" value="${oracle.cwms.user}/${oracle.cwms.password}@${oracle.cwms.instance} @rowcps_types"/>
		<echo message="${rowcpsLoadTypes-arg-line}"/>
		
		<exec dir="${src}/rowcps" executable="sqlplus" output="rowcps-types-load-output.txt" error="rowcps-types-load-error.txt" resultproperty="rowcps-types-load-result">
			<arg line="${rowcpsLoadTypes-arg-line}"/>
		</exec>	
		
		<if>
			<equals arg1="${rowcps-types-load-result}" arg2="0" />
			<then>
				<echo message="Finished Loading existing rowcps Types"/>
			</then>
			<else>
				<concat>
					<filelist dir="${root}" files="rowcps-types-load-output.txt,rowcps-types-load-error.txt"/>
				</concat>				
				<echo message="${rowcps-types-load-result}"/>
				<fail/>
			</else>
		</if>
		
		<echo message="Loading CWMS project Package..."/>
		
		<property name="rowcpsLoadCWMSProjectPkg-arg-line" value="${oracle.cwms.user}/${oracle.cwms.password}@${oracle.cwms.instance} @cwms_project_pkg"/>
		<echo message="${rowcpsLoadCWMSProjectPkg-arg-line}"/>
		
		<exec dir="${src}/rowcps" executable="sqlplus" output="rowcps-load-CWMS-Project-Pkg-output.txt" error="rowcps-load-CWMS-Project-Pkg-error.txt" resultproperty="rowcps-load-CWMS-Project-Pkg-result">
			<arg line="${rowcpsLoadCWMSProjectPkg-arg-line}"/>
		</exec>	
		
		<if>
			<equals arg1="${rowcps-load-CWMS-Project-Pkg-result}" arg2="0" />
			<then>
				<echo message="Finished Loading CWMS project Package"/>
			</then>
			<else>
				<concat>
					<filelist dir="${root}" files="rowcps-load-CWMS-Project-Pkg-output.txt,rowcps-load-CWMS-Project-Pkg-error.txt"/>
				</concat>				
				<echo message="${rowcps-load-CWMS-Project-Pkg-result}"/>
				<fail/>
			</else>
		</if>
		
		<echo message="Loading CWMS project Package Body..."/>
		
		<property name="rowcpsLoadCWMSProjectPkgBody-arg-line" value="${oracle.cwms.user}/${oracle.cwms.password}@${oracle.cwms.instance} @cwms_project_pkg_body"/>
		<echo message="${rowcpsLoadCWMSProjectPkgBody-arg-line}"/>
		
		<exec dir="${src}/rowcps" executable="sqlplus" output="rowcps-load-CWMS-Project-Pkg-body-output.txt" error="rowcps-load-CWMS-Project-Pkg-body-error.txt" resultproperty="rowcps-load-CWMS-Project-Pkg-body-result">
			<arg line="${rowcpsLoadCWMSProjectPkgBody-arg-line}"/>
		</exec>	
		
		<if>
			<equals arg1="${rowcps-load-CWMS-Project-Pkg-body-result}" arg2="0" />
			<then>
				<echo message="Finished Loading CWMS project Package Body"/>
			</then>
			<else>
				<concat>
					<filelist dir="${root}" files="rowcps-load-CWMS-Project-Pkg-body-output.txt,rowcps-load-CWMS-Project-Pkg-body-error.txt"/>
				</concat>				
				<echo message="${rowcps-load-CWMS-Project-Pkg-body-result}"/>
				<fail/>
			</else>
		</if>
    </target>
	
	<!-- Drop existing CWMS schema then build a new CWMS schema. -->
	<target name="all-schema" depends="clean,build" description="drop existing CWMS schema then build a new CWMS schema">
    </target>
	
    <target name="all" depends="all-schema" description="does a clean build">
    </target>
    <target name="export" description="Executes python script to export CWMS schema">

                <echo message="Exporting CWMS tables ..."/>

                <property name="autoexport-arg-line" value="/c python autoexport.py echo=${autoexport.echo} inst=${oracle.cwms.instance} sys_passwd=${oracle.sys.password} cwms_passwd=${oracle.cwms.password} cwms_schema=${oracle.cwms.user} cwms_dir=${oracle.cwms.dir}  oracle_parallel=${oracle.parallel} ${autoexport.force}"/>
                <echo message="${autoexport-arg-line}"/>

                <exec dir="${src}" executable="cmd" output="auto-export-output.txt" error="auto-export-error.txt" resultproperty="auto-export-result" failonerror="true">
                        <arg line="${autoexport-arg-line}"/>
                </exec>

                <if>
                        <equals arg1="${auto-export-result}" arg2="0" />
                        <then>
                                <echo message="Finished exporting CWMS tables"/>
                        </then>
                        <else>
                                <concat>
                                        <filelist dir="${root}" files="auto-export-output.txt,auto-export-error.txt"/>
                                </concat>
                                <echo message="${auto-export-result}"/>
                                <fail/>
                        </else>
                </if>

    </target>
    <!-- Executes python script to import CWMS tables -->
        <target name="import" description="Executes python script to import CWMS schema">

                <echo message="Importing  CWMS tables ..."/>

                <property name="autoimport-arg-line" value="/c python autoimport.py echo=${autoimport.echo} inst=${oracle.cwms.instance} cwms_passwd=${oracle.cwms.password} cwms_schema=${oracle.cwms.user} sys_passwd=${oracle.sys.password} cwms_dir=${oracle.cwms.dir} oracle_parallel=${oracle.parallel} ${autoimport.force}"/>
                <echo message="${autoimport-arg-line}"/>

                <exec dir="${src}" executable="cmd" output="auto-import-output.txt" error="auto-import-error.txt" resultproperty="auto-import-result" failonerror="true">
                        <arg line="${autoimport-arg-line}"/>
                </exec>

                <if>
                        <equals arg1="${auto-import-result}" arg2="0" />
                        <then>
                                <echo message="Finished Importting CWMS tables"/>
                        </then>
                        <else>
                                <concat>
                                        <filelist dir="${root}" files="auto-import-output.txt,auto-import-error.txt"/>
                                </concat>
                                <echo message="${auto-import-result}"/>
                                <fail/>
                        </else>
                </if>

    </target>
    <!-- Executes python script to import users -->
        <target name="createUsers" description="Executes python script to recreate CWMS users">

                <echo message="Recreate  CWMS users ..."/>

                <property name="autocreateusers-arg-line" value="/c python autoCreateCWMSUsers.py echo=${autocreateusers.echo} inst=${oracle.cwms.instance} dbi_passwd=${oracle.dbi.password} cwms_passwd=${oracle.cwms.password} cwms_schema=${oracle.cwms.user} sys_passwd=${oracle.sys.password} ${autocreateusers.force}"/>
                <echo message="${autocreateusers-arg-line}"/>

                <exec dir="${src}" executable="cmd" output="auto-createusers-output.txt" error="auto-createusers-error.txt" resultproperty="auto-createusers-result" failonerror="true">
                        <arg line="${autocreateusers-arg-line}"/>
                </exec>

                <if>
                        <equals arg1="${auto-createusers-result}" arg2="0" />
                        <then>
                                <echo message="Finished Creating CWMS users"/>
                        </then>
                        <else>
                                <concat>
                                        <filelist dir="${root}" files="auto-createusers-output.txt,auto-createusers-error.txt"/>
                                </concat>
                                <echo message="${auto-createusers-result}"/>
                                <fail/>
                        </else>
                </if>

    </target>
    <target name="rebuild-schema" depends="export,clean,build,import,createUsers" description="export AT tables,drop existing CWMS schema then build a new CWMS schema, import AT data, recreate user accounts">
    </target>



	
</project>

