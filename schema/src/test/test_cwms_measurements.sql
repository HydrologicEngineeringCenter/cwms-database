CREATE OR REPLACE PACKAGE test_streamflow_roundtrip AS
    --%suite(Test cwms_stream package code)
    --%beforeall (setup)
    procedure  setup;
    --%afterall(teardown)
    procedure  teardown;

    --%test(Test roundtrip store and retrieve with supplemental meas data)
    PROCEDURE test_store_and_retrieve;
    --%test(Test roundtrip store and retrieve with new USGS public api xml format)
    PROCEDURE test_store_and_retrieve_usgs;
END test_streamflow_roundtrip;
/
SHOW ERRORS;

-- DROP TABLE xml_output_table;
--
-- CREATE TABLE xml_output_table (
--                                   id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--                                   xml_data CLOB
-- );
--
-- DROP TABLE xml_output_table_usgs;
--
-- CREATE TABLE xml_output_table_usgs (
--                                   id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--                                   xml_data CLOB
-- );

-- Create the test package body
CREATE OR REPLACE PACKAGE BODY test_streamflow_roundtrip AS

    PROCEDURE setup IS
    BEGIN
        cwms_loc.store_location(
                p_location_id  => 'StreamTestLoc',
                p_time_zone_id => 'UTC',
                p_db_office_id => 'SPK');
        commit;
    END setup;

    PROCEDURE teardown IS
    BEGIN
       cwms_loc.delete_location(
          p_location_id   => 'StreamTestLoc',
          p_delete_action => cwms_util.delete_all,
          p_db_office_id  => 'SPK');
    END teardown;

    PROCEDURE test_store_and_retrieve IS
        l_meas_xml_str CLOB;
        l_meas_xml     XMLTYPE;
        l_retrieved_xml_str CLOB;
        l_datetime_str VARCHAR2(32) := '2023-02-24T17:10:00Z';
        l_office_id    VARCHAR2(16) := 'SPK';
        l_location_id  VARCHAR2(57) := 'StreamTestLoc';
        l_elev_unit    VARCHAR2(16) := 'ft';
        l_flow_unit    VARCHAR2(16) := 'cfs';
        l_temp_unit    VARCHAR2(16) := 'F';
        l_area_unit    VARCHAR2(16) := 'ft2';
        l_velocity_unit VARCHAR2(16) := 'ft/s';
    BEGIN

        l_meas_xml_str :=
                '<measurement height-unit=":elev_unit" flow-unit=":flow_unit" temp-unit=":temp_unit" area-unit=":area_unit" velocity-unit=":velocity_unit" used="true" office-id=":office_id">
                    <agency>USACE</agency>
                    <date>:datetime</date>
                    <location>:location</location>
                    <number>17</number>
                    <stream-flow-measurement>
                        <gage-height>10.0</gage-height>
                        <flow>1.0</flow>
                        <quality>Unspecified</quality>
                    </stream-flow-measurement>
                    <supplemental-stream-flow-measurement>
                        <channel-flow>100.0</channel-flow>
                        <overbank-flow>101.0</overbank-flow>
                        <overbank-max-depth>102.0</overbank-max-depth>
                        <channel-max-depth>103.0</channel-max-depth>
                        <avg-velocity>104.0</avg-velocity>
                        <surface-velocity>105.0</surface-velocity>
                        <max-velocity>106.0</max-velocity>
                        <effective-flow-area>107.0</effective-flow-area>
                        <cross-sectional-area>108.0</cross-sectional-area>
                        <mean-gage>109.0</mean-gage>
                        <top-width>110.0</top-width>
                        <main-channel-area>111.0</main-channel-area>
                        <overbank-area>112.0</overbank-area>
                    </supplemental-stream-flow-measurement>
                </measurement>';

        l_meas_xml_str := REPLACE(l_meas_xml_str, ':office_id', l_office_id);
        l_meas_xml_str := REPLACE(l_meas_xml_str, ':elev_unit', l_elev_unit);
        l_meas_xml_str := REPLACE(l_meas_xml_str, ':flow_unit', l_flow_unit);
        l_meas_xml_str := REPLACE(l_meas_xml_str, ':temp_unit', l_temp_unit);
        l_meas_xml_str := REPLACE(l_meas_xml_str, ':area_unit', l_area_unit);
        l_meas_xml_str := REPLACE(l_meas_xml_str, ':velocity_unit', l_velocity_unit);
        l_meas_xml_str := REPLACE(l_meas_xml_str, ':location',  l_location_id);
        l_meas_xml_str := REPLACE(l_meas_xml_str, ':datetime',  l_datetime_str);

        -- Store the XML
        cwms_stream.store_meas_xml(
                p_xml            => l_meas_xml_str,
                p_fail_if_exists => 'F');

        -- Retrieve the XML
        l_retrieved_xml_str := cwms_stream.retrieve_meas_xml(
                p_location_id_mask => l_location_id,
                p_unit_system      => 'EN',
                p_office_id_mask   => l_office_id);
        ut.expect (l_meas_xml_str).to_equal(l_retrieved_xml_str);
--         INSERT INTO xml_output_table (xml_data)
--         VALUES (l_retrieved_xml_str);
--
--         COMMIT;

    END test_store_and_retrieve;

    PROCEDURE test_store_and_retrieve_usgs IS
        l_meas_xml_str CLOB;
        l_meas_xml     XMLTYPE;
        l_retrieved_xml_str CLOB;
        l_datetime_str VARCHAR2(32) := '2023-02-24T17:10:00Z';
        l_office_id    VARCHAR2(16) := 'SPK';
        l_location_id  VARCHAR2(57) := 'StreamTestLoc';
        l_elev_unit    VARCHAR2(16) := 'ft';
        l_flow_unit    VARCHAR2(16) := 'cfs';
        l_temp_unit    VARCHAR2(16) := 'F';
        l_area_unit    VARCHAR2(16) := 'ft2';
        l_velocity_unit VARCHAR2(16) := 'ft/s';
    BEGIN

        l_meas_xml_str :=
                '<measurement height-unit=":elev_unit" flow-unit=":flow_unit" temp-unit=":temp_unit" area-unit=":area_unit" velocity-unit=":velocity_unit" used="true" office-id=":office_id">
                    <agency>USGS</agency>
                    <party>:office_id</party>
                    <wm-comments>Test</wm-comments>
                    <date>2009-04-17T21:00:00Z</date>
                    <location>:location</location>
                    <number>89</number>
                    <stream-flow-measurement>
                        <gage-height>13.25</gage-height>
                        <flow>3460.0</flow>
                        <quality>Fair</quality>
                    </stream-flow-measurement>
                    <usgs-measurement>
                        <remarks>Import testing</remarks>
                        <current-rating>0.1</current-rating>
                        <control-condition/>
                        <shift-used>10.0</shift-used>
                        <percent-difference>0.5</percent-difference>
                        <flow-adjustment>MEAS</flow-adjustment>
                        <delta-height>11.0</delta-height> //add unit attribute at this level
                        <delta-time>12.0</delta-time>
                        <air-temp>60.0</air-temp>
                        <water-temp>68.0</water-temp>
                    </usgs-measurement>
                </measurement>';

        l_meas_xml_str := REPLACE(l_meas_xml_str, ':office_id', l_office_id);
        l_meas_xml_str := REPLACE(l_meas_xml_str, ':elev_unit', l_elev_unit);
        l_meas_xml_str := REPLACE(l_meas_xml_str, ':flow_unit', l_flow_unit);
        l_meas_xml_str := REPLACE(l_meas_xml_str, ':temp_unit', l_temp_unit);
        l_meas_xml_str := REPLACE(l_meas_xml_str, ':area_unit', l_area_unit);
        l_meas_xml_str := REPLACE(l_meas_xml_str, ':velocity_unit', l_velocity_unit);
        l_meas_xml_str := REPLACE(l_meas_xml_str, ':location',  l_location_id);
        l_meas_xml_str := REPLACE(l_meas_xml_str, ':datetime',  l_datetime_str);

        -- Store the XML
        cwms_stream.store_meas_xml(
                p_xml            => l_meas_xml_str,
                p_fail_if_exists => 'F');

        -- Retrieve the XML
        l_retrieved_xml_str := cwms_stream.retrieve_meas_xml(
                p_location_id_mask => l_location_id,
                p_unit_system      => 'EN',
                p_office_id_mask   => l_office_id);

        ut.expect (l_meas_xml_str).to_equal(l_retrieved_xml_str);
--         INSERT INTO xml_output_table_usgs (xml_data)
--         VALUES (l_retrieved_xml_str);
--
--         COMMIT;

    END test_store_and_retrieve_usgs;

END test_streamflow_roundtrip;
/
SHOW ERRORS;

-- -- Execute the test
-- BEGIN
--     test_streamflow_roundtrip.test_store_and_retrieve;
--     test_streamflow_roundtrip.test_store_and_retrieve_usgs;
-- END;
-- /

-- DROP TABLE xml_output_table;
-- DROP TABLE xml_output_table_usgs;
