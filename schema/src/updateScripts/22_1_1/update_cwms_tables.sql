-- Update cwms tables
MERGE INTO CWMS_INTERVAL A USING
 (SELECT
  60 as INTERVAL_CODE,
  'Irr' as INTERVAL_ID,
  0 as INTERVAL,
  'Irregular (alias for 0)' as DESCRIPTION
  FROM DUAL) B
ON (A.INTERVAL_CODE = B.INTERVAL_CODE)
WHEN NOT MATCHED THEN
INSERT (
  INTERVAL_CODE, INTERVAL_ID, INTERVAL, DESCRIPTION)
VALUES (
  B.INTERVAL_CODE, B.INTERVAL_ID, B.INTERVAL, B.DESCRIPTION)
WHEN MATCHED THEN
UPDATE SET
  A.INTERVAL_ID = B.INTERVAL_ID,
  A.INTERVAL = B.INTERVAL,
  A.DESCRIPTION = B.DESCRIPTION;

MERGE INTO CWMS_DURATION A USING
 (SELECT
  62 as DURATION_CODE,
  'UntilChanged' as DURATION_ID,
  -2 as DURATION,
  'Duration for const parameter types' as DESCRIPTION
  FROM DUAL) B
ON (A.DURATION_CODE = B.DURATION_CODE)
WHEN NOT MATCHED THEN 
INSERT (
  DURATION_CODE, DURATION_ID, DURATION, DESCRIPTION)
VALUES (
  B.DURATION_CODE, B.DURATION_ID, B.DURATION, B.DESCRIPTION)
WHEN MATCHED THEN
UPDATE SET 
  A.DURATION_ID = B.DURATION_ID,
  A.DURATION = B.DURATION,
  A.DESCRIPTION = B.DESCRIPTION;

COMMIT;

MERGE INTO CWMS_DURATION A USING
 (SELECT
  61 as DURATION_CODE,
  'Variable' as DURATION_ID,
  -1 as DURATION,
  'Variable duration for non-instantaneous or const parameter types' as DESCRIPTION
  FROM DUAL) B
ON (A.DURATION_CODE = B.DURATION_CODE)
WHEN NOT MATCHED THEN 
INSERT (
  DURATION_CODE, DURATION_ID, DURATION, DESCRIPTION)
VALUES (
  B.DURATION_CODE, B.DURATION_ID, B.DURATION, B.DESCRIPTION)
WHEN MATCHED THEN
UPDATE SET 
  A.DURATION_ID = B.DURATION_ID,
  A.DURATION = B.DURATION,
  A.DESCRIPTION = B.DESCRIPTION;

COMMIT;

MERGE INTO CWMS_PARAMETER_TYPE A USING
 (SELECT
  9 as PARAMETER_TYPE_CODE,
  'Median' as PARAMETER_TYPE_ID,
  'MEDIAN' as DESCRIPTION
  FROM DUAL) B
ON (A.PARAMETER_TYPE_CODE = B.PARAMETER_TYPE_CODE)
WHEN NOT MATCHED THEN
INSERT (
  PARAMETER_TYPE_CODE, PARAMETER_TYPE_ID, DESCRIPTION)
VALUES (
  B.PARAMETER_TYPE_CODE, B.PARAMETER_TYPE_ID, B.DESCRIPTION)
WHEN MATCHED THEN
UPDATE SET
  A.PARAMETER_TYPE_ID = B.PARAMETER_TYPE_ID,
  A.DESCRIPTION = B.DESCRIPTION;

MERGE INTO CWMS_PARAMETER_TYPE A USING
 (SELECT
  8 as PARAMETER_TYPE_CODE,
  'Inc' as PARAMETER_TYPE_ID,
  'INCREMENTAL' as DESCRIPTION
  FROM DUAL) B
ON (A.PARAMETER_TYPE_CODE = B.PARAMETER_TYPE_CODE)
WHEN NOT MATCHED THEN
INSERT (
  PARAMETER_TYPE_CODE, PARAMETER_TYPE_ID, DESCRIPTION)
VALUES (
  B.PARAMETER_TYPE_CODE, B.PARAMETER_TYPE_ID, B.DESCRIPTION)
WHEN MATCHED THEN
UPDATE SET
  A.PARAMETER_TYPE_ID = B.PARAMETER_TYPE_ID,
  A.DESCRIPTION = B.DESCRIPTION;

MERGE INTO CWMS_PARAMETER_TYPE A USING
 (SELECT
  7 as PARAMETER_TYPE_CODE,
  'Cum' as PARAMETER_TYPE_ID,
  'CUMULATIVE' as DESCRIPTION
  FROM DUAL) B
ON (A.PARAMETER_TYPE_CODE = B.PARAMETER_TYPE_CODE)
WHEN NOT MATCHED THEN
INSERT (
  PARAMETER_TYPE_CODE, PARAMETER_TYPE_ID, DESCRIPTION)
VALUES (
  B.PARAMETER_TYPE_CODE, B.PARAMETER_TYPE_ID, B.DESCRIPTION)
WHEN MATCHED THEN
UPDATE SET
  A.PARAMETER_TYPE_ID = B.PARAMETER_TYPE_ID,
  A.DESCRIPTION = B.DESCRIPTION;

COMMIT;

MERGE INTO CWMS_ABSTRACT_PARAMETER A USING
 (SELECT
  35 as ABSTRACT_PARAM_CODE,
  'Depth Velocity' as ABSTRACT_PARAM_ID
  FROM DUAL) B
ON (A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE)
WHEN NOT MATCHED THEN
INSERT (
  ABSTRACT_PARAM_CODE, ABSTRACT_PARAM_ID)
VALUES (
  B.ABSTRACT_PARAM_CODE, B.ABSTRACT_PARAM_ID)
WHEN MATCHED THEN
UPDATE SET
  A.ABSTRACT_PARAM_ID = B.ABSTRACT_PARAM_ID;

COMMIT;


MERGE INTO CWMS_UNIT A USING
 (SELECT
  131 as UNIT_CODE,
  'ft2/s' as UNIT_ID,
  35 as ABSTRACT_PARAM_CODE,
  'EN' as UNIT_SYSTEM,
  'Depth times velocity' as LONG_NAME,
  'Depth of 1 feet and Velocity of 1 feet/second' as DESCRIPTION
  FROM DUAL) B
ON (A.UNIT_CODE = B.UNIT_CODE)
WHEN NOT MATCHED THEN
INSERT (
  UNIT_CODE, UNIT_ID, ABSTRACT_PARAM_CODE, UNIT_SYSTEM, LONG_NAME,
  DESCRIPTION)
VALUES (
  B.UNIT_CODE, B.UNIT_ID, B.ABSTRACT_PARAM_CODE, B.UNIT_SYSTEM, B.LONG_NAME,
  B.DESCRIPTION)
WHEN MATCHED THEN
UPDATE SET
  A.UNIT_ID = B.UNIT_ID,
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.UNIT_SYSTEM = B.UNIT_SYSTEM,
  A.LONG_NAME = B.LONG_NAME,
  A.DESCRIPTION = B.DESCRIPTION;

MERGE INTO CWMS_UNIT A USING
 (SELECT
  130 as UNIT_CODE,
  'm2/s' as UNIT_ID,
  35 as ABSTRACT_PARAM_CODE,
  'SI' as UNIT_SYSTEM,
  'Depth times velocity' as LONG_NAME,
  'Depth of 1 meter and Velocity of 1 meter/second' as DESCRIPTION
  FROM DUAL) B
ON (A.UNIT_CODE = B.UNIT_CODE)
WHEN NOT MATCHED THEN
INSERT (
  UNIT_CODE, UNIT_ID, ABSTRACT_PARAM_CODE, UNIT_SYSTEM, LONG_NAME,
  DESCRIPTION)
VALUES (
  B.UNIT_CODE, B.UNIT_ID, B.ABSTRACT_PARAM_CODE, B.UNIT_SYSTEM, B.LONG_NAME,
  B.DESCRIPTION)
WHEN MATCHED THEN
UPDATE SET
  A.UNIT_ID = B.UNIT_ID,
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.UNIT_SYSTEM = B.UNIT_SYSTEM,
  A.LONG_NAME = B.LONG_NAME,
  A.DESCRIPTION = B.DESCRIPTION;

COMMIT;

MERGE INTO CWMS_UNIT A USING
 (SELECT
  132 as UNIT_CODE,
  'ug' as UNIT_ID,
  32 as ABSTRACT_PARAM_CODE,
  'SI' as UNIT_SYSTEM,
  'micrograms' as LONG_NAME,
  'Mass of 1 microgram' as DESCRIPTION
  FROM DUAL) B
ON (A.UNIT_CODE = B.UNIT_CODE)
WHEN NOT MATCHED THEN
INSERT (
  UNIT_CODE, UNIT_ID, ABSTRACT_PARAM_CODE, UNIT_SYSTEM, LONG_NAME,
  DESCRIPTION)
VALUES (
  B.UNIT_CODE, B.UNIT_ID, B.ABSTRACT_PARAM_CODE, B.UNIT_SYSTEM, B.LONG_NAME,
  B.DESCRIPTION)
WHEN MATCHED THEN
UPDATE SET
  A.UNIT_ID = B.UNIT_ID,
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.UNIT_SYSTEM = B.UNIT_SYSTEM,
  A.LONG_NAME = B.LONG_NAME,
  A.DESCRIPTION = B.DESCRIPTION;

MERGE INTO CWMS_UNIT A USING
 (SELECT
  133 as UNIT_CODE,
  'ug/l' as UNIT_ID,
  18 as ABSTRACT_PARAM_CODE,
  'SI' as UNIT_SYSTEM,
  'micrograms per liter' as LONG_NAME,
  'Mass concentration of 1E-06 gram per liter' as DESCRIPTION
  FROM DUAL) B
ON (A.UNIT_CODE = B.UNIT_CODE)
WHEN NOT MATCHED THEN
INSERT (
  UNIT_CODE, UNIT_ID, ABSTRACT_PARAM_CODE, UNIT_SYSTEM, LONG_NAME,
  DESCRIPTION)
VALUES (
  B.UNIT_CODE, B.UNIT_ID, B.ABSTRACT_PARAM_CODE, B.UNIT_SYSTEM, B.LONG_NAME,
  B.DESCRIPTION)
WHEN MATCHED THEN
UPDATE SET
  A.UNIT_ID = B.UNIT_ID,
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.UNIT_SYSTEM = B.UNIT_SYSTEM,
  A.LONG_NAME = B.LONG_NAME,
  A.DESCRIPTION = B.DESCRIPTION;

COMMIT;

MERGE INTO CWMS_BASE_PARAMETER A USING
 (SELECT
  49 as BASE_PARAMETER_CODE,
  'DepthVelocity' as BASE_PARAMETER_ID,
  35 as ABSTRACT_PARAM_CODE,
  130 as UNIT_CODE,
  130 as DISPLAY_UNIT_CODE_SI,
  131 as DISPLAY_UNIT_CODE_EN,
  'Depth Velocity' as LONG_NAME,
  'Depth Velocity' as DESCRIPTION
  FROM DUAL) B
ON (A.BASE_PARAMETER_CODE = B.BASE_PARAMETER_CODE)
WHEN NOT MATCHED THEN
INSERT (
  BASE_PARAMETER_CODE, BASE_PARAMETER_ID, ABSTRACT_PARAM_CODE, UNIT_CODE, DISPLAY_UNIT_CODE_SI,
  DISPLAY_UNIT_CODE_EN, LONG_NAME, DESCRIPTION)
VALUES (
  B.BASE_PARAMETER_CODE, B.BASE_PARAMETER_ID, B.ABSTRACT_PARAM_CODE, B.UNIT_CODE, B.DISPLAY_UNIT_CODE_SI,
  B.DISPLAY_UNIT_CODE_EN, B.LONG_NAME, B.DESCRIPTION)
WHEN MATCHED THEN
UPDATE SET
  A.BASE_PARAMETER_ID = B.BASE_PARAMETER_ID,
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.UNIT_CODE = B.UNIT_CODE,
  A.DISPLAY_UNIT_CODE_SI = B.DISPLAY_UNIT_CODE_SI,
  A.DISPLAY_UNIT_CODE_EN = B.DISPLAY_UNIT_CODE_EN,
  A.LONG_NAME = B.LONG_NAME,
  A.DESCRIPTION = B.DESCRIPTION;

COMMIT;

MERGE INTO CWMS_UNIT_CONVERSION A USING
 (SELECT
  'ft2/s' as FROM_UNIT_ID,
  'ft2/s' as TO_UNIT_ID,
  35 as ABSTRACT_PARAM_CODE,
  131 as FROM_UNIT_CODE,
  131 as TO_UNIT_CODE,
  1 as FACTOR,
  0 as OFFSET,
  NULL as FUNCTION
  FROM DUAL) B
ON (A.FROM_UNIT_ID = B.FROM_UNIT_ID and A.TO_UNIT_ID = B.TO_UNIT_ID)
WHEN NOT MATCHED THEN
INSERT (
  FROM_UNIT_ID, TO_UNIT_ID, ABSTRACT_PARAM_CODE, FROM_UNIT_CODE, TO_UNIT_CODE,
  FACTOR, OFFSET, FUNCTION)
VALUES (
  B.FROM_UNIT_ID, B.TO_UNIT_ID, B.ABSTRACT_PARAM_CODE, B.FROM_UNIT_CODE, B.TO_UNIT_CODE,
  B.FACTOR, B.OFFSET, B.FUNCTION)
WHEN MATCHED THEN
UPDATE SET
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.FROM_UNIT_CODE = B.FROM_UNIT_CODE,
  A.TO_UNIT_CODE = B.TO_UNIT_CODE,
  A.FACTOR = B.FACTOR,
  A.OFFSET = B.OFFSET,
  A.FUNCTION = B.FUNCTION;

MERGE INTO CWMS_UNIT_CONVERSION A USING
 (SELECT
  'ft2/s' as FROM_UNIT_ID,
  'm2/s' as TO_UNIT_ID,
  35 as ABSTRACT_PARAM_CODE,
  131 as FROM_UNIT_CODE,
  130 as TO_UNIT_CODE,
  0.09290304 as FACTOR,
  0 as OFFSET,
  NULL as FUNCTION
  FROM DUAL) B
ON (A.FROM_UNIT_ID = B.FROM_UNIT_ID and A.TO_UNIT_ID = B.TO_UNIT_ID)
WHEN NOT MATCHED THEN
INSERT (
  FROM_UNIT_ID, TO_UNIT_ID, ABSTRACT_PARAM_CODE, FROM_UNIT_CODE, TO_UNIT_CODE,
  FACTOR, OFFSET, FUNCTION)
VALUES (
  B.FROM_UNIT_ID, B.TO_UNIT_ID, B.ABSTRACT_PARAM_CODE, B.FROM_UNIT_CODE, B.TO_UNIT_CODE,
  B.FACTOR, B.OFFSET, B.FUNCTION)
WHEN MATCHED THEN
UPDATE SET
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.FROM_UNIT_CODE = B.FROM_UNIT_CODE,
  A.TO_UNIT_CODE = B.TO_UNIT_CODE,
  A.FACTOR = B.FACTOR,
  A.OFFSET = B.OFFSET,
  A.FUNCTION = B.FUNCTION;

MERGE INTO CWMS_UNIT_CONVERSION A USING
 (SELECT
  'm2/s' as FROM_UNIT_ID,
  'ft2/s' as TO_UNIT_ID,
  35 as ABSTRACT_PARAM_CODE,
  130 as FROM_UNIT_CODE,
  131 as TO_UNIT_CODE,
  10.76391041670972 as FACTOR,
  0 as OFFSET,
  NULL as FUNCTION
  FROM DUAL) B
ON (A.FROM_UNIT_ID = B.FROM_UNIT_ID and A.TO_UNIT_ID = B.TO_UNIT_ID)
WHEN NOT MATCHED THEN
INSERT (
  FROM_UNIT_ID, TO_UNIT_ID, ABSTRACT_PARAM_CODE, FROM_UNIT_CODE, TO_UNIT_CODE,
  FACTOR, OFFSET, FUNCTION)
VALUES (
  B.FROM_UNIT_ID, B.TO_UNIT_ID, B.ABSTRACT_PARAM_CODE, B.FROM_UNIT_CODE, B.TO_UNIT_CODE,
  10.76391041670972, B.OFFSET, B.FUNCTION)
WHEN MATCHED THEN
UPDATE SET
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.FROM_UNIT_CODE = B.FROM_UNIT_CODE,
  A.TO_UNIT_CODE = B.TO_UNIT_CODE,
  A.FACTOR = 10.76391041670972,
  A.OFFSET = B.OFFSET,
  A.FUNCTION = B.FUNCTION;

MERGE INTO CWMS_UNIT_CONVERSION A USING
 (SELECT
  'm2/s' as FROM_UNIT_ID,
  'm2/s' as TO_UNIT_ID,
  35 as ABSTRACT_PARAM_CODE,
  130 as FROM_UNIT_CODE,
  130 as TO_UNIT_CODE,
  1 as FACTOR,
  0 as OFFSET,
  NULL as FUNCTION
  FROM DUAL) B
ON (A.FROM_UNIT_ID = B.FROM_UNIT_ID and A.TO_UNIT_ID = B.TO_UNIT_ID)
WHEN NOT MATCHED THEN
INSERT (
  FROM_UNIT_ID, TO_UNIT_ID, ABSTRACT_PARAM_CODE, FROM_UNIT_CODE, TO_UNIT_CODE,
  FACTOR, OFFSET, FUNCTION)
VALUES (
  B.FROM_UNIT_ID, B.TO_UNIT_ID, B.ABSTRACT_PARAM_CODE, B.FROM_UNIT_CODE, B.TO_UNIT_CODE,
  B.FACTOR, B.OFFSET, B.FUNCTION)
WHEN MATCHED THEN
UPDATE SET
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.FROM_UNIT_CODE = B.FROM_UNIT_CODE,
  A.TO_UNIT_CODE = B.TO_UNIT_CODE,
  A.FACTOR = B.FACTOR,
  A.OFFSET = B.OFFSET,
  A.FUNCTION = B.FUNCTION;

COMMIT;

MERGE INTO AT_PARAMETER A USING
 (SELECT
  49 as PARAMETER_CODE,
  53 as DB_OFFICE_CODE,
  49 as BASE_PARAMETER_CODE,
  NULL as SUB_PARAMETER_ID,
  'Depth Velocity' as SUB_PARAMETER_DESC
  FROM DUAL) B
ON (A.PARAMETER_CODE = B.PARAMETER_CODE)
WHEN NOT MATCHED THEN 
INSERT (
  PARAMETER_CODE, DB_OFFICE_CODE, BASE_PARAMETER_CODE, SUB_PARAMETER_ID, SUB_PARAMETER_DESC)
VALUES (
  B.PARAMETER_CODE, B.DB_OFFICE_CODE, B.BASE_PARAMETER_CODE, B.SUB_PARAMETER_ID, B.SUB_PARAMETER_DESC)
WHEN MATCHED THEN
UPDATE SET 
  A.DB_OFFICE_CODE = B.DB_OFFICE_CODE,
  A.BASE_PARAMETER_CODE = B.BASE_PARAMETER_CODE,
  A.SUB_PARAMETER_ID = B.SUB_PARAMETER_ID,
  A.SUB_PARAMETER_DESC = B.SUB_PARAMETER_DESC;

COMMIT;

MERGE INTO AT_UNIT_ALIAS A USING
 (SELECT
  'DEGF' as ALIAS_ID,
  53 as DB_OFFICE_CODE,
  68 as UNIT_CODE
  FROM DUAL) B
ON (A.ALIAS_ID = B.ALIAS_ID and A.DB_OFFICE_CODE = B.DB_OFFICE_CODE)
WHEN NOT MATCHED THEN
INSERT (
  ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE)
VALUES (
  B.ALIAS_ID, B.DB_OFFICE_CODE, B.UNIT_CODE)
WHEN MATCHED THEN
UPDATE SET
  A.UNIT_CODE = B.UNIT_CODE;

MERGE INTO AT_UNIT_ALIAS A USING
 (SELECT
  'micrograms' as ALIAS_ID,
  53 as DB_OFFICE_CODE,
  132 as UNIT_CODE
  FROM DUAL) B
ON (A.ALIAS_ID = B.ALIAS_ID and A.DB_OFFICE_CODE = B.DB_OFFICE_CODE)
WHEN NOT MATCHED THEN
INSERT (
  ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE)
VALUES (
  B.ALIAS_ID, B.DB_OFFICE_CODE, B.UNIT_CODE)
WHEN MATCHED THEN
UPDATE SET
  A.UNIT_CODE = B.UNIT_CODE;

MERGE INTO AT_UNIT_ALIAS A USING
 (SELECT
  'micrograms/L' as ALIAS_ID,
  53 as DB_OFFICE_CODE,
  133 as UNIT_CODE
  FROM DUAL) B
ON (A.ALIAS_ID = B.ALIAS_ID and A.DB_OFFICE_CODE = B.DB_OFFICE_CODE)
WHEN NOT MATCHED THEN
INSERT (
  ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE)
VALUES (
  B.ALIAS_ID, B.DB_OFFICE_CODE, B.UNIT_CODE)
WHEN MATCHED THEN
UPDATE SET
  A.UNIT_CODE = B.UNIT_CODE;

MERGE INTO AT_UNIT_ALIAS A USING
 (SELECT
  'micrograms/l' as ALIAS_ID,
  53 as DB_OFFICE_CODE,
  133 as UNIT_CODE
  FROM DUAL) B
ON (A.ALIAS_ID = B.ALIAS_ID and A.DB_OFFICE_CODE = B.DB_OFFICE_CODE)
WHEN NOT MATCHED THEN
INSERT (
  ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE)
VALUES (
  B.ALIAS_ID, B.DB_OFFICE_CODE, B.UNIT_CODE)
WHEN MATCHED THEN
UPDATE SET
  A.UNIT_CODE = B.UNIT_CODE;

COMMIT;

MERGE INTO CWMS_UNIT_CONVERSION A USING
 (SELECT
  'g' as FROM_UNIT_ID,
  'ug' as TO_UNIT_ID,
  32 as ABSTRACT_PARAM_CODE,
  115 as FROM_UNIT_CODE,
  132 as TO_UNIT_CODE,
  1000000 as FACTOR,
  0 as OFFSET,
  NULL as FUNCTION
  FROM DUAL) B
ON (A.FROM_UNIT_ID = B.FROM_UNIT_ID and A.TO_UNIT_ID = B.TO_UNIT_ID)
WHEN NOT MATCHED THEN
INSERT (
  FROM_UNIT_ID, TO_UNIT_ID, ABSTRACT_PARAM_CODE, FROM_UNIT_CODE, TO_UNIT_CODE,
  FACTOR, OFFSET, FUNCTION)
VALUES (
  B.FROM_UNIT_ID, B.TO_UNIT_ID, B.ABSTRACT_PARAM_CODE, B.FROM_UNIT_CODE, B.TO_UNIT_CODE,
  B.FACTOR, B.OFFSET, B.FUNCTION)
WHEN MATCHED THEN
UPDATE SET
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.FROM_UNIT_CODE = B.FROM_UNIT_CODE,
  A.TO_UNIT_CODE = B.TO_UNIT_CODE,
  A.FACTOR = B.FACTOR,
  A.OFFSET = B.OFFSET,
  A.FUNCTION = B.FUNCTION;

MERGE INTO CWMS_UNIT_CONVERSION A USING
 (SELECT
  'g/l' as FROM_UNIT_ID,
  'ug/l' as TO_UNIT_ID,
  18 as ABSTRACT_PARAM_CODE,
  49 as FROM_UNIT_CODE,
  133 as TO_UNIT_CODE,
  1000000 as FACTOR,
  0 as OFFSET,
  NULL as FUNCTION
  FROM DUAL) B
ON (A.FROM_UNIT_ID = B.FROM_UNIT_ID and A.TO_UNIT_ID = B.TO_UNIT_ID)
WHEN NOT MATCHED THEN
INSERT (
  FROM_UNIT_ID, TO_UNIT_ID, ABSTRACT_PARAM_CODE, FROM_UNIT_CODE, TO_UNIT_CODE,
  FACTOR, OFFSET, FUNCTION)
VALUES (
  B.FROM_UNIT_ID, B.TO_UNIT_ID, B.ABSTRACT_PARAM_CODE, B.FROM_UNIT_CODE, B.TO_UNIT_CODE,
  B.FACTOR, B.OFFSET, B.FUNCTION)
WHEN MATCHED THEN
UPDATE SET
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.FROM_UNIT_CODE = B.FROM_UNIT_CODE,
  A.TO_UNIT_CODE = B.TO_UNIT_CODE,
  A.FACTOR = B.FACTOR,
  A.OFFSET = B.OFFSET,
  A.FUNCTION = B.FUNCTION;

MERGE INTO CWMS_UNIT_CONVERSION A USING
 (SELECT
  'gm/cm3' as FROM_UNIT_ID,
  'ug/l' as TO_UNIT_ID,
  18 as ABSTRACT_PARAM_CODE,
  50 as FROM_UNIT_CODE,
  133 as TO_UNIT_CODE,
  1000000000 as FACTOR,
  0 as OFFSET,
  NULL as FUNCTION
  FROM DUAL) B
ON (A.FROM_UNIT_ID = B.FROM_UNIT_ID and A.TO_UNIT_ID = B.TO_UNIT_ID)
WHEN NOT MATCHED THEN
INSERT (
  FROM_UNIT_ID, TO_UNIT_ID, ABSTRACT_PARAM_CODE, FROM_UNIT_CODE, TO_UNIT_CODE,
  FACTOR, OFFSET, FUNCTION)
VALUES (
  B.FROM_UNIT_ID, B.TO_UNIT_ID, B.ABSTRACT_PARAM_CODE, B.FROM_UNIT_CODE, B.TO_UNIT_CODE,
  B.FACTOR, B.OFFSET, B.FUNCTION)
WHEN MATCHED THEN
UPDATE SET
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.FROM_UNIT_CODE = B.FROM_UNIT_CODE,
  A.TO_UNIT_CODE = B.TO_UNIT_CODE,
  A.FACTOR = B.FACTOR,
  A.OFFSET = B.OFFSET,
  A.FUNCTION = B.FUNCTION;

MERGE INTO CWMS_UNIT_CONVERSION A USING
 (SELECT
  'kg' as FROM_UNIT_ID,
  'ug' as TO_UNIT_ID,
  32 as ABSTRACT_PARAM_CODE,
  116 as FROM_UNIT_CODE,
  132 as TO_UNIT_CODE,
  1000000000 as FACTOR,
  0 as OFFSET,
  NULL as FUNCTION
  FROM DUAL) B
ON (A.FROM_UNIT_ID = B.FROM_UNIT_ID and A.TO_UNIT_ID = B.TO_UNIT_ID)
WHEN NOT MATCHED THEN
INSERT (
  FROM_UNIT_ID, TO_UNIT_ID, ABSTRACT_PARAM_CODE, FROM_UNIT_CODE, TO_UNIT_CODE,
  FACTOR, OFFSET, FUNCTION)
VALUES (
  B.FROM_UNIT_ID, B.TO_UNIT_ID, B.ABSTRACT_PARAM_CODE, B.FROM_UNIT_CODE, B.TO_UNIT_CODE,
  B.FACTOR, B.OFFSET, B.FUNCTION)
WHEN MATCHED THEN
UPDATE SET
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.FROM_UNIT_CODE = B.FROM_UNIT_CODE,
  A.TO_UNIT_CODE = B.TO_UNIT_CODE,
  A.FACTOR = B.FACTOR,
  A.OFFSET = B.OFFSET,
  A.FUNCTION = B.FUNCTION;

MERGE INTO CWMS_UNIT_CONVERSION A USING
 (SELECT
  'lbm' as FROM_UNIT_ID,
  'ug' as TO_UNIT_ID,
  32 as ABSTRACT_PARAM_CODE,
  117 as FROM_UNIT_CODE,
  132 as TO_UNIT_CODE,
  453592370 as FACTOR,
  0 as OFFSET,
  NULL as FUNCTION
  FROM DUAL) B
ON (A.FROM_UNIT_ID = B.FROM_UNIT_ID and A.TO_UNIT_ID = B.TO_UNIT_ID)
WHEN NOT MATCHED THEN
INSERT (
  FROM_UNIT_ID, TO_UNIT_ID, ABSTRACT_PARAM_CODE, FROM_UNIT_CODE, TO_UNIT_CODE,
  FACTOR, OFFSET, FUNCTION)
VALUES (
  B.FROM_UNIT_ID, B.TO_UNIT_ID, B.ABSTRACT_PARAM_CODE, B.FROM_UNIT_CODE, B.TO_UNIT_CODE,
  B.FACTOR, B.OFFSET, B.FUNCTION)
WHEN MATCHED THEN
UPDATE SET
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.FROM_UNIT_CODE = B.FROM_UNIT_CODE,
  A.TO_UNIT_CODE = B.TO_UNIT_CODE,
  A.FACTOR = B.FACTOR,
  A.OFFSET = B.OFFSET,
  A.FUNCTION = B.FUNCTION;

MERGE INTO CWMS_UNIT_CONVERSION A USING
 (SELECT
  'mg' as FROM_UNIT_ID,
  'ug' as TO_UNIT_ID,
  32 as ABSTRACT_PARAM_CODE,
  118 as FROM_UNIT_CODE,
  132 as TO_UNIT_CODE,
  1000 as FACTOR,
  0 as OFFSET,
  NULL as FUNCTION
  FROM DUAL) B
ON (A.FROM_UNIT_ID = B.FROM_UNIT_ID and A.TO_UNIT_ID = B.TO_UNIT_ID)
WHEN NOT MATCHED THEN
INSERT (
  FROM_UNIT_ID, TO_UNIT_ID, ABSTRACT_PARAM_CODE, FROM_UNIT_CODE, TO_UNIT_CODE,
  FACTOR, OFFSET, FUNCTION)
VALUES (
  B.FROM_UNIT_ID, B.TO_UNIT_ID, B.ABSTRACT_PARAM_CODE, B.FROM_UNIT_CODE, B.TO_UNIT_CODE,
  B.FACTOR, B.OFFSET, B.FUNCTION)
WHEN MATCHED THEN
UPDATE SET
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.FROM_UNIT_CODE = B.FROM_UNIT_CODE,
  A.TO_UNIT_CODE = B.TO_UNIT_CODE,
  A.FACTOR = B.FACTOR,
  A.OFFSET = B.OFFSET,
  A.FUNCTION = B.FUNCTION;

MERGE INTO CWMS_UNIT_CONVERSION A USING
 (SELECT
  'mg/l' as FROM_UNIT_ID,
  'ug/l' as TO_UNIT_ID,
  18 as ABSTRACT_PARAM_CODE,
  51 as FROM_UNIT_CODE,
  133 as TO_UNIT_CODE,
  1000 as FACTOR,
  0 as OFFSET,
  NULL as FUNCTION
  FROM DUAL) B
ON (A.FROM_UNIT_ID = B.FROM_UNIT_ID and A.TO_UNIT_ID = B.TO_UNIT_ID)
WHEN NOT MATCHED THEN
INSERT (
  FROM_UNIT_ID, TO_UNIT_ID, ABSTRACT_PARAM_CODE, FROM_UNIT_CODE, TO_UNIT_CODE,
  FACTOR, OFFSET, FUNCTION)
VALUES (
  B.FROM_UNIT_ID, B.TO_UNIT_ID, B.ABSTRACT_PARAM_CODE, B.FROM_UNIT_CODE, B.TO_UNIT_CODE,
  B.FACTOR, B.OFFSET, B.FUNCTION)
WHEN MATCHED THEN
UPDATE SET
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.FROM_UNIT_CODE = B.FROM_UNIT_CODE,
  A.TO_UNIT_CODE = B.TO_UNIT_CODE,
  A.FACTOR = B.FACTOR,
  A.OFFSET = B.OFFSET,
  A.FUNCTION = B.FUNCTION;

MERGE INTO CWMS_UNIT_CONVERSION A USING
 (SELECT
  'ppm' as FROM_UNIT_ID,
  'ug/l' as TO_UNIT_ID,
  18 as ABSTRACT_PARAM_CODE,
  52 as FROM_UNIT_CODE,
  133 as TO_UNIT_CODE,
  1000 as FACTOR,
  0 as OFFSET,
  NULL as FUNCTION
  FROM DUAL) B
ON (A.FROM_UNIT_ID = B.FROM_UNIT_ID and A.TO_UNIT_ID = B.TO_UNIT_ID)
WHEN NOT MATCHED THEN
INSERT (
  FROM_UNIT_ID, TO_UNIT_ID, ABSTRACT_PARAM_CODE, FROM_UNIT_CODE, TO_UNIT_CODE,
  FACTOR, OFFSET, FUNCTION)
VALUES (
  B.FROM_UNIT_ID, B.TO_UNIT_ID, B.ABSTRACT_PARAM_CODE, B.FROM_UNIT_CODE, B.TO_UNIT_CODE,
  B.FACTOR, B.OFFSET, B.FUNCTION)
WHEN MATCHED THEN
UPDATE SET
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.FROM_UNIT_CODE = B.FROM_UNIT_CODE,
  A.TO_UNIT_CODE = B.TO_UNIT_CODE,
  A.FACTOR = B.FACTOR,
  A.OFFSET = B.OFFSET,
  A.FUNCTION = B.FUNCTION;

MERGE INTO CWMS_UNIT_CONVERSION A USING
 (SELECT
  'ton' as FROM_UNIT_ID,
  'ug' as TO_UNIT_ID,
  32 as ABSTRACT_PARAM_CODE,
  119 as FROM_UNIT_CODE,
  132 as TO_UNIT_CODE,
  907184740000 as FACTOR,
  0 as OFFSET,
  NULL as FUNCTION
  FROM DUAL) B
ON (A.FROM_UNIT_ID = B.FROM_UNIT_ID and A.TO_UNIT_ID = B.TO_UNIT_ID)
WHEN NOT MATCHED THEN
INSERT (
  FROM_UNIT_ID, TO_UNIT_ID, ABSTRACT_PARAM_CODE, FROM_UNIT_CODE, TO_UNIT_CODE,
  FACTOR, OFFSET, FUNCTION)
VALUES (
  B.FROM_UNIT_ID, B.TO_UNIT_ID, B.ABSTRACT_PARAM_CODE, B.FROM_UNIT_CODE, B.TO_UNIT_CODE,
  B.FACTOR, B.OFFSET, B.FUNCTION)
WHEN MATCHED THEN
UPDATE SET
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.FROM_UNIT_CODE = B.FROM_UNIT_CODE,
  A.TO_UNIT_CODE = B.TO_UNIT_CODE,
  A.FACTOR = B.FACTOR,
  A.OFFSET = B.OFFSET,
  A.FUNCTION = B.FUNCTION;

MERGE INTO CWMS_UNIT_CONVERSION A USING
 (SELECT
  'tonne' as FROM_UNIT_ID,
  'ug' as TO_UNIT_ID,
  32 as ABSTRACT_PARAM_CODE,
  120 as FROM_UNIT_CODE,
  132 as TO_UNIT_CODE,
  1000000000000 as FACTOR,
  0 as OFFSET,
  NULL as FUNCTION
  FROM DUAL) B
ON (A.FROM_UNIT_ID = B.FROM_UNIT_ID and A.TO_UNIT_ID = B.TO_UNIT_ID)
WHEN NOT MATCHED THEN
INSERT (
  FROM_UNIT_ID, TO_UNIT_ID, ABSTRACT_PARAM_CODE, FROM_UNIT_CODE, TO_UNIT_CODE,
  FACTOR, OFFSET, FUNCTION)
VALUES (
  B.FROM_UNIT_ID, B.TO_UNIT_ID, B.ABSTRACT_PARAM_CODE, B.FROM_UNIT_CODE, B.TO_UNIT_CODE,
  B.FACTOR, B.OFFSET, B.FUNCTION)
WHEN MATCHED THEN
UPDATE SET
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.FROM_UNIT_CODE = B.FROM_UNIT_CODE,
  A.TO_UNIT_CODE = B.TO_UNIT_CODE,
  A.FACTOR = B.FACTOR,
  A.OFFSET = B.OFFSET,
  A.FUNCTION = B.FUNCTION;

MERGE INTO CWMS_UNIT_CONVERSION A USING
 (SELECT
  'ug' as FROM_UNIT_ID,
  'g' as TO_UNIT_ID,
  32 as ABSTRACT_PARAM_CODE,
  132 as FROM_UNIT_CODE,
  115 as TO_UNIT_CODE,
  1E-6 as FACTOR,
  0 as OFFSET,
  NULL as FUNCTION
  FROM DUAL) B
ON (A.FROM_UNIT_ID = B.FROM_UNIT_ID and A.TO_UNIT_ID = B.TO_UNIT_ID)
WHEN NOT MATCHED THEN
INSERT (
  FROM_UNIT_ID, TO_UNIT_ID, ABSTRACT_PARAM_CODE, FROM_UNIT_CODE, TO_UNIT_CODE,
  FACTOR, OFFSET, FUNCTION)
VALUES (
  B.FROM_UNIT_ID, B.TO_UNIT_ID, B.ABSTRACT_PARAM_CODE, B.FROM_UNIT_CODE, B.TO_UNIT_CODE,
  B.FACTOR, B.OFFSET, B.FUNCTION)
WHEN MATCHED THEN
UPDATE SET
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.FROM_UNIT_CODE = B.FROM_UNIT_CODE,
  A.TO_UNIT_CODE = B.TO_UNIT_CODE,
  A.FACTOR = B.FACTOR,
  A.OFFSET = B.OFFSET,
  A.FUNCTION = B.FUNCTION;

MERGE INTO CWMS_UNIT_CONVERSION A USING
 (SELECT
  'ug' as FROM_UNIT_ID,
  'kg' as TO_UNIT_ID,
  32 as ABSTRACT_PARAM_CODE,
  132 as FROM_UNIT_CODE,
  116 as TO_UNIT_CODE,
  1E-9 as FACTOR,
  0 as OFFSET,
  NULL as FUNCTION
  FROM DUAL) B
ON (A.FROM_UNIT_ID = B.FROM_UNIT_ID and A.TO_UNIT_ID = B.TO_UNIT_ID)
WHEN NOT MATCHED THEN
INSERT (
  FROM_UNIT_ID, TO_UNIT_ID, ABSTRACT_PARAM_CODE, FROM_UNIT_CODE, TO_UNIT_CODE,
  FACTOR, OFFSET, FUNCTION)
VALUES (
  B.FROM_UNIT_ID, B.TO_UNIT_ID, B.ABSTRACT_PARAM_CODE, B.FROM_UNIT_CODE, B.TO_UNIT_CODE,
  B.FACTOR, B.OFFSET, B.FUNCTION)
WHEN MATCHED THEN
UPDATE SET
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.FROM_UNIT_CODE = B.FROM_UNIT_CODE,
  A.TO_UNIT_CODE = B.TO_UNIT_CODE,
  A.FACTOR = B.FACTOR,
  A.OFFSET = B.OFFSET,
  A.FUNCTION = B.FUNCTION;

MERGE INTO CWMS_UNIT_CONVERSION A USING
 (SELECT
  'ug' as FROM_UNIT_ID,
  'lbm' as TO_UNIT_ID,
  32 as ABSTRACT_PARAM_CODE,
  132 as FROM_UNIT_CODE,
  117 as TO_UNIT_CODE,
  2.2046226218487758E-9 as FACTOR,
  0 as OFFSET,
  NULL as FUNCTION
  FROM DUAL) B
ON (A.FROM_UNIT_ID = B.FROM_UNIT_ID and A.TO_UNIT_ID = B.TO_UNIT_ID)
WHEN NOT MATCHED THEN
INSERT (
  FROM_UNIT_ID, TO_UNIT_ID, ABSTRACT_PARAM_CODE, FROM_UNIT_CODE, TO_UNIT_CODE,
  FACTOR, OFFSET, FUNCTION)
VALUES (
  B.FROM_UNIT_ID, B.TO_UNIT_ID, B.ABSTRACT_PARAM_CODE, B.FROM_UNIT_CODE, B.TO_UNIT_CODE,
  B.FACTOR, B.OFFSET, B.FUNCTION)
WHEN MATCHED THEN
UPDATE SET
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.FROM_UNIT_CODE = B.FROM_UNIT_CODE,
  A.TO_UNIT_CODE = B.TO_UNIT_CODE,
  A.FACTOR = B.FACTOR,
  A.OFFSET = B.OFFSET,
  A.FUNCTION = B.FUNCTION;

MERGE INTO CWMS_UNIT_CONVERSION A USING
 (SELECT
  'ug' as FROM_UNIT_ID,
  'mg' as TO_UNIT_ID,
  32 as ABSTRACT_PARAM_CODE,
  132 as FROM_UNIT_CODE,
  118 as TO_UNIT_CODE,
  0.001 as FACTOR,
  0 as OFFSET,
  NULL as FUNCTION
  FROM DUAL) B
ON (A.FROM_UNIT_ID = B.FROM_UNIT_ID and A.TO_UNIT_ID = B.TO_UNIT_ID)
WHEN NOT MATCHED THEN
INSERT (
  FROM_UNIT_ID, TO_UNIT_ID, ABSTRACT_PARAM_CODE, FROM_UNIT_CODE, TO_UNIT_CODE,
  FACTOR, OFFSET, FUNCTION)
VALUES (
  B.FROM_UNIT_ID, B.TO_UNIT_ID, B.ABSTRACT_PARAM_CODE, B.FROM_UNIT_CODE, B.TO_UNIT_CODE,
  B.FACTOR, B.OFFSET, B.FUNCTION)
WHEN MATCHED THEN
UPDATE SET
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.FROM_UNIT_CODE = B.FROM_UNIT_CODE,
  A.TO_UNIT_CODE = B.TO_UNIT_CODE,
  A.FACTOR = B.FACTOR,
  A.OFFSET = B.OFFSET,
  A.FUNCTION = B.FUNCTION;

MERGE INTO CWMS_UNIT_CONVERSION A USING
 (SELECT
  'ug' as FROM_UNIT_ID,
  'ton' as TO_UNIT_ID,
  32 as ABSTRACT_PARAM_CODE,
  132 as FROM_UNIT_CODE,
  119 as TO_UNIT_CODE,
  1.1023113109243881E-012 as FACTOR,
  0 as OFFSET,
  NULL as FUNCTION
  FROM DUAL) B
ON (A.FROM_UNIT_ID = B.FROM_UNIT_ID and A.TO_UNIT_ID = B.TO_UNIT_ID)
WHEN NOT MATCHED THEN
INSERT (
  FROM_UNIT_ID, TO_UNIT_ID, ABSTRACT_PARAM_CODE, FROM_UNIT_CODE, TO_UNIT_CODE,
  FACTOR, OFFSET, FUNCTION)
VALUES (
  B.FROM_UNIT_ID, B.TO_UNIT_ID, B.ABSTRACT_PARAM_CODE, B.FROM_UNIT_CODE, B.TO_UNIT_CODE,
  B.FACTOR, B.OFFSET, B.FUNCTION)
WHEN MATCHED THEN
UPDATE SET
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.FROM_UNIT_CODE = B.FROM_UNIT_CODE,
  A.TO_UNIT_CODE = B.TO_UNIT_CODE,
  A.FACTOR = B.FACTOR,
  A.OFFSET = B.OFFSET,
  A.FUNCTION = B.FUNCTION;

MERGE INTO CWMS_UNIT_CONVERSION A USING
 (SELECT
  'ug' as FROM_UNIT_ID,
  'tonne' as TO_UNIT_ID,
  32 as ABSTRACT_PARAM_CODE,
  132 as FROM_UNIT_CODE,
  120 as TO_UNIT_CODE,
  9.9999999999999998E-013 as FACTOR,
  0 as OFFSET,
  NULL as FUNCTION
  FROM DUAL) B
ON (A.FROM_UNIT_ID = B.FROM_UNIT_ID and A.TO_UNIT_ID = B.TO_UNIT_ID)
WHEN NOT MATCHED THEN
INSERT (
  FROM_UNIT_ID, TO_UNIT_ID, ABSTRACT_PARAM_CODE, FROM_UNIT_CODE, TO_UNIT_CODE,
  FACTOR, OFFSET, FUNCTION)
VALUES (
  B.FROM_UNIT_ID, B.TO_UNIT_ID, B.ABSTRACT_PARAM_CODE, B.FROM_UNIT_CODE, B.TO_UNIT_CODE,
  B.FACTOR, B.OFFSET, B.FUNCTION)
WHEN MATCHED THEN
UPDATE SET
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.FROM_UNIT_CODE = B.FROM_UNIT_CODE,
  A.TO_UNIT_CODE = B.TO_UNIT_CODE,
  A.FACTOR = B.FACTOR,
  A.OFFSET = B.OFFSET,
  A.FUNCTION = B.FUNCTION;

MERGE INTO CWMS_UNIT_CONVERSION A USING
 (SELECT
  'ug' as FROM_UNIT_ID,
  'ug' as TO_UNIT_ID,
  32 as ABSTRACT_PARAM_CODE,
  132 as FROM_UNIT_CODE,
  132 as TO_UNIT_CODE,
  1 as FACTOR,
  0 as OFFSET,
  NULL as FUNCTION
  FROM DUAL) B
ON (A.FROM_UNIT_ID = B.FROM_UNIT_ID and A.TO_UNIT_ID = B.TO_UNIT_ID)
WHEN NOT MATCHED THEN
INSERT (
  FROM_UNIT_ID, TO_UNIT_ID, ABSTRACT_PARAM_CODE, FROM_UNIT_CODE, TO_UNIT_CODE,
  FACTOR, OFFSET, FUNCTION)
VALUES (
  B.FROM_UNIT_ID, B.TO_UNIT_ID, B.ABSTRACT_PARAM_CODE, B.FROM_UNIT_CODE, B.TO_UNIT_CODE,
  B.FACTOR, B.OFFSET, B.FUNCTION)
WHEN MATCHED THEN
UPDATE SET
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.FROM_UNIT_CODE = B.FROM_UNIT_CODE,
  A.TO_UNIT_CODE = B.TO_UNIT_CODE,
  A.FACTOR = B.FACTOR,
  A.OFFSET = B.OFFSET,
  A.FUNCTION = B.FUNCTION;

MERGE INTO CWMS_UNIT_CONVERSION A USING
 (SELECT
  'ug/l' as FROM_UNIT_ID,
  'g/l' as TO_UNIT_ID,
  18 as ABSTRACT_PARAM_CODE,
  133 as FROM_UNIT_CODE,
  49 as TO_UNIT_CODE,
  1E-6 as FACTOR,
  0 as OFFSET,
  NULL as FUNCTION
  FROM DUAL) B
ON (A.FROM_UNIT_ID = B.FROM_UNIT_ID and A.TO_UNIT_ID = B.TO_UNIT_ID)
WHEN NOT MATCHED THEN
INSERT (
  FROM_UNIT_ID, TO_UNIT_ID, ABSTRACT_PARAM_CODE, FROM_UNIT_CODE, TO_UNIT_CODE,
  FACTOR, OFFSET, FUNCTION)
VALUES (
  B.FROM_UNIT_ID, B.TO_UNIT_ID, B.ABSTRACT_PARAM_CODE, B.FROM_UNIT_CODE, B.TO_UNIT_CODE,
  B.FACTOR, B.OFFSET, B.FUNCTION)
WHEN MATCHED THEN
UPDATE SET
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.FROM_UNIT_CODE = B.FROM_UNIT_CODE,
  A.TO_UNIT_CODE = B.TO_UNIT_CODE,
  A.FACTOR = B.FACTOR,
  A.OFFSET = B.OFFSET,
  A.FUNCTION = B.FUNCTION;

MERGE INTO CWMS_UNIT_CONVERSION A USING
 (SELECT
  'ug/l' as FROM_UNIT_ID,
  'gm/cm3' as TO_UNIT_ID,
  18 as ABSTRACT_PARAM_CODE,
  133 as FROM_UNIT_CODE,
  50 as TO_UNIT_CODE,
  1E-9 as FACTOR,
  0 as OFFSET,
  NULL as FUNCTION
  FROM DUAL) B
ON (A.FROM_UNIT_ID = B.FROM_UNIT_ID and A.TO_UNIT_ID = B.TO_UNIT_ID)
WHEN NOT MATCHED THEN
INSERT (
  FROM_UNIT_ID, TO_UNIT_ID, ABSTRACT_PARAM_CODE, FROM_UNIT_CODE, TO_UNIT_CODE,
  FACTOR, OFFSET, FUNCTION)
VALUES (
  B.FROM_UNIT_ID, B.TO_UNIT_ID, B.ABSTRACT_PARAM_CODE, B.FROM_UNIT_CODE, B.TO_UNIT_CODE,
  B.FACTOR, B.OFFSET, B.FUNCTION)
WHEN MATCHED THEN
UPDATE SET
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.FROM_UNIT_CODE = B.FROM_UNIT_CODE,
  A.TO_UNIT_CODE = B.TO_UNIT_CODE,
  A.FACTOR = B.FACTOR,
  A.OFFSET = B.OFFSET,
  A.FUNCTION = B.FUNCTION;

MERGE INTO CWMS_UNIT_CONVERSION A USING
 (SELECT
  'ug/l' as FROM_UNIT_ID,
  'mg/l' as TO_UNIT_ID,
  18 as ABSTRACT_PARAM_CODE,
  133 as FROM_UNIT_CODE,
  51 as TO_UNIT_CODE,
  0.001 as FACTOR,
  0 as OFFSET,
  NULL as FUNCTION
  FROM DUAL) B
ON (A.FROM_UNIT_ID = B.FROM_UNIT_ID and A.TO_UNIT_ID = B.TO_UNIT_ID)
WHEN NOT MATCHED THEN
INSERT (
  FROM_UNIT_ID, TO_UNIT_ID, ABSTRACT_PARAM_CODE, FROM_UNIT_CODE, TO_UNIT_CODE,
  FACTOR, OFFSET, FUNCTION)
VALUES (
  B.FROM_UNIT_ID, B.TO_UNIT_ID, B.ABSTRACT_PARAM_CODE, B.FROM_UNIT_CODE, B.TO_UNIT_CODE,
  B.FACTOR, B.OFFSET, B.FUNCTION)
WHEN MATCHED THEN
UPDATE SET
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.FROM_UNIT_CODE = B.FROM_UNIT_CODE,
  A.TO_UNIT_CODE = B.TO_UNIT_CODE,
  A.FACTOR = B.FACTOR,
  A.OFFSET = B.OFFSET,
  A.FUNCTION = B.FUNCTION;

MERGE INTO CWMS_UNIT_CONVERSION A USING
 (SELECT
  'ug/l' as FROM_UNIT_ID,
  'ppm' as TO_UNIT_ID,
  18 as ABSTRACT_PARAM_CODE,
  133 as FROM_UNIT_CODE,
  52 as TO_UNIT_CODE,
  0.001 as FACTOR,
  0 as OFFSET,
  NULL as FUNCTION
  FROM DUAL) B
ON (A.FROM_UNIT_ID = B.FROM_UNIT_ID and A.TO_UNIT_ID = B.TO_UNIT_ID)
WHEN NOT MATCHED THEN
INSERT (
  FROM_UNIT_ID, TO_UNIT_ID, ABSTRACT_PARAM_CODE, FROM_UNIT_CODE, TO_UNIT_CODE,
  FACTOR, OFFSET, FUNCTION)
VALUES (
  B.FROM_UNIT_ID, B.TO_UNIT_ID, B.ABSTRACT_PARAM_CODE, B.FROM_UNIT_CODE, B.TO_UNIT_CODE,
  B.FACTOR, B.OFFSET, B.FUNCTION)
WHEN MATCHED THEN
UPDATE SET
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.FROM_UNIT_CODE = B.FROM_UNIT_CODE,
  A.TO_UNIT_CODE = B.TO_UNIT_CODE,
  A.FACTOR = B.FACTOR,
  A.OFFSET = B.OFFSET,
  A.FUNCTION = B.FUNCTION;

MERGE INTO CWMS_UNIT_CONVERSION A USING
 (SELECT
  'ug/l' as FROM_UNIT_ID,
  'ug/l' as TO_UNIT_ID,
  18 as ABSTRACT_PARAM_CODE,
  133 as FROM_UNIT_CODE,
  133 as TO_UNIT_CODE,
  1 as FACTOR,
  0 as OFFSET,
  NULL as FUNCTION
  FROM DUAL) B
ON (A.FROM_UNIT_ID = B.FROM_UNIT_ID and A.TO_UNIT_ID = B.TO_UNIT_ID)
WHEN NOT MATCHED THEN
INSERT (
  FROM_UNIT_ID, TO_UNIT_ID, ABSTRACT_PARAM_CODE, FROM_UNIT_CODE, TO_UNIT_CODE,
  FACTOR, OFFSET, FUNCTION)
VALUES (
  B.FROM_UNIT_ID, B.TO_UNIT_ID, B.ABSTRACT_PARAM_CODE, B.FROM_UNIT_CODE, B.TO_UNIT_CODE,
  B.FACTOR, B.OFFSET, B.FUNCTION)
WHEN MATCHED THEN
UPDATE SET
  A.ABSTRACT_PARAM_CODE = B.ABSTRACT_PARAM_CODE,
  A.FROM_UNIT_CODE = B.FROM_UNIT_CODE,
  A.TO_UNIT_CODE = B.TO_UNIT_CODE,
  A.FACTOR = B.FACTOR,
  A.OFFSET = B.OFFSET,
  A.FUNCTION = B.FUNCTION;

COMMIT;

DECLARE
    l_cmd   VARCHAR2 (1024);
BEGIN
    FOR c IN (SELECT DISTINCT db_office_code
                FROM at_display_units)
    LOOP
        l_cmd :=
               'MERGE INTO AT_DISPLAY_UNITS A USING
 (SELECT '
            || c.db_office_code
            || ' as DB_OFFICE_CODE,
  49 as PARAMETER_CODE,
  ''EN'' as UNIT_SYSTEM,
  131 as DISPLAY_UNIT_CODE
  FROM DUAL) B
ON (A.DB_OFFICE_CODE = B.DB_OFFICE_CODE and A.PARAMETER_CODE = B.PARAMETER_CODE and A.UNIT_SYSTEM = B.UNIT_SYSTEM)
WHEN NOT MATCHED THEN
INSERT (
  DB_OFFICE_CODE, PARAMETER_CODE, UNIT_SYSTEM, DISPLAY_UNIT_CODE)
VALUES (
  B.DB_OFFICE_CODE, B.PARAMETER_CODE, B.UNIT_SYSTEM, B.DISPLAY_UNIT_CODE)
WHEN MATCHED THEN
UPDATE SET
  A.DISPLAY_UNIT_CODE = B.DISPLAY_UNIT_CODE';
        DBMS_OUTPUT.put_line (l_cmd);
	execute immediate l_cmd;
        l_cmd :=
               'MERGE INTO AT_DISPLAY_UNITS A USING
 (SELECT '
            || c.db_office_code
            || ' as DB_OFFICE_CODE,
  49 as PARAMETER_CODE,
  ''SI'' as UNIT_SYSTEM,
  130 as DISPLAY_UNIT_CODE
  FROM DUAL) B
ON (A.DB_OFFICE_CODE = B.DB_OFFICE_CODE and A.PARAMETER_CODE = B.PARAMETER_CODE and A.UNIT_SYSTEM = B.UNIT_SYSTEM)
WHEN NOT MATCHED THEN
INSERT (
  DB_OFFICE_CODE, PARAMETER_CODE, UNIT_SYSTEM, DISPLAY_UNIT_CODE)
VALUES (
  B.DB_OFFICE_CODE, B.PARAMETER_CODE, B.UNIT_SYSTEM, B.DISPLAY_UNIT_CODE)
WHEN MATCHED THEN
UPDATE SET
  A.DISPLAY_UNIT_CODE = B.DISPLAY_UNIT_CODE';
        DBMS_OUTPUT.put_line (l_cmd);
	execute immediate l_cmd;
    END LOOP;
END;
/
COMMIT;
