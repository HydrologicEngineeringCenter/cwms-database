/* CWMS Version 2.0
This script should be run by the cwms schema owner.
*/
set serveroutput on 
----------------------------------------------------
-- drop tables, mviews & mview logs if they exist --
----------------------------------------------------
declare
   type id_array_t is table of varchar2(32);
   table_names id_array_t := id_array_t(
      'at_sec_user_office',
      'at_ts_table_properties',
      'at_base_location',
      'at_physical_location',
      'at_agency_name',
      'at_alias_name',
      'at_data_stream_id',
      'at_display_units',
      'at_alarm_id',
      'at_alarm_criteria',
      'at_screening_id',
      'at_screening_criteria',
      'at_screening_dur_mag',
      'at_cwms_ts_spec',
      'at_shef_decode',
      'at_screening',
      'at_alarm',
      'at_comp_vt',
      'at_transform_criteria',
      'at_unit_alias',
      'at_user_preferences',
      'at_office_settings',
      'at_properties',
      'at_dss_file',
      'at_dss_ts_spec',
      'at_dss_ts_xchg_spec',
      'at_dss_xchg_set',
      'at_dss_ts_xchg_map',
      'at_ts_msg_archive_1',
      'at_ts_msg_archive_2',
      'at_mview_refresh_paused',
      'at_report_templates',
      'at_clob');
   mview_log_names id_array_t := id_array_t(
      'at_base_location',
      'at_physical_location',
      'at_cwms_ts_spec',
      'cwms_office',
      'cwms_abstract_parameter',
      'cwms_parameter_type',
      'cwms_base_parameter',
      'at_parameter',
      'cwms_interval',
      'cwms_duration',
      'cwms_unit'
   );
   mview_names id_array_t := id_array_t(
      'mv_cwms_ts_id'
   );
begin                
   for i in table_names.first .. table_names.last loop
      begin 
         execute immediate 'drop table ' || table_names(i) || ' cascade constraints';
         dbms_output.put_line('Dropped table ' || table_names(i));
      exception 
         when others then null;
      end;
   end loop;
   for i in mview_log_names.first .. mview_log_names.last loop
      begin 
         execute immediate 'drop materialized view log on ' || mview_log_names(i);
         dbms_output.put_line('Dropped materialized view log on ' || mview_log_names(i));
      exception 
         when others then null;
      end;
   end loop;
   for i in mview_names.first .. mview_names.last loop
      begin 
         execute immediate 'drop materialized view ' || mview_names(i);
         dbms_output.put_line('Dropped materialized view ' || mview_names(i));
      exception 
         when others then null;
      end;
   end loop;
end;
/

-------------------
-- CREATE TABLES --
-------------------

-------------------------
-- AT_SEC_USER_OFFICE table
-- 
CREATE TABLE AT_SEC_USER_OFFICE
(
  USER_ID            VARCHAR2(32 BYTE)  NOT NULL,
  PRIMARY_OFFICE_ID  VARCHAR2(16 BYTE)  NOT NULL
)
TABLESPACE CWMS_20DATA
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL;
-------------------------
-- AT_SEC_USER_OFFICE comments
-- 
COMMENT ON TABLE AT_SEC_USER_OFFICE IS 'Primary office IDs for CWMS Users';
COMMENT ON COLUMN AT_SEC_USER_OFFICE.USER_ID IS 'CWMS User ID';
COMMENT ON COLUMN AT_SEC_USER_OFFICE.PRIMARY_OFFICE_ID IS 'Primary Office ID for CWMS User';
-------------------------
-- AT_SEC_USER_OFFICE inidicies
-- 
CREATE UNIQUE INDEX AT_SEC_USER_OFFICE_PK ON AT_SEC_USER_OFFICE (USER_ID, PRIMARY_OFFICE_ID)
LOGGING
TABLESPACE CWMS_20DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;
-------------------------
-- AT_SEC_USER_OFFICE constraints
-- 
ALTER TABLE AT_SEC_USER_OFFICE ADD CONSTRAINT AT_SEC_USER_OFFICE_FK1 FOREIGN KEY (PRIMARY_OFFICE_ID) REFERENCES CWMS_OFFICE (OFFICE_ID);
-------------------------
-- AT_SEC_USER_OFFICE trigger
-- 
create or replace trigger at_sec_user_office_constraint
before insert or update of user_id, primary_office_id
on at_sec_user_office
referencing new as new old as old
for each row
declare
begin
   :new.user_id := upper(:new.user_id);
   :new.primary_office_id := upper(:new.primary_office_id);
end at_sec_user_office_constraint;
/
show errors;
commit;

-------------------------
-- AT_TS_TABLE_PROPERTIES table
-- 

CREATE TABLE AT_TS_TABLE_PROPERTIES
(
  START_DATE  DATE                              NOT NULL,
  END_DATE    DATE                              NOT NULL,
  TABLE_NAME  VARCHAR2(30 BYTE)                 NOT NULL, 
  CONSTRAINT AT_TS_TABLE_PROPERTIES_PK
 PRIMARY KEY
 (START_DATE)
)
ORGANIZATION INDEX
LOGGING
TABLESPACE CWMS_20AT_DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
MONITORING;

insert into at_ts_table_properties values (DATE '1800-01-01',DATE '2002-01-01','AT_TSV_ARCHIVAL');
insert into at_ts_table_properties values (DATE '2002-01-01',DATE '2003-01-01','AT_TSV_2002');
insert into at_ts_table_properties values (DATE '2003-01-01',DATE '2004-01-01','AT_TSV_2003');
insert into at_ts_table_properties values (DATE '2004-01-01',DATE '2005-01-01','AT_TSV_2004');
insert into at_ts_table_properties values (DATE '2005-01-01',DATE '2006-01-01','AT_TSV_2005');
insert into at_ts_table_properties values (DATE '2006-01-01',DATE '2007-01-01','AT_TSV_2006');
insert into at_ts_table_properties values (DATE '2007-01-01',DATE '2008-01-01','AT_TSV_2007');
commit;

---------------------------------
-- AT_BASE_LOCATION table.
-- 
CREATE TABLE AT_BASE_LOCATION
(
  BASE_LOCATION_CODE  NUMBER,
  DB_OFFICE_CODE      NUMBER                    NOT NULL,
  BASE_LOCATION_ID    VARCHAR2(16 BYTE)         NOT NULL,
  ACTIVE_FLAG         VARCHAR2(1 BYTE)
)
TABLESPACE CWMS_20AT_DATA
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN AT_BASE_LOCATION.DB_OFFICE_CODE IS 'Refererences the office "owning" this location.  In the CWMS v2 schema, the office hosting the database "owns" all locations.';
COMMENT ON COLUMN AT_BASE_LOCATION.BASE_LOCATION_ID IS 'Text name of this Base Location';
COMMENT ON COLUMN AT_BASE_LOCATION.ACTIVE_FLAG IS 'T or F';


CREATE UNIQUE INDEX AT_BASE_LOCATION_PK ON AT_BASE_LOCATION
(BASE_LOCATION_CODE)
LOGGING
TABLESPACE CWMS_20DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX AT_BASE_LOCATION_IDX1 ON AT_BASE_LOCATION
(DB_OFFICE_CODE, UPPER("BASE_LOCATION_ID"))
LOGGING
TABLESPACE CWMS_20DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


ALTER TABLE AT_BASE_LOCATION ADD (
   CONSTRAINT AT_BASE_LOCATION_CK_1 
   CHECK (TRIM("BASE_LOCATION_ID")="BASE_LOCATION_ID"))
/

--ALTER TABLE AT_BASE_LOCATION ADD (
--  CONSTRAINT AT_BASE_LOCATION_CK_2
-- CHECK (NVL("ACTIVE_FLAG",'T')='T'))
--/

ALTER TABLE AT_BASE_LOCATION ADD (
  CONSTRAINT AT_BASE_LOCATION_PK
 PRIMARY KEY
 (BASE_LOCATION_CODE)
    USING INDEX 
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ))
/


ALTER TABLE AT_BASE_LOCATION ADD (
  CONSTRAINT AT_BASE_LOCATION_FK1 
 FOREIGN KEY (DB_OFFICE_CODE) 
 REFERENCES CWMS_OFFICE (OFFICE_CODE))
/

INSERT INTO at_base_location
            (base_location_code, db_office_code, base_location_id, active_flag
            )
     VALUES (0, (SELECT office_code
                   FROM cwms_office
                  WHERE office_id = 'ALL'), 'Deleted TS ID', 'F'
            )
/
COMMIT
/

--------------------
-- AT_PHYSICAL_LOCATION table
-- 


CREATE TABLE AT_PHYSICAL_LOCATION
(
  LOCATION_CODE       NUMBER(10)                NOT NULL,
  BASE_LOCATION_CODE  NUMBER(10)                NOT NULL,
  SUB_LOCATION_ID     VARCHAR2(32 BYTE),
  TIME_ZONE_CODE      NUMBER(10),
  COUNTY_CODE         NUMBER(10),
  LOCATION_TYPE       VARCHAR2(32 BYTE),
  ELEVATION           NUMBER,
  VERTICAL_DATUM      VARCHAR2(16 BYTE),
  LONGITUDE           NUMBER,
  LATITUDE            NUMBER,
  HORIZONTAL_DATUM    VARCHAR2(16 BYTE),
  PUBLIC_NAME         VARCHAR2(32 BYTE),
  LONG_NAME           VARCHAR2(80 BYTE),
  DESCRIPTION         VARCHAR2(512 BYTE),
  ACTIVE_FLAG         VARCHAR2(1 BYTE)
)
TABLESPACE CWMS_20AT_DATA
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          504K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING
/

COMMENT ON TABLE AT_PHYSICAL_LOCATION IS 'Defines unique locations'
/

COMMENT ON COLUMN AT_PHYSICAL_LOCATION.LOCATION_CODE IS 'Unique record identifier, primarily used for internal database processing. This code is automatically assigned by the system.'
/

COMMENT ON COLUMN AT_PHYSICAL_LOCATION.TIME_ZONE_CODE IS 'References the time zone associated with the geographic location.  Not necessarily the time zone of any data collected.'
/

COMMENT ON COLUMN AT_PHYSICAL_LOCATION.COUNTY_CODE IS 'References the county'
/

COMMENT ON COLUMN AT_PHYSICAL_LOCATION.LOCATION_TYPE IS 'User-defined type (e.g. "Stream Gage", "Reservoir", etc...), up to 16 characters.'
/

COMMENT ON COLUMN AT_PHYSICAL_LOCATION.ELEVATION IS 'Ground elevation at location.'
/

COMMENT ON COLUMN AT_PHYSICAL_LOCATION.VERTICAL_DATUM IS 'Datum of elevation.'
/

COMMENT ON COLUMN AT_PHYSICAL_LOCATION.LONGITUDE IS 'Longitude of location.'
/

COMMENT ON COLUMN AT_PHYSICAL_LOCATION.LATITUDE IS 'Latitude of location.'
/

COMMENT ON COLUMN AT_PHYSICAL_LOCATION.PUBLIC_NAME IS 'User-defined public name, up to 32 characters.'
/

COMMENT ON COLUMN AT_PHYSICAL_LOCATION.LONG_NAME IS 'User-defined long name, up to 80 characters.'
/

COMMENT ON COLUMN AT_PHYSICAL_LOCATION.DESCRIPTION IS 'User-defined description, up to 512 characters.'
/

COMMENT ON COLUMN AT_PHYSICAL_LOCATION.ACTIVE_FLAG IS 'T or F'
/


CREATE UNIQUE INDEX AT_PHYSICAL_LOCATION_PK ON AT_PHYSICAL_LOCATION
(LOCATION_CODE)
LOGGING
TABLESPACE CWMS_20DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


CREATE UNIQUE INDEX AT_PHYSICAL_LOCATION_UI1 ON AT_PHYSICAL_LOCATION
(BASE_LOCATION_CODE, UPPER("SUB_LOCATION_ID"))
LOGGING
TABLESPACE CWMS_20AT_DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          104K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


ALTER TABLE AT_PHYSICAL_LOCATION ADD (
  CONSTRAINT AT_PHYSICAL_LOCATION_CK_2
 CHECK (ACTIVE_FLAG ='T' or ACTIVE_FLAG = 'F'))
/

ALTER TABLE AT_PHYSICAL_LOCATION ADD (
  CONSTRAINT AT_PHYSICAL_LOCATION_CK_3
 CHECK (TRIM("SUB_LOCATION_ID")="SUB_LOCATION_ID"))
/

ALTER TABLE AT_PHYSICAL_LOCATION ADD (
  CONSTRAINT AT_PHYSICAL_LOCATION_PK
 PRIMARY KEY
 (LOCATION_CODE)
    USING INDEX 
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ))
/


ALTER TABLE AT_PHYSICAL_LOCATION ADD (
  CONSTRAINT AT_PHYSICAL_LOCATION_FK_1 
 FOREIGN KEY (BASE_LOCATION_CODE) 
 REFERENCES AT_BASE_LOCATION (BASE_LOCATION_CODE))
/

ALTER TABLE AT_PHYSICAL_LOCATION ADD (
  CONSTRAINT AT_PHYSICAL_LOCATION_FK_2 
 FOREIGN KEY (COUNTY_CODE) 
 REFERENCES CWMS_COUNTY (COUNTY_CODE))
/

ALTER TABLE AT_PHYSICAL_LOCATION ADD (
  CONSTRAINT AT_PHYSICAL_LOCATION_FK_3 
 FOREIGN KEY (TIME_ZONE_CODE) 
 REFERENCES CWMS_TIME_ZONE (TIME_ZONE_CODE))
/

INSERT INTO at_physical_location
            (location_code, base_location_code, active_flag
            )
     VALUES (0, 0, 'F'
            )
/
COMMIT
/
---------------------------------
-- AT_AGENCY_NAME table.
-- 

CREATE TABLE AT_AGENCY_NAME
(
  AGENCY_CODE     NUMBER,
  AGENCY_ID       VARCHAR2(16 BYTE)             NOT NULL,
  DB_OFFICE_CODE  NUMBER                        NOT NULL,
  AGENCY_NAME     VARCHAR2(80 BYTE)
)
TABLESPACE CWMS_20DATA
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING
/


ALTER TABLE AT_AGENCY_NAME ADD (
  CONSTRAINT AT_AGENCY_NAME_PK
 PRIMARY KEY
 (AGENCY_CODE))
/

ALTER TABLE AT_AGENCY_NAME ADD (
  CONSTRAINT AT_AGENCY_NAME_UK1
 UNIQUE (AGENCY_ID, DB_OFFICE_CODE))
/


ALTER TABLE AT_AGENCY_NAME ADD (
  CONSTRAINT AT_AGENCY_NAME_FK1 
 FOREIGN KEY (DB_OFFICE_CODE) 
 REFERENCES CWMS_OFFICE (OFFICE_CODE))
/

---------------------------------
-- AT_ALIAS_NAME table
-- 

CREATE TABLE AT_ALIAS_NAME
(
  LOCATION_CODE      NUMBER,
  AGENCY_CODE        NUMBER,
  ALIAS_ID           VARCHAR2(16 BYTE)          NOT NULL,
  ALIAS_PUBLIC_NAME  VARCHAR2(32 BYTE),
  ALIAS_LONG_NAME    VARCHAR2(80 BYTE)
)
TABLESPACE CWMS_20DATA
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING
/


CREATE UNIQUE INDEX AT_ALIAS_NAME_PK ON AT_ALIAS_NAME
(LOCATION_CODE, AGENCY_CODE)
LOGGING
TABLESPACE CWMS_20DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


ALTER TABLE AT_ALIAS_NAME ADD (
  CONSTRAINT AT_ALIAS_NAME_PK
 PRIMARY KEY
 (LOCATION_CODE, AGENCY_CODE)
    USING INDEX 
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ))
/


ALTER TABLE AT_ALIAS_NAME ADD (
  CONSTRAINT AT_ALIAS_NAME_FK2 
 FOREIGN KEY (AGENCY_CODE) 
 REFERENCES AT_AGENCY_NAME (AGENCY_CODE))
/

ALTER TABLE AT_ALIAS_NAME ADD (
  CONSTRAINT AT_ALIAS_NAME_FK1 
 FOREIGN KEY (LOCATION_CODE) 
 REFERENCES AT_PHYSICAL_LOCATION (LOCATION_CODE))
/

-------------------------
-- AT_DATA_STREAM_ID table.
-- 

CREATE TABLE AT_DATA_STREAM_ID
(
  DATA_STREAM_CODE  NUMBER,
  DB_OFFICE_CODE    NUMBER                      NOT NULL,
  DATA_STREAM_ID    VARCHAR2(16 BYTE)           NOT NULL,
  DATA_STREAM_DESC  VARCHAR2(128 BYTE),
  ACTIVE_FLAG       VARCHAR2(1 BYTE)
)
TABLESPACE CWMS_20DATA
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING
/


CREATE UNIQUE INDEX AT_DATA_STREAM_ID_PK ON AT_DATA_STREAM_ID
(DATA_STREAM_CODE)
LOGGING
TABLESPACE CWMS_20DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


CREATE UNIQUE INDEX AT_DATA_STREAM_ID_U01 ON AT_DATA_STREAM_ID
(DATA_STREAM_ID, DB_OFFICE_CODE)
LOGGING
TABLESPACE CWMS_20DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


ALTER TABLE AT_DATA_STREAM_ID ADD (
  CONSTRAINT AT_DATA_STREAM_ID_PK
 PRIMARY KEY
 (DATA_STREAM_CODE)
    USING INDEX 
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ))
/

ALTER TABLE AT_DATA_STREAM_ID ADD (
  CONSTRAINT AT_DATA_STREAM_ID_U01
 UNIQUE (DATA_STREAM_ID, DB_OFFICE_CODE)
    USING INDEX 
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ))
/


ALTER TABLE AT_DATA_STREAM_ID ADD (
  CONSTRAINT AT_DATA_STREAM_ID_R01 
 FOREIGN KEY (DB_OFFICE_CODE) 
 REFERENCES CWMS_OFFICE (OFFICE_CODE))
/

---------------------------------
-- AT_DISPLAY_UNITS table
-- 
CREATE TABLE AT_DISPLAY_UNITS
(
  PARAMETER_CODE     NUMBER                     NOT NULL,
  UNIT_SYSTEM        VARCHAR2(2 BYTE)           NOT NULL,
  DISPLAY_UNIT_CODE  NUMBER                     NOT NULL,
  DB_OFFICE_CODE     NUMBER
)
TABLESPACE CWMS_20DATA
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE UNIQUE INDEX AT_DISPLAY_UNITS_PK1 ON AT_DISPLAY_UNITS
(PARAMETER_CODE, UNIT_SYSTEM, DB_OFFICE_CODE)
LOGGING
TABLESPACE CWMS_20DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


ALTER TABLE AT_DISPLAY_UNITS ADD (
  CONSTRAINT AT_DISPLAY_UNITS_PK1
 PRIMARY KEY
 (PARAMETER_CODE, UNIT_SYSTEM, DB_OFFICE_CODE)
    USING INDEX 
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ));


ALTER TABLE AT_DISPLAY_UNITS ADD (
  CONSTRAINT AT_DISPLAY_UNITS_FK02 
 FOREIGN KEY (DISPLAY_UNIT_CODE) 
 REFERENCES CWMS_UNIT (UNIT_CODE));

ALTER TABLE AT_DISPLAY_UNITS ADD (
  CONSTRAINT AT_DISPLAY_UNITS_FK01 
 FOREIGN KEY (PARAMETER_CODE) 
 REFERENCES AT_PARAMETER (PARAMETER_CODE));
 
---------------------------------
-- AT_ALARM_ID table.
-- 

CREATE TABLE AT_ALARM_ID
(
  ALARM_CODE      NUMBER                        NOT NULL,
  TS_NI_HASH      VARCHAR2(80 BYTE)             NOT NULL,
  DB_OFFICE_CODE  NUMBER                        NOT NULL,
  ALARM_ID        VARCHAR2(16 BYTE)             NOT NULL,
  ALARM_ID_DESC   VARCHAR2(128 BYTE)
)
TABLESPACE CWMS_20AT_DATA
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING
/


CREATE UNIQUE INDEX AT_ALARM_ID_PK ON AT_ALARM_ID
(ALARM_CODE)
LOGGING
TABLESPACE CWMS_20DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


CREATE UNIQUE INDEX AT_ALARM_ID_U01 ON AT_ALARM_ID
(ALARM_CODE, TS_NI_HASH)
LOGGING
TABLESPACE CWMS_20DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


CREATE UNIQUE INDEX AT_ALARM_ID_U02 ON AT_ALARM_ID
(TS_NI_HASH, DB_OFFICE_CODE, ALARM_ID)
LOGGING
TABLESPACE CWMS_20DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


ALTER TABLE AT_ALARM_ID ADD (
  CONSTRAINT AT_ALARM_ID_PK
 PRIMARY KEY
 (ALARM_CODE)
    USING INDEX 
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ))
/

ALTER TABLE AT_ALARM_ID ADD (
  CONSTRAINT AT_ALARM_ID_U02
 UNIQUE (TS_NI_HASH, DB_OFFICE_CODE, ALARM_ID)
    USING INDEX 
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ))
/

ALTER TABLE AT_ALARM_ID ADD (
  CONSTRAINT AT_ALARM_ID_U01
 UNIQUE (ALARM_CODE, TS_NI_HASH)
    USING INDEX 
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ))
/

---------------------------------
-- AT_ALARM_CRITERIA table.
-- 
CREATE TABLE AT_ALARM_CRITERIA
(
  ALARM_CODE            NUMBER,
  ALARM_VALUE           NUMBER,
  SEASON_START_DAY      NUMBER,
  ASCENDING_DESCENDING  VARCHAR2(1 BYTE),
  ALARM_DESC            VARCHAR2(128 BYTE),
  ALARM_ACTION          VARCHAR2(16 BYTE),
  TRIP_RESET            VARCHAR2(1 BYTE)
)
TABLESPACE CWMS_20DATA
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING
/


CREATE UNIQUE INDEX AT_ALARM_CRITERIA_PK ON AT_ALARM_CRITERIA
(ALARM_CODE, ALARM_VALUE, SEASON_START_DAY, ASCENDING_DESCENDING)
LOGGING
TABLESPACE CWMS_20DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


ALTER TABLE AT_ALARM_CRITERIA ADD (
  CONSTRAINT AT_ALARM_CRITERIA_PK
 PRIMARY KEY
 (ALARM_CODE, ALARM_VALUE, SEASON_START_DAY, ASCENDING_DESCENDING)
    USING INDEX 
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ))
/


ALTER TABLE AT_ALARM_CRITERIA ADD (
  CONSTRAINT AT_ALARM_CRITERIA_R01 
 FOREIGN KEY (ALARM_CODE) 
 REFERENCES AT_ALARM_ID (ALARM_CODE))
/
---------------------------------
-- AT_SCREENING_ID table.
-- 
CREATE TABLE AT_SCREENING_ID
(
  SCREENING_CODE     NUMBER                     NOT NULL,
  TS_NI_HASH         VARCHAR2(80 BYTE)          NOT NULL,
  DB_OFFICE_CODE     NUMBER                     NOT NULL,
  SCREENING_ID       VARCHAR2(16 BYTE)          NOT NULL,
  SCREENING_ID_DESC  VARCHAR2(128 BYTE)
)
TABLESPACE CWMS_20DATA
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING
/


CREATE UNIQUE INDEX AT_SCREENING_ID_PK ON AT_SCREENING_ID
(SCREENING_CODE)
LOGGING
TABLESPACE CWMS_20DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


CREATE UNIQUE INDEX AT_SCREENING_ID_U01 ON AT_SCREENING_ID
(SCREENING_CODE, TS_NI_HASH)
LOGGING
TABLESPACE CWMS_20DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


CREATE UNIQUE INDEX AT_SCREENING_ID_U02 ON AT_SCREENING_ID
(TS_NI_HASH, DB_OFFICE_CODE, SCREENING_ID)
LOGGING
TABLESPACE CWMS_20DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


ALTER TABLE AT_SCREENING_ID ADD (
  CONSTRAINT AT_SCREENING_ID_PK
 PRIMARY KEY
 (SCREENING_CODE)
    USING INDEX 
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ))
/

ALTER TABLE AT_SCREENING_ID ADD (
  CONSTRAINT AT_SCREENING_ID_U02
 UNIQUE (TS_NI_HASH, DB_OFFICE_CODE, SCREENING_ID)
    USING INDEX 
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ))
/

ALTER TABLE AT_SCREENING_ID ADD (
  CONSTRAINT AT_SCREENING_ID_U01
 UNIQUE (SCREENING_CODE, TS_NI_HASH)
    USING INDEX 
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ))
/
---------------------------------
-- AT_SCREENING_CRITERIA table.
-- 
CREATE TABLE AT_SCREENING_CRITERIA
(
  SCREENING_CODE                  NUMBER,
  SEASON_START_DATE               NUMBER,
  RANGE_REJECT_LO                 NUMBER,
  RANGE_REJECT_HI                 NUMBER,
  RANGE_QUESTION_LO               NUMBER,
  RANGE_QUESTION_HI               NUMBER,
  RATE_CHANGE_REJECT_RISE         NUMBER,
  RATE_CHANGE_REJECT_FALL         NUMBER,
  RATE_CHANGE_QUEST_RISE          NUMBER,
  RATE_CHANGE_QUEST_FALL          NUMBER,
  RATE_CHANGE_DISP_INTERVAL_CODE  NUMBER,
  CONST_REJECT_DURATION_CODE      NUMBER,
  CONST_REJECT_MIN                NUMBER,
  CONST_REJECT_MAX                NUMBER,
  CONST_REJECT_N_MISS             NUMBER,
  CONST_QUEST_DURATION_CODE       NUMBER,
  CONST_QUEST_MIN                 NUMBER,
  CONST_QUEST_MAX                 NUMBER,
  CONST_QUEST_N_MISS              NUMBER,
  ESTIMATE_EXPRESSION             VARCHAR2(32 BYTE),
  DUR_MAG_TEST_FLAG               VARCHAR2(1 BYTE)
)
TABLESPACE CWMS_20DATA
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING
/


CREATE UNIQUE INDEX AT_SCREENING_CRITERIA_PK ON AT_SCREENING_CRITERIA
(SCREENING_CODE, SEASON_START_DATE)
LOGGING
TABLESPACE CWMS_20DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


ALTER TABLE AT_SCREENING_CRITERIA ADD (
  CONSTRAINT AT_SCREENING_CRITERIA_PK
 PRIMARY KEY
 (SCREENING_CODE, SEASON_START_DATE)
    USING INDEX 
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ))
/


ALTER TABLE AT_SCREENING_CRITERIA ADD (
  CONSTRAINT AT_SCREENING_CRITERIA_R01 
 FOREIGN KEY (SCREENING_CODE) 
 REFERENCES AT_SCREENING_ID (SCREENING_CODE))
/

ALTER TABLE AT_SCREENING_CRITERIA ADD (
  CONSTRAINT AT_SCREENING_CRITERIA_FK03 
 FOREIGN KEY (CONST_QUEST_DURATION_CODE) 
 REFERENCES CWMS_DURATION (DURATION_CODE))
/

ALTER TABLE AT_SCREENING_CRITERIA ADD (
  CONSTRAINT AT_SCREENING_CRITERIA_FK04 
 FOREIGN KEY (RATE_CHANGE_DISP_INTERVAL_CODE) 
 REFERENCES CWMS_INTERVAL (INTERVAL_CODE))
/

ALTER TABLE AT_SCREENING_CRITERIA ADD (
  CONSTRAINT AT_SCREENING_CRITERIA_FK02 
 FOREIGN KEY (CONST_REJECT_DURATION_CODE) 
 REFERENCES CWMS_DURATION (DURATION_CODE))
/
---------------------------------
-- AT_SCREENING_DUR_MAG table.
-- 
CREATE TABLE AT_SCREENING_DUR_MAG
(
  SCREENING_CODE     NUMBER,
  SEASON_START_DATE  NUMBER,
  DURATION_CODE      NUMBER,
  REJECT_LO          NUMBER,
  REJECT_HI          NUMBER,
  QUESTION_LO        NUMBER,
  QUESTION_HI        NUMBER
)
TABLESPACE CWMS_20DATA
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING
/


CREATE UNIQUE INDEX AT_SCREENING_DUR_MAG_PK ON AT_SCREENING_DUR_MAG
(SCREENING_CODE, SEASON_START_DATE, DURATION_CODE)
LOGGING
TABLESPACE CWMS_20DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


ALTER TABLE AT_SCREENING_DUR_MAG ADD (
  CONSTRAINT AT_SCREENING_DUR_MAG_PK
 PRIMARY KEY
 (SCREENING_CODE, SEASON_START_DATE, DURATION_CODE)
    USING INDEX 
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ))
/


ALTER TABLE AT_SCREENING_DUR_MAG ADD (
  CONSTRAINT AT_SCREENING_DUR_MAG_FK02 
 FOREIGN KEY (DURATION_CODE) 
 REFERENCES CWMS_DURATION (DURATION_CODE))
/

ALTER TABLE AT_SCREENING_DUR_MAG ADD (
  CONSTRAINT AT_SCREENING_DUR_MAG_FK01 
 FOREIGN KEY (SCREENING_CODE, SEASON_START_DATE) 
 REFERENCES AT_SCREENING_CRITERIA (SCREENING_CODE,SEASON_START_DATE))
/
---------------------------------
-- AT_CWMS_TS_SPEC table.
-- 

CREATE TABLE AT_CWMS_TS_SPEC
(
  TS_CODE              NUMBER                   NOT NULL,
  OFFICE_CODE          NUMBER(10)               NOT NULL,
  LOCATION_CODE        NUMBER                   NOT NULL,
  PARAMETER_CODE       NUMBER                   NOT NULL,
  PARAMETER_TYPE_CODE  NUMBER(10)               NOT NULL,
  INTERVAL_CODE        NUMBER(10)               NOT NULL,
  DURATION_CODE        NUMBER(10)               NOT NULL,
  VERSION              VARCHAR2(32 BYTE)        NOT NULL,
  TS_NI_HASH           VARCHAR2(80 BYTE)        NOT NULL,
  DESCRIPTION          VARCHAR2(80 BYTE),
  INTERVAL_UTC_OFFSET  NUMBER                   NOT NULL,
  INTERVAL_FORWARD     NUMBER,
  INTERVAL_BACKWARD    NUMBER,
  INTERVAL_OFFSET_ID   VARCHAR2(16 BYTE),
  TIME_ZONE_CODE       NUMBER(10),
  VERSION_FLAG         VARCHAR2(1 BYTE),
  MIGRATE_VER_FLAG     VARCHAR2(1 BYTE),
  ACTIVE_FLAG          VARCHAR2(1 BYTE),
  DELETE_DATE          DATE,
  DATA_SOURCE          VARCHAR2(16 BYTE)
)
TABLESPACE CWMS_20AT_DATA
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          5M
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING
/

COMMENT ON TABLE AT_CWMS_TS_SPEC IS 'Defines time series based on CWMS requirements.  This table also serves as time series specification super type.'
/

COMMENT ON COLUMN AT_CWMS_TS_SPEC.DESCRIPTION IS 'Additional information.'
/

COMMENT ON COLUMN AT_CWMS_TS_SPEC.VERSION_FLAG IS 'Default is NULL, indicating versioning is off. If set to "Y" then versioning is on'
/

COMMENT ON COLUMN AT_CWMS_TS_SPEC.MIGRATE_VER_FLAG IS 'Default is NULL, indicating versioned data is not migrated to historic tables.  If set to "Y", versioned data is archived.'
/

COMMENT ON COLUMN AT_CWMS_TS_SPEC.ACTIVE_FLAG IS 'T or F'
/

COMMENT ON COLUMN AT_CWMS_TS_SPEC.DELETE_DATE IS 'Is the date that this ts_id was marked for deletion.'
/

COMMENT ON COLUMN AT_CWMS_TS_SPEC.TS_CODE IS 'Unique record identifier, primarily used for internal database processing. This code is automatically assigned by the system.'
/

COMMENT ON COLUMN AT_CWMS_TS_SPEC.LOCATION_CODE IS 'Primary key of AT_PHYSICAL_LOCATION table.'
/

COMMENT ON COLUMN AT_CWMS_TS_SPEC.PARAMETER_CODE IS 'Primary key of AT_PARAMETER table.  Must already exist in the AT_PARAMETER table.'
/

COMMENT ON COLUMN AT_CWMS_TS_SPEC.PARAMETER_TYPE_CODE IS 'Primary key of CWMS_PARAMETER_TYPE table.  Must already exist in the CWMS_PARAMETER_TYPE table.'
/


CREATE UNIQUE INDEX AT_CWMS_TS_SPEC_UI ON AT_CWMS_TS_SPEC
(LOCATION_CODE, OFFICE_CODE, PARAMETER_TYPE_CODE, PARAMETER_CODE, INTERVAL_CODE, 
DURATION_CODE, UPPER("VERSION"), DELETE_DATE)
LOGGING
TABLESPACE CWMS_20AT_DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          24K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


CREATE UNIQUE INDEX AT_CWMS_TS_SPEC_UI2 ON AT_CWMS_TS_SPEC
(TS_CODE, TS_NI_HASH)
LOGGING
TABLESPACE CWMS_20DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


CREATE UNIQUE INDEX AT_CWMS_TS_SPEC_PK ON AT_CWMS_TS_SPEC
(TS_CODE)
LOGGING
TABLESPACE CWMS_20DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


ALTER TABLE AT_CWMS_TS_SPEC ADD (
  CONSTRAINT AT_CWMS_TS_SPEC_CK_3
 CHECK (TRIM(VERSION)=VERSION))
/

ALTER TABLE AT_CWMS_TS_SPEC ADD (
  CONSTRAINT AT_CWMS_TS_SPEC_CK_4
 CHECK (NVL(VERSION_FLAG,'T')='T'))
/

ALTER TABLE AT_CWMS_TS_SPEC ADD (
  CONSTRAINT AT_CWMS_TS_SPEC_CK_5
 CHECK (ACTIVE_FLAG ='T' or ACTIVE_FLAG = 'F'))
/

ALTER TABLE AT_CWMS_TS_SPEC ADD (
  CONSTRAINT AT_CWMS_TS_SPEC_PK
 PRIMARY KEY
 (TS_CODE)
    USING INDEX 
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ))
/

ALTER TABLE AT_CWMS_TS_SPEC ADD (
  CONSTRAINT AT_CWMS_TS_SPEC_U01
 UNIQUE (TS_CODE, TS_NI_HASH))
/


ALTER TABLE AT_CWMS_TS_SPEC ADD (
  CONSTRAINT AT_CWMS_TS_SPEC_FK_1 
 FOREIGN KEY (PARAMETER_TYPE_CODE) 
 REFERENCES CWMS_PARAMETER_TYPE (PARAMETER_TYPE_CODE))
/

ALTER TABLE AT_CWMS_TS_SPEC ADD (
  CONSTRAINT AT_CWMS_TS_SPEC_FK_2 
 FOREIGN KEY (PARAMETER_CODE) 
 REFERENCES AT_PARAMETER (PARAMETER_CODE))
/

ALTER TABLE AT_CWMS_TS_SPEC ADD (
  CONSTRAINT AT_CWMS_TS_SPEC_FK_3 
 FOREIGN KEY (INTERVAL_CODE) 
 REFERENCES CWMS_INTERVAL (INTERVAL_CODE))
/

ALTER TABLE AT_CWMS_TS_SPEC ADD (
  CONSTRAINT AT_CWMS_TS_SPEC_FK_4 
 FOREIGN KEY (DURATION_CODE) 
 REFERENCES CWMS_DURATION (DURATION_CODE))
/

ALTER TABLE AT_CWMS_TS_SPEC ADD (
  CONSTRAINT AT_CWMS_TS_SPEC_FK_5 
 FOREIGN KEY (LOCATION_CODE) 
 REFERENCES AT_PHYSICAL_LOCATION (LOCATION_CODE))
/

ALTER TABLE AT_CWMS_TS_SPEC ADD (
  CONSTRAINT AT_CWMS_TS_SPEC_FK_6 
 FOREIGN KEY (TIME_ZONE_CODE) 
 REFERENCES CWMS_TIME_ZONE (TIME_ZONE_CODE))
/

ALTER TABLE AT_CWMS_TS_SPEC ADD (
  CONSTRAINT AT_CWMS_TS_SPEC_FK_7 
 FOREIGN KEY (OFFICE_CODE) 
 REFERENCES CWMS_OFFICE (OFFICE_CODE))
/

---------------------------------
-- AT_SHEF_DECODE table.
-- 

CREATE TABLE AT_SHEF_DECODE
(
  TS_CODE            NUMBER,
  DATA_STREAM_CODE   NUMBER,
  AGENCY_CODE        NUMBER                      NOT NULL,
  SHEF_PE_CODE       VARCHAR2(2 BYTE)            NOT NULL,
  SHEF_TSE_CODE      VARCHAR2(3 BYTE)            NOT NULL,
  SHEF_DURATION_CODE VARCHAR2(4 BYTE)            NOT NULL,
  SHEF_UNIT_CODE     NUMBER                      NOT NULL,
  TZ                 VARCHAR2(2 BYTE),
  DL_TIME            VARCHAR2(1 BYTE),
  USE_OTF            VARCHAR2(1 BYTE),
  OTF_TEXT_AREA      VARCHAR2(1024 BYTE)
)
TABLESPACE CWMS_20DATA
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING
/


CREATE UNIQUE INDEX AT_SHEF_DECODE_PK ON AT_SHEF_DECODE
(TS_CODE, DATA_STREAM_CODE)
LOGGING
TABLESPACE CWMS_20DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


ALTER TABLE AT_SHEF_DECODE ADD (
  CONSTRAINT AT_SHEF_DECODE_PK
 PRIMARY KEY
 (TS_CODE, DATA_STREAM_CODE)
    USING INDEX 
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ))
/
ALTER TABLE AT_SHEF_DECODE ADD (
  CONSTRAINT AT_SHEF_DECODE_R04 
 FOREIGN KEY (SHEF_DURATION_CODE) 
 REFERENCES CWMS_SHEF_DURATION (SHEF_DURATION_CODE))
/

ALTER TABLE AT_SHEF_DECODE ADD (
  CONSTRAINT AT_SHEF_DECODE_R03 
 FOREIGN KEY (AGENCY_CODE) 
 REFERENCES AT_AGENCY_NAME (AGENCY_CODE))
/

ALTER TABLE AT_SHEF_DECODE ADD (
  CONSTRAINT AT_SHEF_DECODE_R02 
 FOREIGN KEY (DATA_STREAM_CODE) 
 REFERENCES AT_DATA_STREAM_ID (DATA_STREAM_CODE))
/

ALTER TABLE AT_SHEF_DECODE ADD (
  CONSTRAINT AT_SHEF_DECODE_R01 
 FOREIGN KEY (TS_CODE) 
 REFERENCES AT_CWMS_TS_SPEC (TS_CODE))
/

---------------------------------
-- AT_SCREENING table.
-- 
CREATE TABLE AT_SCREENING
(
  TS_CODE            NUMBER,
  TS_NI_HASH         VARCHAR2(80 BYTE),
  SCREENING_CODE     NUMBER                     NOT NULL,
  ACTIVE_FLAG        VARCHAR2(1 BYTE),
  RESULTANT_TS_CODE  NUMBER
)
TABLESPACE CWMS_20AT_DATA
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING
/

COMMENT ON COLUMN AT_SCREENING.ACTIVE_FLAG IS 'T of F'
/


CREATE UNIQUE INDEX AT_SCREENING_PK ON AT_SCREENING
(TS_CODE)
LOGGING
TABLESPACE CWMS_20DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


ALTER TABLE AT_SCREENING ADD (
  CONSTRAINT AT_SCREENING_PK
 PRIMARY KEY
 (TS_CODE)
    USING INDEX 
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ))
/


ALTER TABLE AT_SCREENING ADD (
  CONSTRAINT AT_SCREENING_FK02 
 FOREIGN KEY (RESULTANT_TS_CODE) 
 REFERENCES AT_CWMS_TS_SPEC (TS_CODE))
/

ALTER TABLE AT_SCREENING ADD (
  CONSTRAINT AT_SCREENING_FK01 
 FOREIGN KEY (TS_CODE, TS_NI_HASH) 
 REFERENCES AT_CWMS_TS_SPEC (TS_CODE,TS_NI_HASH))
/

ALTER TABLE AT_SCREENING ADD (
  CONSTRAINT AT_SCREENING_FK03 
 FOREIGN KEY (SCREENING_CODE, TS_NI_HASH) 
 REFERENCES AT_SCREENING_ID (SCREENING_CODE,TS_NI_HASH))
/
---------------------------------
-- AT_ALARM table.
-- 
CREATE TABLE AT_ALARM
(
  TS_CODE      NUMBER,
  TS_NI_HASH   VARCHAR2(80 BYTE)                NOT NULL,
  ALARM_CODE   NUMBER                           NOT NULL,
  ACTIVE_FLAG  VARCHAR2(1 BYTE)
)
TABLESPACE CWMS_20DATA
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING
/

COMMENT ON COLUMN AT_ALARM.ACTIVE_FLAG IS 'T or F'
/


CREATE UNIQUE INDEX AT_ALARM_PK ON AT_ALARM
(TS_CODE)
LOGGING
TABLESPACE CWMS_20DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


ALTER TABLE AT_ALARM ADD (
  CONSTRAINT AT_ALARM_PK
 PRIMARY KEY
 (TS_CODE)
    USING INDEX 
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ))
/


ALTER TABLE AT_ALARM ADD (
  CONSTRAINT AT_ALARM_R02 
 FOREIGN KEY (ALARM_CODE, TS_NI_HASH) 
 REFERENCES AT_ALARM_ID (ALARM_CODE,TS_NI_HASH))
/

ALTER TABLE AT_ALARM ADD (
  CONSTRAINT AT_ALARM_R01 
 FOREIGN KEY (TS_CODE, TS_NI_HASH) 
 REFERENCES AT_CWMS_TS_SPEC (TS_CODE,TS_NI_HASH))
/
---------------------------------
-- AT_COMP_VT table.
-- 

CREATE TABLE AT_COMP_VT
(
  COMP_VT_CODE           NUMBER,
  COMP_VT_ID             VARCHAR2(16 BYTE),
  DB_OFFICE_CODE         NUMBER,
  FILENAME_DATCHK1       VARCHAR2(32 BYTE),
  FILENAME_DATCHK2       VARCHAR2(32 BYTE),
  FILENAME_TRN_IN        VARCHAR2(32 BYTE),
  DEFAULT_TIME_WINDOW    VARCHAR2(32 BYTE),
  CONTEXT_START_DATE     VARCHAR2(32 BYTE),
  EXCHANGE_SET_EXTRACT   VARCHAR2(32 BYTE),
  EXCHANGE_SET_POST_RAW  VARCHAR2(32 BYTE),
  EXCHANGE_SET_POST_REV  VARCHAR2(32 BYTE)
)
TABLESPACE CWMS_20DATA
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING
/


CREATE UNIQUE INDEX AT_COMP_VT_PK ON AT_COMP_VT
(COMP_VT_CODE)
LOGGING
TABLESPACE CWMS_20DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


CREATE UNIQUE INDEX AT_COMP_VT_U01 ON AT_COMP_VT
(COMP_VT_ID, DB_OFFICE_CODE)
LOGGING
TABLESPACE CWMS_20DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


ALTER TABLE AT_COMP_VT ADD (
  CONSTRAINT AT_COMP_VT_PK
 PRIMARY KEY
 (COMP_VT_CODE)
    USING INDEX 
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ))
/

ALTER TABLE AT_COMP_VT ADD (
  CONSTRAINT AT_COMP_VT_U01
 UNIQUE (COMP_VT_ID, DB_OFFICE_CODE)
    USING INDEX 
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ))
/


ALTER TABLE AT_COMP_VT ADD (
  CONSTRAINT AT_COMP_VT_R01 
 FOREIGN KEY (DB_OFFICE_CODE) 
 REFERENCES CWMS_OFFICE (OFFICE_CODE))
/

---------------------------------
-- AT_TRANSFORM_CRITERIA table.
-- 

CREATE TABLE AT_TRANSFORM_CRITERIA
(
  TS_CODE                       NUMBER,
  DSSMATH_MACRO_CALL            VARCHAR2(128 BYTE),
  DSSMATH_POST_RAW              VARCHAR2(1 BYTE),
  COMP_VT_CODE                  NUMBER,
  CALL_SEQ_TABLE_LOOKUP         NUMBER,
  CALL_SEQ_SCALING              NUMBER,
  SCALING_FACTOR                NUMBER,
  SCALING_OFFSET                NUMBER,
  CALL_SEQ_MASS_CURVE_TO_INC    NUMBER,
  CALL_SEQ_INC_TO_MASS_CURVE    NUMBER,
  CALL_SEQ_INTERVAL_CONVERSION  NUMBER,
  RESULTANT_TS_CODE             NUMBER
)
TABLESPACE CWMS_20DATA
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING
/


CREATE UNIQUE INDEX AT_TRANSFORM_CRITERIA_PK ON AT_TRANSFORM_CRITERIA
(TS_CODE)
LOGGING
TABLESPACE CWMS_20DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


CREATE UNIQUE INDEX AT_TRANSFORM_CRITERIA_U02 ON AT_TRANSFORM_CRITERIA
(RESULTANT_TS_CODE)
LOGGING
TABLESPACE CWMS_20DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


ALTER TABLE AT_TRANSFORM_CRITERIA ADD (
  CONSTRAINT AT_TRANSFORM_CRITERIA_PK
 PRIMARY KEY
 (TS_CODE)
    USING INDEX 
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ))
/

ALTER TABLE AT_TRANSFORM_CRITERIA ADD (
  CONSTRAINT AT_TRANSFORM_CRITERIA_U02
 UNIQUE (RESULTANT_TS_CODE)
    USING INDEX 
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ))
/


ALTER TABLE AT_TRANSFORM_CRITERIA ADD (
  CONSTRAINT AT_TRANSFORM_CRITERIA_R02 
 FOREIGN KEY (RESULTANT_TS_CODE) 
 REFERENCES AT_CWMS_TS_SPEC (TS_CODE))
/

ALTER TABLE AT_TRANSFORM_CRITERIA ADD (
  CONSTRAINT AT_TRANSFORM_CRITERIA_R01 
 FOREIGN KEY (TS_CODE) 
 REFERENCES AT_CWMS_TS_SPEC (TS_CODE))
/

ALTER TABLE AT_TRANSFORM_CRITERIA ADD (
  CONSTRAINT AT_TRANSFORM_CRITERIA_R03 
 FOREIGN KEY (COMP_VT_CODE) 
 REFERENCES AT_COMP_VT (COMP_VT_CODE))
/

-------------------------
-- MV_CWMS_TS_ID view.
-- 
CREATE MATERIALIZED VIEW LOG ON at_base_location     WITH ROWID;
CREATE MATERIALIZED VIEW LOG ON at_physical_location WITH ROWID;
CREATE MATERIALIZED VIEW LOG ON at_cwms_ts_spec      WITH ROWID;
CREATE MATERIALIZED VIEW LOG ON cwms_office          WITH ROWID;
CREATE MATERIALIZED VIEW LOG ON cwms_parameter_type  WITH ROWID;
CREATE MATERIALIZED VIEW LOG ON cwms_base_parameter  WITH ROWID;
CREATE MATERIALIZED VIEW LOG ON at_parameter         WITH ROWID;
CREATE MATERIALIZED VIEW LOG ON cwms_interval        WITH ROWID;
CREATE MATERIALIZED VIEW LOG ON cwms_duration        WITH ROWID;
CREATE MATERIALIZED VIEW LOG ON cwms_unit            WITH ROWID;
CREATE MATERIALIZED VIEW LOG ON cwms_abstract_parameter            WITH ROWID;

/* Formatted on 2006/12/13 10:24 (Formatter Plus v4.8.8) */
CREATE MATERIALIZED VIEW mv_cwms_ts_id
TABLESPACE cwms_20at_data
NOCACHE
LOGGING
NOCOMPRESS
NOPARALLEL
BUILD IMMEDIATE
REFRESH FAST ON COMMIT
WITH PRIMARY KEY
AS
SELECT s.ts_code,
       s.location_code,
       abl.base_location_code,
       o.office_id db_office_id,
       oo.office_id,
       abl.base_location_id             || SUBSTR ('-', 1, LENGTH (l.sub_location_id))
       || l.sub_location_id       || '.'
       || base_parameter_id       || SUBSTR ('-', 1, LENGTH (ap.sub_parameter_id))
       || ap.sub_parameter_id  || '.'
       || parameter_type_id  || '.'
       || interval_id        || '.'
       || duration_id        || '.'
       || VERSION            cwms_ts_id,
       u.unit_id,
       cap.abstract_param_id,
       s.active_flag,
       abl.base_location_id,
       l.sub_location_id,
       abl.base_location_id || SUBSTR ('-', 1, LENGTH (l.sub_location_id)) || l.sub_location_id location_id,
       base_parameter_id,
       ap.sub_parameter_id,
       base_parameter_id || SUBSTR ('-', 1, LENGTH (ap.sub_parameter_id)) || ap.sub_parameter_id parameter_id,
       parameter_type_id,
       interval_id,
       duration_id,
       VERSION version_id,
       i.INTERVAL,
       s.interval_utc_offset,
       s.version_flag,
      abl.ROWID "base_loc_rid",
       o.ROWID "cwms_office_rid",
      oo.ROWID "cwms_office_rid2",
       l.ROWID "phys_loc_rid",
       s.ROWID "ts_spec_rid",
       p.ROWID "base_param_rid",
      ap.ROWID "param_rid",
       t.ROWID "param_type_rid",
       i.ROWID "interval_rid",
       d.ROWID "duration_rid",
       u.ROWID "unit_rid",
       cap.ROWID "ab_param_rid"
  FROM cwms_office o,
       cwms_office oo,
      at_base_location     abl,
       at_physical_location l,
       at_cwms_ts_spec      s,
       at_parameter   ap,
       cwms_base_parameter  p,
       cwms_parameter_type  t,
       cwms_interval        i,
       cwms_duration        d,
       cwms_unit            u,
       cwms_abstract_parameter cap
 WHERE abl.db_office_code = o.office_code
   AND s.office_code = oo.office_code
   AND l.location_code  = s.location_code
   AND ap.base_parameter_code = p.base_parameter_code
   AND s.parameter_code = ap.parameter_code
   AND s.parameter_type_code = t.parameter_type_code
   AND s.interval_code  = i.interval_code
   AND s.duration_code  = d.duration_code
   AND u.unit_code      = p.unit_code
   AND u.abstract_param_code = cap.abstract_param_code
   AND l.base_location_code = abl.base_location_code
   AND s.delete_date IS NULL
/

CREATE UNIQUE INDEX mv_cwms_ts_id_pk ON mv_cwms_ts_id
(office_id, cwms_ts_id)
LOGGING
TABLESPACE cwms_20at_data
NOPARALLEL
/
CREATE UNIQUE INDEX mv_cwms_ts_id_uk1 ON mv_cwms_ts_id
(UPPER("OFFICE_ID"), UPPER("CWMS_TS_ID"))
LOGGING
TABLESPACE cwms_20at_data
NOPARALLEL
/

-------------------------
-- AV_SCREEN_ALARM_ID view.
-- 
CREATE OR REPLACE VIEW av_screen_alarm_id (base_location_code,
                                           location_code,
                                           db_office_id,
                                           base_location_id,
                                           sub_location_id,
                                           location_id,
                                           base_parameter_id,
                                           sub_parameter_id,
                                           parameter_id,
                                           parameter_type_id,
                                           duration_id,
                                           public_name,
                                           row_hash,
                                           screening_code,
                                           screening_id,
                                           screening_id_desc,
                                           alarm_code,
                                           alarm_id,
                                           alarm_id_desc
                                          )
AS
   SELECT DISTINCT mcti.base_location_code, mcti.location_code,
                   mcti.db_office_id, mcti.base_location_id,
                   mcti.sub_location_id, mcti.location_id,
                   mcti.base_parameter_id, mcti.sub_parameter_id,
                   mcti.parameter_id, mcti.parameter_type_id,
                   CASE
                      WHEN mcti.duration_id = '0'
                         THEN '---'
                      ELSE mcti.duration_id
                   END duration_id,
                   apl.public_name,
                   ORA_HASH (mcti.location_code || acts.ts_ni_hash) row_hash,
                   asi.screening_code, asi.screening_id,
                   asi.screening_id_desc, aali.alarm_code, aali.alarm_id,
                   aali.alarm_id_desc
              FROM mv_cwms_ts_id mcti,
                   at_cwms_ts_spec acts,
                   at_screening ascr,
                   at_screening_id asi,
                   at_alarm aal,
                   at_alarm_id aali,
                   at_physical_location apl
             WHERE acts.ts_code = mcti.ts_code
               AND mcti.ts_code = ascr.ts_code(+)
               AND mcti.ts_code = aal.ts_code(+)
               AND acts.location_code = apl.location_code
               AND ascr.screening_code = asi.screening_code(+)
               AND aal.alarm_code = aali.alarm_code(+)
/

/* Formatted on 2006/12/18 13:15 (Formatter Plus v4.8.8) */
CREATE OR REPLACE VIEW av_screening_criteria (base_location_code,
                                              location_code,
                                              db_office_id,
                                              base_location_id,
                                              sub_location_id,
                                              location_id,
                                              base_parameter_id,
                                              sub_parameter_id,
                                              parameter_id,
                                              parameter_type_id,
                                              duration_id,
                                              unit_system,
                                              unit_id,
                                              screening_code,
                                              screening_id,
                                              screening_id_desc,
                                              season_start_date,
                                              season_start_day,
                                              season_start_month,
                                              range_reject_lo,
                                              range_reject_hi,
                                              range_question_lo,
                                              range_question_hi,
                                              rate_change_reject_rise,
                                              rate_change_reject_fall,
                                              rate_change_quest_rise,
                                              rate_change_quest_fall,
                                              rate_change_disp_interval,
                                              const_reject_duration,
                                              const_reject_min,
                                              const_reject_max,
                                              const_reject_n_miss,
                                              const_quest_duration,
                                              const_quest_min,
                                              const_quest_max,
                                              const_quest_n_miss,
                                              estimate_expression,
                                              duration_mag_test_flag
                                             )
AS
   SELECT mcti.base_location_code, mcti.location_code, mcti.db_office_id,
          mcti.base_location_id, mcti.sub_location_id, mcti.location_id,
          mcti.base_parameter_id, mcti.sub_parameter_id, mcti.parameter_id,
          mcti.parameter_type_id,
          CASE
             WHEN mcti.duration_id = '0'
                THEN '---'
             ELSE mcti.duration_id
          END duration_id,
          adu.unit_system, cuc.to_unit_id unit_id, avsi.screening_code,
          avsi.screening_id, avsi.screening_id_desc, season_start_date,
          MOD (season_start_date, 30) season_start_day,
              (season_start_date - MOD (season_start_date, 30)
              )
            / 30
          + 1 season_start_month,
          avsc.range_reject_lo * cuc.factor + cuc.offset range_reject_lo,
          avsc.range_reject_hi * cuc.factor + cuc.offset range_reject_hi,
          avsc.range_question_lo * cuc.factor + cuc.offset range_question_lo,
          avsc.range_question_hi * cuc.factor + cuc.offset range_question_hi,
            avsc.rate_change_reject_rise * cuc.factor
          + cuc.offset rate_change_reject_rise,
            avsc.rate_change_reject_fall * cuc.factor
          + cuc.offset rate_change_reject_fall,
            avsc.rate_change_quest_rise * cuc.factor
          + cuc.offset rate_change_quest_rise,
            avsc.rate_change_quest_fall * cuc.factor
          + cuc.offset rate_change_quest_fall,
          CASE
             WHEN avsc.rate_change_disp_interval_code IS NULL
                THEN 'Unknown'
             ELSE (SELECT interval_id
                     FROM cwms_interval
                    WHERE interval_code =
                             avsc.rate_change_disp_interval_code)
          END rate_change_disp_interval,
          CASE
             WHEN avsc.const_reject_duration_code IS NULL
                THEN 'Unknown'
             ELSE (SELECT duration_id
                     FROM cwms_duration
                    WHERE duration_code =
                             avsc.const_reject_duration_code)
          END const_reject_duration,
          avsc.const_reject_min * cuc.factor + cuc.offset const_reject_min,
          avsc.const_reject_max * cuc.factor + cuc.offset const_reject_max,
          avsc.const_reject_n_miss,
          CASE
             WHEN avsc.const_quest_duration_code IS NULL
                THEN 'Unknown'
             ELSE (SELECT duration_id
                     FROM cwms_duration
                    WHERE duration_code =
                             avsc.const_quest_duration_code)
          END const_quest_duration,
          avsc.const_quest_min * cuc.factor + cuc.offset const_quest_min,
          avsc.const_quest_max * cuc.factor + cuc.offset const_quest_max,
          avsc.const_quest_n_miss, avsc.estimate_expression,
          avsc.dur_mag_test_flag
     FROM mv_cwms_ts_id mcti,
          at_cwms_ts_spec acts,
          at_screening av,
          at_screening_id avsi,
          at_display_units adu,
          cwms_unit_conversion cuc,
          at_screening_criteria avsc
    WHERE av.ts_code = mcti.ts_code
      AND mcti.ts_code = acts.ts_code
      AND av.screening_code = avsi.screening_code
      AND acts.parameter_code = adu.parameter_code
      AND adu.display_unit_code = cuc.to_unit_code
      AND mcti.unit_id = cuc.from_unit_id
      AND avsi.screening_code = avsc.screening_code
/

-------------------------
-- AV_ALIASES view.
-- 
CREATE OR REPLACE VIEW av_aliases (db_office_id,
                                   location_id,
                                   agency_id,
                                   alias_id,
                                   agency_name,
                                   alias_public_name,
                                   alias_long_name
                                  )
AS
   SELECT co.office_id db_office_id,
             abl.base_location_id
          || SUBSTR ('-', 1, LENGTH (apl.sub_location_id))
          || apl.sub_location_id location_id,
          aagn.agency_id, aaln.alias_id, aagn.agency_name,
          aaln.alias_public_name, aaln.alias_long_name
     FROM at_agency_name aagn,
          at_alias_name aaln,
          at_base_location abl,
          at_physical_location apl,
          cwms_office co
    WHERE aaln.agency_code = aagn.agency_code
      AND aaln.location_code = apl.location_code
      AND apl.base_location_code = abl.base_location_code
      AND abl.db_office_code = co.office_code
/
-----------------------------
-- AT_UNIT_ALIAS TABLE.
--
CREATE TABLE AT_UNIT_ALIAS
(
  ALIAS_ID        VARCHAR2(32 BYTE)             NOT NULL,
  DB_OFFICE_CODE  NUMBER	  					NOT NULL,
  UNIT_CODE       NUMBER(10)                    NOT NULL
)
TABLESPACE CWMS_20AT_DATA
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          200K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;
-----------------------------
-- AT_UNIT_ALIAS TABLE comments
--
COMMENT ON TABLE AT_UNIT_ALIAS IS 'Contains unitAlias names for all units';
COMMENT ON COLUMN AT_UNIT_ALIAS.ALIAS_ID IS 'Alias name and primary key';
COMMENT ON COLUMN AT_UNIT_ALIAS.UNIT_CODE IS 'Foreign key referencing CWMS_UNIT table by its primary key';

-----------------------------
-- AT_UNIT_ALIAS TABLE indicies
--
CREATE UNIQUE INDEX AT_UNIT_ALIAS_PK ON AT_UNIT_ALIAS
(ALIAS_ID, DB_OFFICE_CODE)
LOGGING
TABLESPACE CWMS_20DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;
-----------------------------
-- AT_UNIT_ALIAS TABLE constraints
--
ALTER TABLE AT_UNIT_ALIAS ADD CONSTRAINT AT_UNIT_ALIAS_R02 FOREIGN KEY (DB_OFFICE_CODE) REFERENCES CWMS_OFFICE (OFFICE_CODE);
ALTER TABLE AT_UNIT_ALIAS ADD CONSTRAINT FK_AT_UNIT_ALIAS  FOREIGN KEY (UNIT_CODE) REFERENCES CWMS_UNIT (UNIT_CODE);
ALTER TABLE AT_UNIT_ALIAS ADD CONSTRAINT AT_UNIT_ALIAS_PK  PRIMARY KEY (ALIAS_ID, DB_OFFICE_CODE)
    USING INDEX 
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               );

-----------------------------
-- AT_USER_PREFERENCES TABLE.
--
CREATE TABLE AT_USER_PREFERENCES
(
  DB_OFFICE_CODE           NUMBER,
  USERNAME                 VARCHAR2(31 BYTE),
  DISPLAY_FORMAT_LAT_LONG  VARCHAR2(3 BYTE),
  DISPLAY_UNIT_SYSTEM      VARCHAR2(2 BYTE)
)
TABLESPACE CWMS_20DATA
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING
/


CREATE UNIQUE INDEX AT_USER_PREFERENCES_PK ON AT_USER_PREFERENCES
(DB_OFFICE_CODE, USERNAME)
LOGGING
TABLESPACE CWMS_20DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


ALTER TABLE AT_USER_PREFERENCES ADD (
  CONSTRAINT AT_USER_PREFERENCES_PK
 PRIMARY KEY
 (DB_OFFICE_CODE, USERNAME)
    USING INDEX 
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ))
/

-----------------------------
-- AT_OFFICE_SETTINGS TABLE.
--
CREATE TABLE AT_OFFICE_SETTINGS
(
  DB_OFFICE_CODE           NUMBER,
  SCREENING_USE_OTF        VARCHAR2(1 BYTE),
  SCREENING_USE_DATCHK     VARCHAR2(1 BYTE),
  SCREENING_USE_CWMS       VARCHAR2(1 BYTE),
  MAX_NORTHERN_LAT         NUMBER,
  MAX_SOUTHERN_LAT         NUMBER,
  MAX_WESTERN_LONG         NUMBER,
  MAX_EASTERN_LONG         NUMBER,
  DISPLAY_LAT_LONG_FORMAT  VARCHAR2(3 BYTE),
  DISPLAY_UNIT_SYSTEM      VARCHAR2(2 BYTE)
)
TABLESPACE CWMS_20DATA
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING
/


CREATE UNIQUE INDEX AT_OFFICE_SETTINGS_PK ON AT_OFFICE_SETTINGS
(DB_OFFICE_CODE)
LOGGING
TABLESPACE CWMS_20DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL
/


ALTER TABLE AT_OFFICE_SETTINGS ADD (
  CONSTRAINT AT_OFFICE_SETTINGS_PK
 PRIMARY KEY
 (DB_OFFICE_CODE)
    USING INDEX 
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ))
/






--
-- INSERT AT_AGENCY_NAME --
--
INSERT INTO AT_AGENCY_NAME (AGENCY_CODE, AGENCY_ID, DB_OFFICE_CODE, AGENCY_NAME)
	VALUES (1,'SHEF', (SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), 'Standard Hydrometeorologic Exchange Format');
INSERT INTO AT_AGENCY_NAME (AGENCY_CODE, AGENCY_ID, DB_OFFICE_CODE, AGENCY_NAME)
	VALUES (2,'GOES', (SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'),'Geostationary Operational Environmental Satellite');
INSERT INTO AT_AGENCY_NAME (AGENCY_CODE, AGENCY_ID, DB_OFFICE_CODE, AGENCY_NAME)
	VALUES (3,'CBT', (SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'),'Columbia Basin Trust');
INSERT INTO AT_AGENCY_NAME (AGENCY_CODE, AGENCY_ID, DB_OFFICE_CODE, AGENCY_NAME)
	VALUES (4,'NWS_HB5', (SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'),'National Weather Service HandBook 5');
INSERT INTO AT_AGENCY_NAME (AGENCY_CODE, AGENCY_ID, DB_OFFICE_CODE, AGENCY_NAME)
	VALUES (5,'USGS', (SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'),'U.S. Geological Survey');
INSERT INTO AT_AGENCY_NAME (AGENCY_CODE, AGENCY_ID, DB_OFFICE_CODE, AGENCY_NAME)
	VALUES (6,'SnoTel', (SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'),'NRCS SNOwpack TELemetry');
INSERT INTO AT_AGENCY_NAME (AGENCY_CODE, AGENCY_ID, DB_OFFICE_CODE, AGENCY_NAME)
	VALUES (7,'USBR', (SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'),'U.S. Deptartment of the Interior, Bureau of Reclamation');
INSERT INTO AT_AGENCY_NAME (AGENCY_CODE, AGENCY_ID, DB_OFFICE_CODE, AGENCY_NAME)
	VALUES (8,'NRCS', (SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'),'Natural Resources Conservation Service ');

--------------------
-- load table data --
---------------------
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'PERCENT',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'),
	(	SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='%'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='None'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'percent',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='%'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='None'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'1000 sq m',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='1000 m2'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Area'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'1000 sq meters',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='1000 m2'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Area'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'1000 cu m',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='1000 m3'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'Celcius',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='C'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Temperature'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'Centigrade',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='C'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Temperature'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'DEG C',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='C'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Temperature'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'deg C',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='C'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Temperature'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'DEG-C',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='C'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Temperature'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'Deg-C',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='C'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Temperature'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'DegC',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='C'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Temperature'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'degC',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='C'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Temperature'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'DEG F',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='F'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Temperature'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'deg F',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='F'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Temperature'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'DEG-F',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='F'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Temperature'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'Deg-F',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='F'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Temperature'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'DegF',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='F'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Temperature'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'degF',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='F'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Temperature'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'Fahrenheit',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='F'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Temperature'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'ACFT',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='ac-ft'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'AC-FT',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='ac-ft'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'acft',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='ac-ft'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'acre-feet',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='ac-ft'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'acre-ft',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='ac-ft'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'acres',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='acre'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Area'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'CFS',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='cfs'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume Rate'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'cu-ft/sec',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='cfs'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume Rate'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'cuft/sec',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='cfs'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume Rate'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'cusecs',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='cfs'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume Rate'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'ft3/sec',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='cfs'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume Rate'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'centimeter',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='cm'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Length'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'centimeters',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='cm'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Length'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'CMS',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='cms'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume Rate'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'cu-meters/sec',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='cms'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume Rate'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'M3/S',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='cms'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume Rate'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'm3/s',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='cms'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume Rate'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'm3/sec',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='cms'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume Rate'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'FEET',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='ft'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Length'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'FT',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='ft'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Length'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'feet',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='ft'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Length'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'foot',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='ft'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Length'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'fps',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='ft/s'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Linear Speed'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'ft/sec',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='ft/s'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Linear Speed'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'sq ft',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='ft2'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Area'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'square feet',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='ft2'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Area'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'gm/l',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='g/l'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Mass Concentration'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'grams per liter',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='g/l'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Mass Concentration'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'grams/liter',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='g/l'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Mass Concentration'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'GAL',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='gal'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'gallon',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='gal'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'gallons',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='gal'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'Gal/min',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='gpm'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume Rate'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'gallons per minute',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='gpm'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume Rate'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'GPM',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='gpm'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume Rate'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'hectare',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='ha'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Area'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'hectares',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='ha'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Area'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'hour',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='hr'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Elapsed Time'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'hours',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='hr'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Elapsed Time'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'inch',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='in'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Length'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'IN',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='in'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Length'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'INCHES',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='in'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Length'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'inches',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='in'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Length'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'jtu',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='JTU'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Turbidity'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'kN/m2',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='kPa'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Pressure'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'1000 ac-ft',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='kaf'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'1000 cfs',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='kcfs'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume Rate'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'1000 cu-ft/sec',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='kcfs'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume Rate'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'1000 ft3/sec',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='kcfs'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume Rate'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'KCFS',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='kcfs'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume Rate'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'1000 gallon',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='kgal'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'1000 gallons',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='kgal'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'KGAL',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='kgal'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'TGAL',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='kgal'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'tgal',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='kgal'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'kilometer',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='km'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Length'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'kilometers',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='km'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Length'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'sq km',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='km2'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Area'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'sq.km',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='km2'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Area'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'sqkm',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='km2'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Area'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'cu km',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='km3'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'lbs',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='lb'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Force'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'meter',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='m'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Length'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'meters',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='m'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Length'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'metre',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='m'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Length'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'metres',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='m'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Length'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'sq m',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='m2'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Area'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'sq meter',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='m2'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Area'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'sq meters',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='m2'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Area'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'square meters',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='m2'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Area'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'cu m',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='m3'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'cu meter',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='m3'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'cu meters',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='m3'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'cubic meters',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='m3'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'mbar',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='mb'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Pressure'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'mbars',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='mb'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Pressure'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'millibar',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='mb'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Pressure'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'millibars',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='mb'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Pressure'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'millgrams/liter',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='mg/l'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Mass Concentration'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'milligrams per liter',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='mg/l'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Mass Concentration'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'MGAL',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='mgal'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'million gallon',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='mgal'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'millon gallons',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='mgal'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'MGD',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='mgd'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume Rate'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'million gallons/day',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='mgd'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume Rate'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'mile',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='mi'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Length'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'miles',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='mi'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Length'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'mi2',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='mile2'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Area'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'sq mi',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='mile2'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Area'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'sq mile',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='mile2'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Area'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'sq miles',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='mile2'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Area'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'square miles',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='mile2'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Area'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'cu mile',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='mile3'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'cu miles',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='mile3'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Volume'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'minute',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='min'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Elapsed Time'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'minutes',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='min'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Elapsed Time'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'millimeter',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='mm'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Length'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'millimeters',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='mm'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Length'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'ntu',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='NTU'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Turbidity'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'lbs/sqin',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='psi'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Pressure'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'rev/min',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='rpm'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Angular Speed'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'revolutions per minute',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='rpm'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Angular Speed'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'second',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='sec'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Elapsed Time'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'seconds',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='sec'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Elapsed Time'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'umhos/cm',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='umho/cm'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Conductivity'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'VOLT',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='volt'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Electromotive Potential'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'Volt',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='volt'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Electromotive Potential'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'VOLTS',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='volt'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Electromotive Potential'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'Volts',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='volt'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Electromotive Potential'
		)
	)
);
INSERT INTO AT_UNIT_ALIAS (ALIAS_ID, DB_OFFICE_CODE, UNIT_CODE) VALUES (
	'volts',
	(SELECT OFFICE_CODE FROM CWMS_OFFICE WHERE OFFICE_ID = 'ALL'), (SELECT UNIT_CODE
		FROM   CWMS_UNIT
		WHERE  UNIT_ID='volt'
		AND    ABSTRACT_PARAM_CODE=
		(	SELECT ABSTRACT_PARAM_CODE
			FROM   CWMS_ABSTRACT_PARAMETER 
			WHERE  ABSTRACT_PARAM_ID='Electromotive Potential'
		)
	)
);

---------------------------------
-- AT_PROPERTIES table.
-- 
CREATE TABLE AT_PROPERTIES
    (
        OFFICE_CODE    NUMBER(10),
        PROP_CATEGORY  VARCHAR2(256) NOT NULL,
        PROP_ID        VARCHAR2(256) NOT NULL,
        PROP_VALUE     VARCHAR2(256),
        PROP_COMMENT   VARCHAR2(256)
    )
    LOGGING 
    NOCOMPRESS 
    NOCACHE
    NOPARALLEL
    NOMONITORING;
                                  
COMMENT ON TABLE AT_PROPERTIES IS 'Generic properties, such as for Java application.';
COMMENT ON COLUMN AT_PROPERTIES.OFFICE_CODE   IS 'References the office that "owns" this property.';
COMMENT ON COLUMN AT_PROPERTIES.PROP_CATEGORY IS 'Major category or component to which property applies.';
COMMENT ON COLUMN AT_PROPERTIES.PROP_ID       IS 'Property name.';
COMMENT ON COLUMN AT_PROPERTIES.PROP_VALUE    IS 'Property value.';
COMMENT ON COLUMN AT_PROPERTIES.PROP_COMMENT  IS 'Notes about property usage or value.';
---------------------------------
-- AT_PROPERTIES constraints.
-- 
ALTER TABLE AT_PROPERTIES ADD CONSTRAINT AT_PROPERTIES_FK FOREIGN KEY(OFFICE_CODE)REFERENCES CWMS_OFFICE (OFFICE_CODE);
ALTER TABLE AT_PROPERTIES ADD CONSTRAINT AT_PROPERTIES_PK PRIMARY KEY(OFFICE_CODE, PROP_CATEGORY, PROP_ID);
    
---------------------------------
-- AT_PROPERTIES indicies.
-- 
CREATE UNIQUE INDEX at_properties_uk1 ON at_properties(OFFICE_CODE, UPPER("PROP_CATEGORY"), UPPER("PROP_ID"));

-------------------------------
-- START OF DSS XCHG SECTION --
-------------------------------
-----------------------------
-- AT_DSS_FILE table
--
CREATE TABLE AT_DSS_FILE
   (
       DSS_FILE_CODE    NUMBER(10)    NOT NULL,
       OFFICE_CODE      NUMBER(10)    NOT NULL,
       DSS_FILEMGR_URL  VARCHAR2(32)  NOT NULL,
       DSS_FILE_NAME    VARCHAR2(255) NOT NULL
   )
       PCTFREE 10
       PCTUSED 40
       INITRANS 1
       MAXTRANS 255
       TABLESPACE CWMS_20AT_DATA
       STORAGE 
       ( 
          INITIAL 200K
          NEXT 200K
          MINEXTENTS 1
          MAXEXTENTS 200
          PCTINCREASE 25
          FREELISTS 1
          FREELIST GROUPS 1
          BUFFER_POOL DEFAULT
       );
-----------------------------
-- AT_DSS_FILE comments
--
COMMENT ON TABLE AT_DSS_FILE IS 'Contains location information for HEC-DSS files';
COMMENT ON COLUMN AT_DSS_FILE.DSS_FILE_CODE   IS 'Primary key used to relate file to other entities';
COMMENT ON COLUMN AT_DSS_FILE.OFFICE_CODE     IS 'Reference to owning office';
COMMENT ON COLUMN AT_DSS_FILE.DSS_FILEMGR_URL IS 'URL For DSSFileManager instance for HEC-DSS file';
COMMENT ON COLUMN AT_DSS_FILE.DSS_FILE_NAME   IS 'Operating system path name for file';
-----------------------------
-- AT_DSS_FILE constraints
--
ALTER TABLE AT_DSS_FILE ADD CONSTRAINT AT_DSS_FILE_FK FOREIGN KEY (OFFICE_CODE) REFERENCES CWMS_OFFICE(OFFICE_CODE);
ALTER TABLE AT_DSS_FILE ADD CONSTRAINT AT_DSS_FILE_UK UNIQUE (DSS_FILE_CODE, DSS_FILEMGR_URL, DSS_FILE_NAME);
ALTER TABLE AT_DSS_FILE ADD CONSTRAINT AT_DSS_FILE_PK PRIMARY KEY (DSS_FILE_CODE) 
    USING INDEX
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               );


SHOW ERRORS;
COMMIT;

-----------------------------
-- AT_DSS_TS_SPEC table
--
CREATE TABLE AT_DSS_TS_SPEC
   (
       DSS_TS_CODE             NUMBER(10)   NOT NULL,
       OFFICE_CODE             NUMBER(10)   NOT NULL,
       A_PATHNAME_PART         VARCHAR2(64),
       B_PATHNAME_PART         VARCHAR2(64) NOT NULL,
       C_PATHNAME_PART         VARCHAR2(64) NOT NULL,
       E_PATHNAME_PART         VARCHAR2(64) NOT NULL,
       F_PATHNAME_PART         VARCHAR2(64),
       DSS_PARAMETER_TYPE_CODE NUMBER(10)   NOT NULL,
       UNIT_ID                 VARCHAR2(16) NOT NULL,
       TIME_ZONE_CODE          NUMBER(10)   NOT NULL,
       TZ_USAGE_CODE           NUMBER(10)   NOT NULL
   )
       PCTFREE 10
       PCTUSED 40
       INITRANS 1
       MAXTRANS 255
       TABLESPACE CWMS_20AT_DATA
       STORAGE 
       ( 
          INITIAL 200K
          NEXT 200K
          MINEXTENTS 1
          MAXEXTENTS 200
          PCTINCREASE 25
          FREELISTS 1
          FREELIST GROUPS 1
          BUFFER_POOL DEFAULT
       );
-----------------------------
-- AT_DSS_TS_SPEC comments
--
COMMENT ON TABLE  AT_DSS_TS_SPEC                         IS 'Complete specification of time series data set in HEC-DSS file';
COMMENT ON COLUMN AT_DSS_TS_SPEC.DSS_TS_CODE             IS 'Primary key used to relate specification to other entities';
COMMENT ON COLUMN AT_DSS_TS_SPEC.OFFICE_CODE             IS 'Reference to owning office';
COMMENT ON COLUMN AT_DSS_TS_SPEC.A_PATHNAME_PART         IS 'HEC-DSS pathname A-part (watershed)';
COMMENT ON COLUMN AT_DSS_TS_SPEC.B_PATHNAME_PART         IS 'HEC-DSS pathname B-part (location)';
COMMENT ON COLUMN AT_DSS_TS_SPEC.C_PATHNAME_PART         IS 'HEC-DSS pathname C-part (parameter)';
COMMENT ON COLUMN AT_DSS_TS_SPEC.E_PATHNAME_PART         IS 'HEC-DSS pathname E-part (interval)';
COMMENT ON COLUMN AT_DSS_TS_SPEC.F_PATHNAME_PART         IS 'HEC-DSS pathname F-part (version)';
COMMENT ON COLUMN AT_DSS_TS_SPEC.DSS_PARAMETER_TYPE_CODE IS 'Reference to HEC-DSS parameter type';
COMMENT ON COLUMN AT_DSS_TS_SPEC.UNIT_ID                 IS 'Units for HEC-DSS data set';
COMMENT ON COLUMN AT_DSS_TS_SPEC.TIME_ZONE_CODE          IS 'Reference to time zone for HEC-DSS data set';
COMMENT ON COLUMN AT_DSS_TS_SPEC.TZ_USAGE_CODE           IS 'Reference to time zone useage for HEC-DSS data set';
-----------------------------
-- AT_DSS_TS_SPEC constraints
--
ALTER TABLE AT_DSS_TS_SPEC ADD CONSTRAINT AT_DSS_TS_SPEC_FK1  FOREIGN KEY (OFFICE_CODE) REFERENCES CWMS_OFFICE(OFFICE_CODE);
ALTER TABLE AT_DSS_TS_SPEC ADD CONSTRAINT AT_DSS_TS_SPEC_FK2  FOREIGN KEY (DSS_PARAMETER_TYPE_CODE) REFERENCES CWMS_DSS_PARAMETER_TYPE(DSS_PARAMETER_TYPE_CODE);
ALTER TABLE AT_DSS_TS_SPEC ADD CONSTRAINT AT_DSS_TS_SPEC_FK3  FOREIGN KEY (TIME_ZONE_CODE) REFERENCES CWMS_TIME_ZONE(TIME_ZONE_CODE);
ALTER TABLE AT_DSS_TS_SPEC ADD CONSTRAINT AT_DSS_TS_SPEC_FK4  FOREIGN KEY (TZ_USAGE_CODE) REFERENCES CWMS_TZ_USAGE(TZ_USAGE_CODE);
ALTER TABLE AT_DSS_TS_SPEC ADD CONSTRAINT AT_DSS_TS_SPEC_PK   PRIMARY KEY (DSS_TS_CODE)
    USING INDEX
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               );
-----------------------------
-- AT_DSS_TS_SPEC indicies
--
CREATE INDEX AT_DSS_TS_SPEC_PATHNAME ON AT_DSS_TS_SPEC
   (
       OFFICE_CODE,
       UPPER(NVL(A_PATHNAME_PART, '@')),
       UPPER(B_PATHNAME_PART),
       UPPER(C_PATHNAME_PART),
       UPPER(E_PATHNAME_PART),
       UPPER(NVL(F_PATHNAME_PART, '@'))
   )
       PCTFREE 10
       INITRANS 2
       MAXTRANS 255
       TABLESPACE cwms_20at_data
       STORAGE 
       ( 
          INITIAL 20k
          NEXT 20k
          MINEXTENTS 1
          MAXEXTENTS 20
          PCTINCREASE 25
          FREELISTS 1
          FREELIST GROUPS 1
          BUFFER_POOL DEFAULT
       );
-----------------------------
-- AT_UNIT_ALIAS trigger (depends on AT_DSS_TS_SPEC)
--
create or replace trigger at_unit_alias_constraint
before delete or update
of alias_id
on cwms_20.at_unit_alias 
referencing new as new old as old
for each row
declare
   l_count number;   
begin
   if deleting or (updating and :new.alias_id != :old.alias_id) then
      select count(unit_id) 
        into l_count 
        from at_dss_ts_spec ts,
             cwms_office o
       where unit_id = :old.alias_id
         and o.office_code = ts.office_code
         and o.db_host_office_code = :old.db_office_code;
      if l_count > 0 then
         cwms_err.raise(
            'CANNOT_DELETE_UNIT_1',
            :old.alias_id,
            ''|| l_count || 'DSS time series specification(s)');
      end if;
   end if;
end at_unit_alias_constraint;
/
show errors;
commit;

-----------------------------
-- AT_DSS_TS_XCHG_SPEC table
--
CREATE TABLE AT_DSS_TS_XCHG_SPEC
   (
       DSS_TS_XCHG_CODE NUMBER(10)   NOT NULL,
       TS_CODE          NUMBER(10)   NOT NULL,
       DSS_TS_CODE      NUMBER(10)   NOT NULL
   )
       PCTFREE 10
       PCTUSED 40
       INITRANS 1
       MAXTRANS 255
       TABLESPACE CWMS_20AT_DATA
       STORAGE 
       ( 
          INITIAL 200K
          NEXT 200K
          MINEXTENTS 1
          MAXEXTENTS 200
          PCTINCREASE 25
          FREELISTS 1
          FREELIST GROUPS 1
          BUFFER_POOL DEFAULT
       );
-----------------------------
-- AT_DSS_TS_XCHG_SPEC comments
--
COMMENT ON TABLE  AT_DSS_TS_XCHG_SPEC                  IS 'Oracle/HEC-DSS time series data set exchange specification';
COMMENT ON COLUMN AT_DSS_TS_XCHG_SPEC.DSS_TS_XCHG_CODE IS 'Primary key used to relate specification to other entities';
COMMENT ON COLUMN AT_DSS_TS_XCHG_SPEC.TS_CODE          IS 'Reference to time series data in database';
COMMENT ON COLUMN AT_DSS_TS_XCHG_SPEC.DSS_TS_CODE      IS 'Reference to time series data in HEC-DSS file';
-----------------------------
-- AT_DSS_TS_XCHG_SPEC constraints
--
ALTER TABLE AT_DSS_TS_XCHG_SPEC ADD CONSTRAINT AT_DSS_TS_XCHG_SPEC_FK1  FOREIGN KEY (TS_CODE) REFERENCES AT_CWMS_TS_SPEC(TS_CODE);
ALTER TABLE AT_DSS_TS_XCHG_SPEC ADD CONSTRAINT AT_DSS_TS_XCHG_SPEC_FK2  FOREIGN KEY (DSS_TS_CODE) REFERENCES AT_DSS_TS_SPEC(DSS_TS_CODE);
ALTER TABLE AT_DSS_TS_XCHG_SPEC ADD CONSTRAINT AT_DSS_TS_XCHG_SPEC_PK   PRIMARY KEY (DSS_TS_XCHG_CODE) 
    USING INDEX
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               );

/*
-----------------------------
-- AT_DSS_RATING_SPEC table
--
CREATE TABLE AT_DSS_RATING_SPEC
   (
       DSS_RATING_CODE  NUMBER(10)    NOT NULL,
       A_PATHNAME_PART  VARCHAR2(64),
       B_PATHNAME_PART  VARCHAR2(64)  NOT NULL,
       C_PATHNAME_PART  VARCHAR2(64)  NOT NULL,
       F_PATHNAME_PART  VARCHAR2(64),
       MEAS1_UNIT_CODE  NUMBER(10)    NOT NULL,
       MEAS2_UNIT_CODE  NUMBER(10)    NOT NULL,
       RATED_UNIT_CODE  NUMBER(10)    NOT NULL,
       TIMEZONE_CODE    NUMBER(10)    NOT NULL,
       TZ_USAGE_CODE    NUMBER(10)    NOT NULL
   )
       PCTFREE 10
       PCTUSED 40
       INITRANS 1
       MAXTRANS 255
       TABLESPACE CWMS_20AT_DATA
       STORAGE 
       ( 
          INITIAL 200K
          NEXT 200K
          MINEXTENTS 1
          MAXEXTENTS 200
          PCTINCREASE 25
          FREELISTS 1
          FREELIST GROUPS 1
          BUFFER_POOL DEFAULT
       );
-----------------------------
-- AT_DSS_RATING_SPEC comments
--
COMMENT ON TABLE  AT_DSS_RATING_SPEC                 IS 'Complete specification of rating data set in HEC-DSS file';
COMMENT ON COLUMN AT_DSS_RATING_SPEC.A_PATHNAME_PART IS 'HEC-DSS pathname A-part (watershed)';
COMMENT ON COLUMN AT_DSS_RATING_SPEC.B_PATHNAME_PART IS 'HEC-DSS pathname B-part (location)';
COMMENT ON COLUMN AT_DSS_RATING_SPEC.C_PATHNAME_PART IS 'HEC-DSS pathname C-part (parameters)';
COMMENT ON COLUMN AT_DSS_RATING_SPEC.F_PATHNAME_PART IS 'HEC-DSS pathname F-part (version)';
COMMENT ON COLUMN AT_DSS_RATING_SPEC.TIMEZONE_CODE   IS 'Reference to time zone for HEC-DSS data set';
COMMENT ON COLUMN AT_DSS_RATING_SPEC.TZ_USAGE_CODE   IS 'Reference to time zone useage for HEC-DSS data set';
COMMENT ON COLUMN AT_DSS_RATING_SPEC.DSS_RATING_CODE IS 'Primary key used to relate specification to other entities';
-----------------------------
-- AT_DSS_RATING_SPEC constraints
--
ALTER TABLE AT_DSS_RATING_SPEC ADD CONSTRAINT PK_AT_DSS_RATING_SPEC   PRIMARY KEY (DSS_RATING_CODE);
ALTER TABLE AT_DSS_RATING_SPEC ADD CONSTRAINT FK_AT_DSS_RATING_SPEC_1 FOREIGN KEY (MEAS1_UNIT_CODE) REFERENCES CWMS_UNIT (UNIT_CODE);
ALTER TABLE AT_DSS_RATING_SPEC ADD CONSTRAINT FK_AT_DSS_RATING_SPEC_2 FOREIGN KEY (MEAS2_UNIT_CODE) REFERENCES CWMS_UNIT (UNIT_CODE);
ALTER TABLE AT_DSS_RATING_SPEC ADD CONSTRAINT FK_AT_DSS_RATING_SPEC_3 FOREIGN KEY (RATED_UNIT_CODE) REFERENCES CWMS_UNIT (UNIT_CODE);
ALTER TABLE AT_DSS_RATING_SPEC ADD CONSTRAINT FK_AT_DSS_RATING_SPEC_4 FOREIGN KEY (TIMEZONE_CODE)   REFERENCES CWMS_TIME_ZONE (TIME_ZONE_CODE);
ALTER TABLE AT_DSS_RATING_SPEC ADD CONSTRAINT FK_AT_DSS_RATING_SPEC_5 FOREIGN KEY (TZ_USAGE_CODE)   REFERENCES CWMS_TZ_USAGE (TZ_USAGE_CODE);
-----------------------------
-- AT_DSS_RATING_SPEC indicies
--
CREATE UNIQUE INDEX AT_DSS_RATING_SPEC_UI ON AT_DSS_RATING_SPEC
   (
       UPPER(NVL(A_PATHNAME_PART, '@')),
       UPPER(B_PATHNAME_PART),
       UPPER(C_PATHNAME_PART),
       UPPER(NVL(F_PATHNAME_PART, '@'))
   )
       PCTFREE 10
       INITRANS 2
       MAXTRANS 255
       TABLESPACE cwms_20at_data
       STORAGE 
       ( 
          INITIAL 20k
          NEXT 20k
          MINEXTENTS 1
          MAXEXTENTS 20
          PCTINCREASE 25
          FREELISTS 1
          FREELIST GROUPS 1
          BUFFER_POOL DEFAULT
       );
SHOW ERRORS;
COMMIT;

-----------------------------
-- AT_DSS_RATING_XCHG_SPEC table
--
CREATE TABLE AT_DSS_RATING_XCHG_SPEC
   (
       DSS_RATING_XCHG_CODE  NUMBER(10)              NOT NULL,
       RATING_CODE           NUMBER(10)              NOT NULL,
       DSS_RATING_CODE       NUMBER(10)              NOT NULL
   )
       PCTFREE 10
       PCTUSED 40
       INITRANS 1
       MAXTRANS 255
       TABLESPACE CWMS_20AT_DATA
       STORAGE 
       ( 
          INITIAL 200K
          NEXT 200K
          MINEXTENTS 1
          MAXEXTENTS 200
          PCTINCREASE 25
          FREELISTS 1
          FREELIST GROUPS 1
          BUFFER_POOL DEFAULT
       );
-----------------------------
-- AT_DSS_RATING_XCHG_SPEC comments
--
COMMENT ON TABLE  AT_DSS_RATING_XCHG_SPEC                      IS 'Oracle/HEC-DSS rating data set exchange specification';
COMMENT ON COLUMN AT_DSS_RATING_XCHG_SPEC.DSS_RATING_XCHG_CODE IS 'Primary key used to relate specification to other entities';
COMMENT ON COLUMN AT_DSS_RATING_XCHG_SPEC.RATING_CODE          IS 'Reference to rating data in database';
COMMENT ON COLUMN AT_DSS_RATING_XCHG_SPEC.DSS_RATING_CODE      IS 'Reference to rating data in HEC-DSS file';
-----------------------------
-- AT_DSS_RATING_XCHG_SPEC constraints
--
ALTER TABLE AT_DSS_RATING_XCHG_SPEC ADD CONSTRAINT PK_AT_DSS_RATING_XCHG_SPEC   PRIMARY KEY (DSS_RATING_XCHG_CODE);
-- ALTER TABLE AT_DSS_RATING_XCHG_SPEC ADD CONSTRAINT FK_AT_DSS_RATING_XCHG_SPEC_1 FOREIGN KEY (RATING_CODE)     REFERENCES AT_RATING_SPEC (RATING_CODE);
ALTER TABLE AT_DSS_RATING_XCHG_SPEC ADD CONSTRAINT FK_AT_DSS_RATING_XCHG_SPEC_2 FOREIGN KEY (DSS_RATING_CODE) REFERENCES AT_DSS_RATING_SPEC (DSS_RATING_CODE);
*/
-----------------------------
-- AT_DSS_XCHG_SET table
--
CREATE TABLE AT_DSS_XCHG_SET
   (
       DSS_XCHG_SET_CODE NUMBER(10)   NOT NULL,
       OFFICE_CODE       NUMBER(10)   NOT NULL,
       DSS_FILE_CODE     NUMBER(10)   NOT NULL,
       DSS_XCHG_SET_ID   VARCHAR2(32) NOT NULL,
       DESCRIPTION       VARCHAR2(80),
       REALTIME          NUMBER,
       LAST_UPDATE       TIMESTAMP(6)
   )
       PCTFREE 10
       PCTUSED 40
       INITRANS 1
       MAXTRANS 255
       TABLESPACE CWMS_20AT_DATA
       STORAGE 
       ( 
          INITIAL 200K
          NEXT 200K
          MINEXTENTS 1
          MAXEXTENTS 200
          PCTINCREASE 25
          FREELISTS 1
          FREELIST GROUPS 1
          BUFFER_POOL DEFAULT
       );
-----------------------------
-- AT_DSS_XCHG_SET comments
--
COMMENT ON TABLE  AT_DSS_XCHG_SET                   IS 'Oracle/HEC-DSS exchange set specification';
COMMENT ON COLUMN AT_DSS_XCHG_SET.DSS_XCHG_SET_CODE IS 'Primary key used to relate specification to other entities';
COMMENT ON COLUMN AT_DSS_XCHG_SET.DSS_FILE_CODE     IS 'Reference to location of HEC-DSS file';
COMMENT ON COLUMN AT_DSS_XCHG_SET.OFFICE_CODE       IS 'Reference to CWMS office';
COMMENT ON COLUMN AT_DSS_XCHG_SET.DSS_XCHG_SET_ID   IS 'Text identifier of exchange set';
COMMENT ON COLUMN AT_DSS_XCHG_SET.DESCRIPTION       IS 'Text description of exchange set';
COMMENT ON COLUMN AT_DSS_XCHG_SET.REALTIME          IS 'Reference to realtime exchange direction or NULL if not realtime';
COMMENT ON COLUMN AT_DSS_XCHG_SET.LAST_UPDATE       IS 'Timestamp of last realtime exchange';
-----------------------------
-- AT_DSS_XCHG_SET constraints
--
ALTER TABLE AT_DSS_XCHG_SET ADD CONSTRAINT AT_DSS_XCHG_SET_FK1  FOREIGN KEY (DSS_FILE_CODE) REFERENCES AT_DSS_FILE(DSS_FILE_CODE);
ALTER TABLE AT_DSS_XCHG_SET ADD CONSTRAINT AT_DSS_XCHG_SET_FK2  FOREIGN KEY (OFFICE_CODE) REFERENCES CWMS_OFFICE(OFFICE_CODE);
ALTER TABLE AT_DSS_XCHG_SET ADD CONSTRAINT AT_DSS_XCHG_SET_FK3  FOREIGN KEY (REALTIME) REFERENCES CWMS_DSS_XCHG_DIRECTION(DSS_XCHG_DIRECTION_CODE);
ALTER TABLE AT_DSS_XCHG_SET ADD CONSTRAINT AT_DSS_XCHG_SET_PK   PRIMARY KEY (DSS_XCHG_SET_CODE) 
    USING INDEX
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               );
-----------------------------
-- AT_DSS_XCHG_SET indicies
--
CREATE UNIQUE INDEX AT_DSS_XCHG_SET_UI ON AT_DSS_XCHG_SET
   (  
       OFFICE_CODE,
       UPPER(DSS_XCHG_SET_ID)
   )
       PCTFREE 10
       INITRANS 2
       MAXTRANS 255
       TABLESPACE CWMS_20AT_DATA
       STORAGE 
       ( 
          INITIAL 200k
          NEXT 200k
          MINEXTENTS 1
          MAXEXTENTS 20
          PCTINCREASE 25
          FREELISTS 1
          FREELIST GROUPS 1
          BUFFER_POOL DEFAULT
       );
SHOW ERRORS;
COMMIT;

-----------------------------
-- AT_DSS_TS_XCHG_MAP table
--
CREATE TABLE AT_DSS_TS_XCHG_MAP
   (
       DSS_TS_XCHG_MAP_CODE NUMBER(10) NOT NULL,
       DSS_XCHG_SET_CODE  NUMBER(10)   NOT NULL,
       DSS_TS_XCHG_CODE   NUMBER(10)   NOT NULL
   )
       PCTFREE 10
       PCTUSED 40
       INITRANS 1
       MAXTRANS 255
       TABLESPACE CWMS_20AT_DATA
       STORAGE 
       ( 
          INITIAL 200K
          NEXT 200K
          MINEXTENTS 1
          MAXEXTENTS 200
          PCTINCREASE 25
          FREELISTS 1
          FREELIST GROUPS 1
          BUFFER_POOL DEFAULT
       );
-----------------------------
-- AT_DSS_TS_XCHG_MAP comments
--
COMMENT ON TABLE  AT_DSS_TS_XCHG_MAP                      IS 'Maps exchange sets and TS specs in many-to-many relationship';
COMMENT ON COLUMN AT_DSS_TS_XCHG_MAP.DSS_TS_XCHG_MAP_CODE IS 'Primary key used to relate specification to other entities';
COMMENT ON COLUMN AT_DSS_TS_XCHG_MAP.DSS_XCHG_SET_CODE    IS 'Reference to Oracle/HEC-DSS exchange set';
COMMENT ON COLUMN AT_DSS_TS_XCHG_MAP.DSS_TS_XCHG_CODE     IS 'Reference to Oracle/HEC-DSS time series exchange spec';
-----------------------------
-- AT_DSS_TS_XCHG_MAP constraints
--
ALTER TABLE AT_DSS_TS_XCHG_MAP ADD CONSTRAINT AT_DSS_TS_XCHG_MAP_UK   UNIQUE      (DSS_XCHG_SET_CODE, DSS_TS_XCHG_CODE);
ALTER TABLE AT_DSS_TS_XCHG_MAP ADD CONSTRAINT AT_DSS_TS_XCHG_MAP_FK1  FOREIGN KEY (DSS_XCHG_SET_CODE) REFERENCES AT_DSS_XCHG_SET (DSS_XCHG_SET_CODE);
ALTER TABLE AT_DSS_TS_XCHG_MAP ADD CONSTRAINT AT_DSS_TS_XCHG_MAP_FK2  FOREIGN KEY (DSS_TS_XCHG_CODE)  REFERENCES AT_DSS_TS_XCHG_SPEC (DSS_TS_XCHG_CODE);
ALTER TABLE AT_DSS_TS_XCHG_MAP ADD CONSTRAINT AT_DSS_TS_XCHG_MAP_PK   PRIMARY KEY (DSS_TS_XCHG_MAP_CODE) 
    USING INDEX
    TABLESPACE CWMS_20DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
                BUFFER_POOL      DEFAULT
               );
-----------------------------
-- AT_DSS_TS_XCHG_MAP_RULES trigger
--
create or replace trigger at_dss_ts_xchg_map_rules
before insert or update
of dss_xchg_set_code
  ,dss_ts_xchg_code
on at_dss_ts_xchg_map
referencing new as new old as old
for each row
declare
   -- 
   -- this trigger ensures that, if individual data sets are included in 
   -- multiple real-time exchange sets, all sets exchange data in the 
   -- same direction. 
   -- 
   pkval                number;
   l_ts_xchg_spec       at_dss_ts_xchg_spec%rowtype;
   l_xchg_set           at_dss_xchg_set%rowtype;
   l_ts_code            at_dss_ts_xchg_spec.ts_code%type;
   l_realtime           at_dss_xchg_set.realtime%type;
   l_set_id             at_dss_xchg_set.dss_xchg_set_id%type;
   l_ts_id              mv_cwms_ts_id.cwms_ts_id%type;

   --
   -- all at_dss_ts_xchg_set records that are mapped to at_dss_ts_xchg_spec
   -- records that contain a specified ts_code
   --
   cursor l_xchg_set_cur is
      select xset.*
      from  at_dss_xchg_set xset, at_dss_ts_xchg_map xmap, at_dss_ts_xchg_spec xspec
      where xspec.ts_code = l_ts_code
         and xmap.dss_ts_xchg_code = xspec.dss_ts_xchg_code
         and xset.dss_xchg_set_code = xmap.dss_xchg_set_code;
begin
   -- 
   -- get the real-time and direction settings from the new exchange set 
   -- 
   select *
      into  l_xchg_set
      from  at_dss_xchg_set
      where dss_xchg_set_code=:new.dss_xchg_set_code;

   if l_xchg_set.realtime is not null then
      -- 
      -- a real-time set is specified, so we have to check everything out 
      --
       
      -- 
      -- save the new real-time and direction
      -- 
      l_realtime := l_xchg_set.realtime;
      l_set_id := l_xchg_set.dss_xchg_set_id;
      --
      -- get the ts_code from the new at_dss_ts_xchg_spec
      --
      select ts_code
         into  l_ts_code
         from  at_dss_ts_xchg_spec
         where dss_ts_xchg_code = :new.dss_ts_xchg_code;
      -- 
      -- loop through every at_dss_xchg_spec that maps to a at_dss_ts_xchg_spec record
      -- that contains the ts_code 
      -- 
      for l_xchg_set in l_xchg_set_cur loop
         begin
            if l_xchg_set.realtime is not null and l_xchg_set.realtime != l_realtime then
               --
               -- this realtime set has a mapping that includes sending the ts_code
               -- in the opposite direction
               --
               select cwms_ts_id 
               into   l_ts_id
               from   mv_cwms_ts_id 
               where  ts_code=l_ts_xchg_spec.ts_code;
                   
               cwms_err.raise('XCHG_TS_ERROR', l_ts_id, l_set_id, l_xchg_set.dss_xchg_set_id);
            end if;
         exception
            when others then
               --
               -- unexpected error
               --
               dbms_output.put_line(sqlerrm);
               raise;
         end;
      end loop;
   end if;
   
end at_dss_ts_xchg_map_rules;
/

SHOW ERRORS;
COMMIT;

/*
-----------------------------
-- AT_DSS_RATING_XCHG_MAP table
--
CREATE TABLE AT_DSS_RATING_XCHG_MAP
   (
       DSS_RATING_XCHG_MAP_CODE NUMBER(10) NOT NULL,
       DSS_XCHG_SET_CODE        NUMBER(10) NOT NULL,
       DSS_RATING_XCHG_CODE     NUMBER(10) NOT NULL
   )
       PCTFREE 10
       PCTUSED 40
       INITRANS 1
       MAXTRANS 255
       TABLESPACE CWMS_20AT_DATA
       STORAGE 
       ( 
          INITIAL 200K
          NEXT 200K
          MINEXTENTS 1
          MAXEXTENTS 200
          PCTINCREASE 25
          FREELISTS 1
          FREELIST GROUPS 1
          BUFFER_POOL DEFAULT
       );
-----------------------------
-- AT_DSS_RATING_XCHG_MAP comments
--
COMMENT ON TABLE  AT_DSS_RATING_XCHG_MAP                          IS 'Maps exchange sets and rating specs in many-to-many relationship';
COMMENT ON COLUMN AT_DSS_RATING_XCHG_MAP.DSS_RATING_XCHG_MAP_CODE IS 'Primary key used to relate specification to other entities';
COMMENT ON COLUMN AT_DSS_RATING_XCHG_MAP.DSS_XCHG_SET_CODE        IS 'Reference to Oracle/HEC-DSS exchange set';
COMMENT ON COLUMN AT_DSS_RATING_XCHG_MAP.DSS_RATING_XCHG_CODE     IS 'Reference to Oracle/HEC-DSS rating exchange spec';
-----------------------------
-- AT_DSS_RATING_XCHG_MAP constraints
--
ALTER TABLE AT_DSS_RATING_XCHG_MAP ADD CONSTRAINT PK_AT_DSS_RATING_XCHG_MAP   PRIMARY KEY (DSS_RATING_XCHG_MAP_CODE);
ALTER TABLE AT_DSS_RATING_XCHG_MAP ADD CONSTRAINT UK_AT_DSS_RATING_XCHG_MAP   UNIQUE      (DSS_XCHG_SET_CODE, DSS_RATING_XCHG_CODE);
ALTER TABLE AT_DSS_RATING_XCHG_MAP ADD CONSTRAINT FK_AT_DSS_RATING_XCHG_MAP_1 FOREIGN KEY (DSS_XCHG_SET_CODE)    REFERENCES AT_DSS_XCHG_SET (DSS_XCHG_SET_CODE);
ALTER TABLE AT_DSS_RATING_XCHG_MAP ADD CONSTRAINT FK_AT_DSS_RATING_XCHG_MAP_2 FOREIGN KEY (DSS_RATING_XCHG_CODE) REFERENCES AT_DSS_RATING_XCHG_SPEC (DSS_RATING_XCHG_CODE);

-----------------------------
-- AT_DSS_RATING_XCHG_MAP_RULES trigger
--
create or replace trigger at_dss_rating_xchg_map_rules
before insert or update
of dss_xchg_set_code
  ,dss_rating_xchg_code
on at_dss_rating_xchg_map
referencing new as new old as old
for each row
declare
   -- 
   -- this trigger ensures that, if individual data sets are included in 
   -- multiple real-time exchange sets, all sets exchange data in the 
   -- same direction. 
   -- 
   pkval                number;
   l_rating_xchg_spec   at_dss_rating_xchg_spec%rowtype;
   l_xchg_set           at_dss_xchg_set%rowtype;
   l_rating_code        at_dss_rating_xchg_spec.rating_code%type;
   l_realtime           at_dss_xchg_set.realtime%type;
   l_set_id             at_dss_xchg_set.dss_xchg_set_id%type;
   l_rating_id          at_rating_id_mview.rating_id%type;

   --
   -- all at_dss_rating_xchg_set records that are mapped to at_dss_rating_xchg_spec
   -- records that contain a specified rating_code
   --
   cursor l_xchg_set_cur is
      select xset.*
      from  at_dss_xchg_set xset, at_dss_rating_xchg_map xmap, at_dss_rating_xchg_spec xspec
      where xspec.rating_code = l_rating_code
         and xmap.dss_rating_xchg_code = xspec.dss_rating_xchg_code
         and xset.dss_xchg_set_code = xmap.dss_xchg_set_code;
begin
   -- 
   -- get the real-time and direction settings from the new exchange set 
   -- 
   select *
   into   l_xchg_set
   from   at_dss_xchg_set
   where  dss_xchg_set_code=:new.dss_xchg_set_code;

   if l_xchg_set.realtime is not null then
      -- 
      -- a real-time set is specified, so we have to check everything out 
      --
       
      -- 
      -- save the new real-time and direction
      -- 
      l_realtime := l_xchg_set.realtime;
      l_set_id := l_xchg_set.dss_xchg_set_id;
      --
      -- get the rating_code from the new at_dss_rating_xchg_spec
      --
      select rating_code
      into   l_rating_code
      from   at_dss_rating_xchg_spec
      where  dss_rating_xchg_code = :new.dss_rating_xchg_code;
      -- 
      -- loop through every at_dss_xchg_spec that maps to a at_dss_rating_xchg_spec record
      -- that contains the ts_code 
      -- 
      for l_xchg_set in l_xchg_set_cur loop
         begin
            if l_xchg_set.realtime is not null and l_xchg_set.realtime != l_realtime then
               --
               -- this realtime set has a mapping that includes sending the rating_code
               -- in the opposite direction
               --
               select rating_id 
               into   l_rating_id
               from   at_rating_id_mview 
               where  rating_code=l_rating_xchg_spec.rating_code;
               
               cwms_err.raise('XCHG_RATING_ERROR', l_rating_id, l_set_id, l_xchg_set.dss_xchg_set_id);
                     
            end if;
         exception
            when others then
               --
               -- unexpected error
               --
               dbms_output.put_line(sqlerrm);
               raise;
         end;
      end loop;
   end if;
      
end at_dss_rating_xchg_map_rules;
/
SHOW ERRORS;
COMMIT;
*/
-----------------------------
-- AT_DSS_XCHG_SET_RULES trigger
--
create or replace trigger at_dss_xchg_set_rules
   after insert or update of realtime
   on at_dss_xchg_set
declare
   --
   -- this trigger ensures that, if individual data sets are included in
   -- multiple real-time exchange sets, all sets exchange data in the
   -- same direction.
   --

   --
   -- TO DO: ADD RATINGS CHECK TO THIS!!!
   --
   type cursor_rec is record(
      ts_code   number(10),
      ts_id     varchar2(183)
   );

   rec   cursor_rec;

   cursor l_conflicts_cur
   is
      select xspec1.ts_code ts_code, v.cwms_ts_id ts_id
        from at_dss_xchg_set set1,
             at_dss_xchg_set set2,
             at_dss_ts_xchg_map map1,
             at_dss_ts_xchg_map map2,
             at_dss_ts_xchg_spec xspec1,
             at_dss_ts_xchg_spec xspec2,
             mv_cwms_ts_id v
       where     xspec1.ts_code = xspec2.ts_code
             and map1.dss_ts_xchg_code = xspec1.dss_ts_xchg_code
             and map2.dss_ts_xchg_code = xspec2.dss_ts_xchg_code
             and map1.dss_xchg_set_code = set1.dss_xchg_set_code
             and map2.dss_xchg_set_code = set2.dss_xchg_set_code
             and set1.realtime is not null
             and set2.realtime is not null
             and set1.realtime != set2.realtime
             and v.ts_code = xspec1.ts_code;
begin
   for rec in l_conflicts_cur loop
      cwms_err.raise('XCHG_TS_ERROR', rec.ts_id);
   end loop;
end at_dss_xchg_set_rules;
/
SHOW ERRORS;
COMMIT;

-----------------------------
-- END OF DSS XCHG SECTION --
-----------------------------

-----------------------------
-- AT_TS_MSG_ARCHIVE_1 table
--
create table at_ts_msg_archive_1
(
   code            number(10)    not null,
   ts_code         number(10)    not null,
   message_time    timestamp(6)  not null,
   first_data_time date          not null,
   last_data_time  date          not null
)
tablespace cwms_20at_data
pctused    0
pctfree    10
initrans   1
maxtrans   255
storage    (
            initial          5m
            minextents       1
            maxextents       2147483645
            pctincrease      0
            buffer_pool      default
           )
logging 
nocompress 
nocache
noparallel
monitoring;

-----------------------------
-- AT_TS_MSG_ARCHIVE_1 comments
--
comment on table  at_ts_msg_archive_1                 is 'Archive of queued messages for incoming TS data - odd months';
comment on column at_ts_msg_archive_1.code            is 'Primary Key';
comment on column at_ts_msg_archive_1.ts_code         is 'TS Code of data';
comment on column at_ts_msg_archive_1.message_time    is 'Message creation time';
comment on column at_ts_msg_archive_1.first_data_time is 'Start of time window of data stored';
comment on column at_ts_msg_archive_1.last_data_time  is 'End of time window of data stored';
-----------------------------
-- AT_TS_MSG_ARCHIVE_1 constraints
--
alter table at_ts_msg_archive_1 add constraint at_ts_msg_archive_1_pk primary key (code)
    using index 
    tablespace cwms_20at_data
    pctfree    10
    initrans   2
    maxtrans   255
    storage    (
                initial          64k
                minextents       1
                maxextents       2147483645
                pctincrease      0
               );
-----------------------------
-- AT_TS_MSG_ARCHIVE_1 indicies
--
create unique index at_ts_msg_archive_1_u1 on at_ts_msg_archive_1
(ts_code, message_time)
logging
tablespace cwms_20at_data
pctfree    10
initrans   2
maxtrans   255
storage    (
            initial          64k
            minextents       1
            maxextents       2147483645
            pctincrease      0
            buffer_pool      default
           )
noparallel;

show errors;
commit;

-----------------------------
-- AT_TS_MSG_ARCHIVE_2 table
--
create table at_ts_msg_archive_2
(
   code            number(10)    not null,
   ts_code         number(10)    not null,
   message_time    timestamp(6)  not null,
   first_data_time date          not null,
   last_data_time  date          not null
)
tablespace cwms_20at_data
pctused    0
pctfree    10
initrans   1
maxtrans   255
storage    (
            initial          5m
            minextents       1
            maxextents       2147483645
            pctincrease      0
            buffer_pool      default
           )
logging 
nocompress 
nocache
noparallel
monitoring;

-----------------------------
-- AT_TS_MSG_ARCHIVE_2 comments
--
comment on table  at_ts_msg_archive_2                 is 'Archive of queued messages for incoming TS data - odd months';
comment on column at_ts_msg_archive_2.code            is 'Primary Key';
comment on column at_ts_msg_archive_2.ts_code         is 'TS Code of data';
comment on column at_ts_msg_archive_2.message_time    is 'Message creation time';
comment on column at_ts_msg_archive_2.first_data_time is 'Start of time window of data stored';
comment on column at_ts_msg_archive_2.last_data_time  is 'End of time window of data stored';
-----------------------------
-- AT_TS_MSG_ARCHIVE_2 constraints
--
alter table at_ts_msg_archive_2 add constraint at_ts_msg_archive_2_pk primary key (code)
    using index 
    tablespace cwms_20at_data
    pctfree    10
    initrans   2
    maxtrans   255
    storage    (
                initial          64k
                minextents       1
                maxextents       2147483645
                pctincrease      0
               );
-----------------------------
-- AT_TS_MSG_ARCHIVE_2 indicies
--

create unique index at_ts_msg_archive_2_u1 on at_ts_msg_archive_2
(ts_code, message_time)
logging
tablespace cwms_20at_data
pctfree    10
initrans   2
maxtrans   255
storage    (
            initial          64k
            minextents       1
            maxextents       2147483645
            pctincrease      0
            buffer_pool      default
           )
noparallel;

show errors;
commit;

-----------------------------------------
-- stop and delete any existing queues --
-----------------------------------------
begin
   begin dbms_aqadm.stop_queue(queue_name  => 'realtime_ops');              exception  when others then null; end;
   begin dbms_aqadm.drop_queue(queue_name  => 'realtime_ops');              exception  when others then null; end;
   begin dbms_aqadm.drop_queue_table(queue_table  => 'realtime_ops_table'); exception  when others then null; end;
   begin dbms_aqadm.stop_queue(queue_name  => 'status');                    exception  when others then null; end;
   begin dbms_aqadm.drop_queue(queue_name  => 'status');                    exception  when others then null; end;
   begin dbms_aqadm.drop_queue_table(queue_table  => 'status_table');       exception  when others then null; end;
end;
/

-----------------------------
-- create and start queues --
-----------------------------
begin                 
   dbms_aqadm.create_queue_table(
      queue_table        => 'realtime_ops_table', 
      queue_payload_type => 'sys.aq$_jms_text_message',
      multiple_consumers => true);
      
   dbms_aqadm.create_queue(
      queue_name  => 'realtime_ops',
      queue_table => 'realtime_ops_table');
      
   dbms_aqadm.start_queue(queue_name => 'realtime_ops');
   
   dbms_aqadm.create_queue_table(
      queue_table        => 'status_table', 
      queue_payload_type => 'sys.aq$_jms_text_message',
      multiple_consumers => true);
      
   dbms_aqadm.create_queue(
      queue_name  => 'status',
      queue_table => 'status_table');
      
   dbms_aqadm.start_queue(queue_name => 'status');
end;
/

show errors;
commit;

-----------------------------
-- AT_MVIEW_REFRESH_PAUSED table
--
CREATE TABLE AT_MVIEW_REFRESH_PAUSED
(
  PAUSED_AT   TIMESTAMP(6)                      NOT NULL,
  MVIEW_NAME  VARCHAR2(30 CHAR)                 NOT NULL,
  USER_NAME   VARCHAR2(30 CHAR)                 NOT NULL,
  REMARKS     VARCHAR2(80 CHAR)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
NOMONITORING;
-----------------------------
-- AT_MVIEW_REFRESH_PAUSED comments
--
COMMENT ON TABLE AT_MVIEW_REFRESH_PAUSED IS 'M-views temporarily switched from on commit refresh to on demand';
COMMENT ON COLUMN AT_MVIEW_REFRESH_PAUSED.PAUSED_AT IS 'Timestamp of pause action';
COMMENT ON COLUMN AT_MVIEW_REFRESH_PAUSED.MVIEW_NAME IS 'Name of paused m-view';
COMMENT ON COLUMN AT_MVIEW_REFRESH_PAUSED.USER_NAME IS 'Name of user causing action';
COMMENT ON COLUMN AT_MVIEW_REFRESH_PAUSED.REMARKS IS 'Comment on action';
-----------------------------
-- AT_MVIEW_REFRESH_PAUSED constraints
--
ALTER TABLE AT_MVIEW_REFRESH_PAUSED ADD CONSTRAINT AT_MVIEW_REFRESH_PAUSED_PK PRIMARY KEY(PAUSED_AT, MVIEW_NAME);

show errors;
commit;

-----------------------------
-- AT_REPORT_TEMPLATES table
--
create table at_report_templates
(
  id               varchar2(256 byte),
  description      varchar2(256 byte),
  header_template  varchar2(4000 byte),
  record_template  varchar2(4000 byte),
  footer_template  varchar2(4000 byte)
)
tablespace cwms_20at_data
pctused    0
pctfree    10
initrans   1
maxtrans   255
storage    
(
  initial          64k
  minextents       1
  maxextents       2147483645
  pctincrease      0
  buffer_pool      default
)
logging 
nocompress 
nocache
noparallel
monitoring;
                                            
-----------------------------
-- AT_REPORT_TEMPLATES comments
--
comment on table  at_report_templates                 is 'Defines canned templates for use with CWMS_REPORT.TEXT_REPORT';
comment on column at_report_templates.id              is 'Unique record identifier, using hierarchical /dir/subdir/.../file syntax';
comment on column at_report_templates.description     is 'Description of this set of templates';
comment on column at_report_templates.header_template is 'A template string for the portion of the report before the records';
comment on column at_report_templates.record_template is 'A template string applied to each record in the report';
comment on column at_report_templates.footer_template is 'A template string for the portion of the report after the records';

-----------------------------
-- AT_REPORT_TEMPLATES indicies
--
ALTER TABLE AT_REPORT_TEMPLATES ADD 
(
  PRIMARY KEY (ID)
  USING INDEX 
  TABLESPACE cwms_20at_data
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    
  (
    INITIAL          64K
    MINEXTENTS       1
    MAXEXTENTS       2147483645
    PCTINCREASE      0
  )
);

-----------------------------
-- AT_REPORT_TEMPLATES default data
--
insert into at_report_templates values
(
'/cat_ts_table/xml',
'Generates XML from cat_ts_table records',
'<?xml version="1.0"?>\n<tsid_catalog>\n',
'  <tsid office="$1" ts_code="$4" offset="$3">$2</tsid>\n',
'</tsid_catalog>\n'
);

insert into at_report_templates values
(
'/cat_ts_table/html',
'Generates HTML from cat_ts_table records',
'<html>
<head>
  <title>Time Series IDs</title>
</head>
<body>
  <center>
    <h2>Time Series IDs</h2>
    <hr/>
    <table border="1">
      <tr>
        <th>Time Series Identifier</th>
        <th>TS Code</th>
        <th>UTC Interval Offset</th>
      </tr>
',
'      <tr>
        <td>$2</td>
        <td>$4</td>
        <td>$3</td>
      </tr>
',
'    </table>
  </center>
</body>
</html>
'
);

insert into at_report_templates values
(
   '/cat_ts_table/text',
   'Generates text from cat_ts_table records',
   '\nTIME SERIES CATALOG\nREPORT GENERATED BY $host AT $time\n\n',
   '$1%-8.8s$4%-8d$3%12d$2\n',
   '\n$count TOTAL RECORDS PROCESSED\n'
);

commit;

-----------------------------
-- AT_CLOB table
--
create table at_clob
(
  id           varchar2(256 byte) not null,
  description  varchar2(256 byte),
  value        clob
)
tablespace cwms_20at_data
pctused    0
pctfree    10
initrans   1
maxtrans   255
storage    
(
  initial          64k
  minextents       1
  maxextents       2147483645
  pctincrease      0
  buffer_pool      default
)
logging 
nocompress 
lob (value) store as 
( 
  tablespace  cwms_20at_data 
  enable      storage in row
  chunk       8192
  pctversion  0
  nocache
  storage   
  (
    initial          64k
    minextents       1
    maxextents       2147483645
    pctincrease      0
    buffer_pool      default
  )
)
nocache
noparallel
monitoring;

-----------------------------
-- AT_CLOB comments
--
comment on table  at_clob             is 'Character Large OBject Storage for CWMS';
comment on column at_clob.id          is 'Unique record identifier, using hierarchical /dir/subdir/.../file syntax';
comment on column at_clob.description is 'Description of this CLOB';
comment on column at_clob.value       is 'The CLOB data';

-----------------------------
-- AT_CLOB indicies
--
alter table at_clob add 
(
  primary key (id)
  using index 
  tablespace cwms_20at_data
  pctfree    10
  initrans   2
  maxtrans   255
  storage    
  (
    initial          64k
    minextents       1
    maxextents       2147483645
    pctincrease      0
  )
);

-----------------------------
-- AT_CLOB default data
--
insert into at_clob values
(      
'/xslt/identity',
'Transforms the input to an identical copy of itself',
'<!-- The Identity Transformation -->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <!-- Whenevery you match any node or any attribute -->
  <xsl:template match="node()|@*">
    <!-- Copy the current node -->
    <xsl:copy>
      <!-- Including andy attributes it has and any child nodes -->
      <xsl:apply-templates select="@*|node()"/>
    </xsl:copy>
  </xsl:template>
</xsl:stylesheet>
'
);

insert into at_clob values
(      
'/xslt/cat_ts_xml/tabbed_text',
'Transforms cat_ts_xml output to tab-separated text',
'<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:template match="/tsid_catalog[1]">
    <xsl:text>Time Series IDs for Office "</xsl:text>
    <xsl:value-of select="/tsid_catalog[1]/@office"/>
    <xsl:text>" Matching "</xsl:text>
    <xsl:value-of select="/tsid_catalog[1]/@pattern"/>
    <xsl:text>"&#xA;&#xA;Time Series ID&#x9;TS CODE&#x9;UTC OFFSET"&#xA;</xsl:text>
    <xsl:for-each select="/tsid_catalog/tsid">
      <xsl:value-of select="."/>   
      <xsl:text>&#x9;</xsl:text>
      <xsl:value-of select="@ts_code"/>   
      <xsl:text>&#x9;</xsl:text>
      <xsl:value-of select="@offset"/>   
      <xsl:text>&#xA;</xsl:text>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
'
);

insert into at_clob values
(      
'/xslt/cat_ts_xml/html',
'Transforms cat_ts_xml output to html',
'<html xsl:version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<head>
  <title>Time Series IDs for Office "<xsl:value-of select="/tsid_catalog[1]/@office"/>" 
         Matching "<xsl:value-of select="/tsid_catalog[1]/@pattern"/>"
  </title>
</head>
<body>
  <center>
    <h2>
      Time series IDs matching pattern 
	    "<xsl:value-of select="/tsid_catalog[1]/@pattern"/>" for Office 
	    "<xsl:value-of select="/tsid_catalog[1]/@office"/>".
    </h2>
    <hr/>
    <table border="1"> 
      <tr>
        <th>Time Series Identifier</th>
        <th>TS Code</th>
        <th>UTC Interval Offset</th>
      </tr>
      <xsl:for-each select="/tsid_catalog/tsid">
      <tr>
        <td><xsl:value-of select="."/></td>
        <td><xsl:value-of select="@ts_code"/></td>
        <td><xsl:value-of select="@offset"/></td>
      </tr>   
      </xsl:for-each>
    </table>
  </center>
</body>
</html>
'
);

commit;


SHOW ERRORS;
COMMIT;

