<?xml version="1.0"?>
<!--
  ~ Copyright (c) 2018
  ~ United States Army Corps of Engineers - Hydrologic Engineering Center (USACE/HEC)
  ~ All Rights Reserved.  USACE PROPRIETARY/CONFIDENTIAL.
  ~ Source may not be released without written approval from HEC
  -->

<project
		xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
		xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>mil.army.usace.hec</groupId>
		<artifactId>cwms-database-schema</artifactId>
		<version>22.2.1</version>
		<relativePath>../../schema/pom.xml</relativePath>
	</parent>
	<artifactId>cwms-db-jooq-codegen</artifactId>
	<name>CwmsDbJooqCodegen</name>
	<distributionManagement>
		<snapshotRepository>
			<id>hec-nexus-snapshots</id>
			<url>https://www.hec.usace.army.mil/nexus/repository/maven-snapshots</url>
		</snapshotRepository>
		<repository>
			<id>hec-nexus-releases</id>
			<url>https://www.hec.usace.army.mil/nexus/repository/maven-releases</url>
		</repository>
	</distributionManagement>
	<dependencies>
		<dependency>
			<groupId>com.oracle.database.jdbc</groupId>
			<artifactId>ojdbc8</artifactId>
			<version>${oracle.jdbc.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jooq.pro</groupId>
			<artifactId>jooq</artifactId>
			<version>${jooq.version}</version>
			<type>jar</type>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>ojdbc8</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.jooq.pro</groupId>
			<artifactId>jooq-codegen</artifactId>
			<version>${jooq.version}</version>
			<type>jar</type>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>ojdbc8</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.jooq.pro</groupId>
			<artifactId>jooq-meta</artifactId>
			<version>${jooq.version}</version>
			<type>jar</type>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>ojdbc8</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>javax.annotation-api</artifactId>
			<version>1.3.2</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>mil.army.usace.hec</groupId>
				<artifactId>cwms-db-properies-reader</artifactId>
				<version>${project.version}</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>codegen-properties-reader</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.12</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-src/main/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jooq.pro</groupId>
				<artifactId>jooq-codegen-maven</artifactId>
				<version>${jooq.version}</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>com.oracle.database.jdbc</groupId>
						<artifactId>ojdbc8</artifactId>
						<version>${oracle.jdbc.version}</version>
					</dependency>
					<dependency>
						<groupId>org.jooq.pro</groupId>
						<artifactId>jooq-codegen</artifactId>
						<version>${jooq.version}</version>
						<type>jar</type>
						<exclusions>
							<exclusion>
								<groupId>*</groupId>
								<artifactId>ojdbc8</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
					<dependency>
						<groupId>org.jooq.pro</groupId>
						<artifactId>jooq-codegen-maven</artifactId>
						<version>${jooq.version}</version>
						<exclusions>
							<exclusion>
								<groupId>*</groupId>
								<artifactId>ojdbc8</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
					<dependency>
						<groupId>org.jooq.pro</groupId>
						<artifactId>jooq-meta</artifactId>
						<version>${jooq.version}</version>
						<type>jar</type>
						<exclusions>
							<exclusion>
								<groupId>*</groupId>
								<artifactId>ojdbc8</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
					<dependency>
						<groupId>mil.army.usace.hec</groupId>
						<artifactId>cwms-db-jooq-generator</artifactId>
						<version>${project.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<jdbc>
						<driver>oracle.jdbc.OracleDriver</driver>
						<!--These properties are read from the cwms-db-properties-reader plugin-->
						<url>${oracle.codegen.url}</url>
						<user>${office.primary.code}hectest</user>
						<password>${oracle.hectest.password}</password>
					</jdbc>
					<generator>
						<database>
							<name>org.jooq.meta.oracle.OracleDatabase</name>
							<!-- Generate java.sql.Timestamp fields for DATE columns. This is
								particularly useful for Oracle databases. Defaults to false -->
							<dateAsTimestamp>true</dateAsTimestamp>
							<!-- The schema that is used locally as a source for meta information.
								This could be your development schema or the production schema, etc This
								cannot be combined with the schemata element. If left empty, jOOQ will generate
								all available schemata. See the manual's next section to learn how to generate
								several schemata -->
							<inputSchema>CWMS_20</inputSchema>
							<!-- A custom version number that, if available, will be used to assess
								whether the above <inputSchema/> will need to be regenerated. There are three
								operation modes for this element: - The value is a class that can be found
								on the classpath and that implements org.jooq.util.CatalogVersionProvider
								or, respectively, org.jooq.util.SchemaVersionProvider. Such classes must
								provide a default constructor - The value is a SELECT statement that returns
								one record with one column. The SELECT statement may contain a named variable
								called :catalog_name or :schema_name respectively - The value is a constant,
								such as a Maven property Schema versions will be generated into the javax.annotation.Generated
								annotation on generated artefacts. -->
							<schemaVersionProvider>SELECT 'v' || VERSION FROM
								CWMS_20.AV_DB_CHANGE_LOG chg1 JOIN(SELECT MAX(VERSION_DATE) as
								max_date FROM CWMS_20.AV_DB_CHANGE_LOG) chg2 ON
								chg1.VERSION_DATE=chg2.max_date
							</schemaVersionProvider>
						</database>
						<generate>
							<relations>false</relations>
							<queues>false</queues>
							<jpaAnnotations>false</jpaAnnotations>
							<globalObjectReferences>false</globalObjectReferences>
							<generatedAnnotation>true</generatedAnnotation>
						</generate>
						<target>
							<packageName>usace.cwms.db.jooq.codegen</packageName>
							<!--The destination directory of your generated classes -->
							<directory>${project.build.directory}/generated-src/main/java</directory>
						</target>
						<!-- The naming strategy used for class and field names. You may override
							this with your custom naming strategy. Some examples follow Defaults to org.jooq.util.DefaultGeneratorStrategy -->
						<strategy>
							<name>usace.cwms.db.jooq.generator.CwmsDefaultGeneratorStrategy</name>
						</strategy>
					</generator>
				</configuration>

			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-plugin-plugin</artifactId>
				<version>3.5</version>
				<configuration>
					<!-- see http://jira.codehaus.org/browse/MNG-5346 -->
					<skipErrorNoDescriptorsFound>true</skipErrorNoDescriptorsFound>
				</configuration>

				<executions>
					<execution>
						<id>mojo-descriptor</id>
						<goals>
							<goal>descriptor</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>${project.groupId}</groupId>
				<artifactId>cwms-db-version-generator</artifactId>
				<version>${project.version}</version>
				<configuration>
					<jdbc>
						<!--These properties are read from the cwms-db-properties-reader plugin-->
						<url>${oracle.codegen.url}</url>
						<user>${office.primary.code}hectest</user>
						<password>${oracle.hectest.password}</password>
					</jdbc>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.oracle.database.jdbc</groupId>
						<artifactId>ojdbc8</artifactId>
						<version>${oracle.jdbc.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>schemaPropertyGenerator</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.0.2</version>
				<configuration>
					<archive>
						<index>true</index>
						<manifest>
							<addClasspath>true</addClasspath>
						</manifest>
						<manifestSections>
							<manifestSection>
								<name>CWMS Database Version Info</name>
								<manifestEntries>
									<cwms-database-version-application>${cwms-database-version-application}
									</cwms-database-version-application>
									<cwms-database-version>${project.version}</cwms-database-version>
									<cwms-database-version-date>${cwms-database-version-date}
									</cwms-database-version-date>
									<cwms-database-version-applydate>${cwms-database-version-applydate}
									</cwms-database-version-applydate>
									<cwms-database-version-description>${cwms-database-version-description}
									</cwms-database-version-description>
								</manifestEntries>
							</manifestSection>
							<manifestSection>
								<name>jOOQ Code Generation Info</name>
								<manifestEntries>
									<code-generation-date>${code-generation-date}</code-generation-date>
								</manifestEntries>
							</manifestSection>
						</manifestSections>
					</archive>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
